C166 COMPILER V7.00, U0C1                                                                  04/01/2020 13:45:19 PAGE 1   


C166 COMPILER V7.00, COMPILATION OF MODULE U0C1
OBJECT MODULE PLACED IN U0C1.obj
COMPILER INVOKED BY: H:\KEILC166\C166\BIN\C166.EXE source\U0C1.c MODV2 BROWSE INCDIR(.\source;.\lib) MODV2 DEBUG PRINT(.
                    -\U0C1.lst) OBJECT(U0C1.obj) 

 stmt lvl     source

    1         //****************************************************************************
    2         // @Module        Universal Serial Interface Channel (USIC) U0C1
    3         // @Filename      U0C1.c
    4         // @Project       tiaoshi.dav
    5         //----------------------------------------------------------------------------
    6         // @Controller    Infineon XC2267M-104F80
    7         //
    8         // @Compiler      Keil
    9         //
   10         // @Codegenerator 2.0
   11         //
   12         // @Description   This file contains functions that use the U0C1 module.
   13         //
   14         //----------------------------------------------------------------------------
   15         // @Date          2020/1/14 16:27:47
   16         //
   17         //****************************************************************************
   18         
   19         // USER CODE BEGIN (U0C1_General,1)
   20         
   21         // USER CODE END
   22         
   23         
   24         
   25         //****************************************************************************
   26         // @Project Includes
   27         //****************************************************************************
   28         
   29         #include "MAIN.h"
   30         
   31         // USER CODE BEGIN (U0C1_General,2)
   32         
   33         // USER CODE END
   34         
   35         
   36         //****************************************************************************
   37         // @Macros
   38         //****************************************************************************
   39         
   40         // USER CODE BEGIN (U0C1_General,3)
   41         
   42         // USER CODE END
   43         
   44         
   45         //****************************************************************************
   46         // @Defines
   47         //****************************************************************************
   48         
   49         // USER CODE BEGIN (U0C1_General,4)
   50         
   51         // USER CODE END
   52         
   53         
   54         //****************************************************************************
C166 COMPILER V7.00, U0C1                                                                  04/01/2020 13:45:19 PAGE 2   

   55         // @Typedefs
   56         //****************************************************************************
   57         
   58         // USER CODE BEGIN (U0C1_General,5)
   59         
   60         // USER CODE END
   61         
   62         
   63         //****************************************************************************
   64         // @Imported Global Variables
   65         //****************************************************************************
   66         
   67         // USER CODE BEGIN (U0C1_General,6)
   68         
   69         // USER CODE END
   70         
   71         
   72         //****************************************************************************
   73         // @Global Variables
   74         //****************************************************************************
   75         
   76         // USER CODE BEGIN (U0C1_General,7)
   77         
   78         // USER CODE END
   79         
   80         
   81         //****************************************************************************
   82         // @External Prototypes
   83         //****************************************************************************
   84         
   85         // USER CODE BEGIN (U0C1_General,8)
   86         
   87         // USER CODE END
   88         
   89         
   90         //****************************************************************************
   91         // @Prototypes Of Local Functions
   92         //****************************************************************************
   93         
   94         // USER CODE BEGIN (U0C1_General,9)
   95         
   96         // USER CODE END
   97         
   98         
   99         //****************************************************************************
  100         // @Function      void U0C1_IIC_vInit(void)
  101         //
  102         //----------------------------------------------------------------------------
  103         // @Description   This is the initialization function of the U0C1 function
  104         //                library. It is assumed that the SFRs used by this library
  105         //                are in reset state.
  106         //
  107         //----------------------------------------------------------------------------
  108         // @Returnvalue   None
  109         //
  110         //----------------------------------------------------------------------------
  111         // @Parameters    None
  112         //
  113         //----------------------------------------------------------------------------
  114         // @Date          2020/1/14
  115         //
  116         //****************************************************************************
C166 COMPILER V7.00, U0C1                                                                  04/01/2020 13:45:19 PAGE 3   

  117         
  118         // USER CODE BEGIN (Init,1)
  119         
  120         // USER CODE END
  121         
  122         void U0C1_IIC_vInit(void)
  123         {
  124  1        // USER CODE BEGIN (Init,2)
  125  1      
  126  1        // USER CODE END
  127  1      
  128  1        ///  -----------------------------------------------------------------------
  129  1        ///  Configuration of the U0C1 Operation Mode:
  130  1        ///  -----------------------------------------------------------------------
  131  1        ///  - The Master mode is selected
  132  1      
  133  1        ///  -----------------------------------------------------------------------
  134  1        ///  Configuration of the U0C1 Fractional Divider:
  135  1        ///  -----------------------------------------------------------------------
  136  1        ///  - The Fractional divider is selected
  137  1        ///  - The step value STEP = 640
  138  1      
  139  1        U0C1_FDRL      =  0x8280;      // load U0C1 fractional divider register
  140  1      
  141  1        ///  -----------------------------------------------------------------------
  142  1        ///  Configuration of the U0C1 Baudrate Generator:
  143  1        ///  -----------------------------------------------------------------------
  144  1        ///  - The selected BaudRate is 100.000 kbaud
  145  1        ///  - The PreDivider for CTQ, PCTQ = 1
  146  1        ///  - The Denominator for CTQ, DCTQ = 9
  147  1        ///  - The Divider factor PDIV = 24
  148  1      
  149  1        U0C1_BRGL      =  0x2500;      // load U0C1 load baud rate generator 
  150  1                                       // register L
  151  1        U0C1_BRGH      =  0x0018;      // load U0C1 load baud rate generator 
  152  1                                       // register H
  153  1      
  154  1        ///  -----------------------------------------------------------------------
  155  1        ///  Configuration of the U0C1 Input Control Register:
  156  1        ///  -----------------------------------------------------------------------
  157  1        ///  - The data input DX0A (P10.0) is selected
  158  1      
  159  1        U0C1_DX0CR     =  0x0000;      // load U0C1 input control register(Data)
  160  1      
  161  1        ///  - The clock input DX1B (P10.5) is selected
  162  1      
  163  1        U0C1_DX1CR     =  0x0001;      // load U0C1 input control register(Clock)
  164  1      
  165  1        ///  -----------------------------------------------------------------------
  166  1        ///  Configuration of the U0C1 Interrupt Node Pointer Register:
  167  1        ///  -----------------------------------------------------------------------
  168  1      
  169  1        U0C1_INPRL     =  0x0000;      // load U0C1 Interrupt Node Pointer register 
  170  1                                       // L
  171  1        U0C1_INPRH     =  0x0000;      // load U0C1 Interrupt Node Pointer register 
  172  1                                       // H
  173  1      
  174  1        ///  -----------------------------------------------------------------------
  175  1        ///  Configuration of the U0C1 Shift Control:
  176  1        ///  -----------------------------------------------------------------------
  177  1        ///  - Transmit/Receive shift MSB first
  178  1        ///  - The passive data level is 1
C166 COMPILER V7.00, U0C1                                                                  04/01/2020 13:45:19 PAGE 4   

  179  1        ///  - The shift control signal is active, data frame transfer is possible
  180  1        ///  - The frame length is 63 and the word length is 7
  181  1      
  182  1        U0C1_SCTRL     =  0x0303;      // load U0C1 shift control register L
  183  1        U0C1_SCTRH     =  0x073F;      // load U0C1 shift control register H
  184  1      
  185  1        ///  -----------------------------------------------------------------------
  186  1        ///  Configuration of the U0C1 Transmit Control/Status Register:
  187  1        ///  -----------------------------------------------------------------------
  188  1        ///  - TBUF data single shot mode: TBUF data transferred only once
  189  1        ///  - TBUF data transmission starts if TDV = 1
  190  1      
  191  1        U0C1_TCSRL     =  0x0500;      // load U0C1 transmit control/status 
  192  1                                       // register L
  193  1        U0C1_TCSRH     =  0x0000;      // load U0C1 transmit control/status 
  194  1                                       // register H
  195  1      
  196  1        ///  -----------------------------------------------------------------------
  197  1        ///  Configuration of the U0C1 Protocol Control Register:
  198  1        ///  -----------------------------------------------------------------------
  199  1        ///  - The Symbol Timing, A symbol contains 10 time quanta
  200  1      
  201  1        U0C1_PCRL      =  0x0000;      // load U0C1 protocol control register L
  202  1        U0C1_PCRH      =  0x3000;      // load U0C1 protocol control register H
  203  1      
  204  1        ///  -----------------------------------------------------------------------
  205  1        ///  Configuration of U0C1 FIFO:
  206  1        ///  -----------------------------------------------------------------------
  207  1        ///  -----------------------------------------------------------------------
  208  1        ///  Configuration of U0C1 Transmitter Buffer Conrol Register:
  209  1        ///  -----------------------------------------------------------------------
  210  1        ///  - Transmit FIFO buffer is disabled
  211  1        ///  -----------------------------------------------------------------------
  212  1        ///  Configuration of U0C1 Receiver Buffer Conrol Register:
  213  1        ///  -----------------------------------------------------------------------
  214  1        ///  - Receive FIFO buffer is disabled
  215  1        ///  -----------------------------------------------------------------------
  216  1        ///  Configuration of the used U0C1 Interrupts:
  217  1        ///  -----------------------------------------------------------------------
  218  1        ///  -----------------------------------------------------------------------
  219  1        ///  Configuration of the used U0C1 Port Pins:
  220  1        ///  -----------------------------------------------------------------------
  221  1        ///  - P10.0 is used for USIC0 Channel1 Shift Data output(DOUT)
  222  1        ///  - P10.5 is used for USIC0 Channel0 Shift Clock output(SCLKOUT)
  223  1      
  224  1        P10_IOCR00 = 0x00D0;    //set direction register
  225  1        P10_IOCR05 = 0x00D0;    //set direction register
  226  1      
  227  1      
  228  1      
  229  1        // USER CODE BEGIN (U0C1_Function,3)
  230  1      
  231  1        // USER CODE END
  232  1      
  233  1      
  234  1      
  235  1      } //  End of function U0C1_IIC_vInit
  236         
  237         
  238         //****************************************************************************
  239         // @Function      void U0C1_IIC_vWriteData(uword uwTDF, uword uwData) 
  240         //
C166 COMPILER V7.00, U0C1                                                                  04/01/2020 13:45:19 PAGE 5   

  241         //----------------------------------------------------------------------------
  242         // @Description   This function writes data to the U0C1 Transmit buffer 
  243         //                (U0C1_TBUF00). valid TDF & 8 bit data.
  244         //                The valid TDF formats are available in U0C1 header file
  245         //                Defines section. Ex..
  246         //                 Master start                  U0C1TDF_MStart
  247         //                 Master Transmit               U0C1TDF_MTxData
  248         //                 Master receive with Ack 0     U0C1TDF_MRxAck0
  249         //                 Master receive with Ack 1     U0C1TDF_MRxAck1
  250         //                 Master stop                   U0C1TDF_MStop
  251         //                
  252         //                7 bit address mode:
  253         //                if 7 bit slave address is 0x17 at PCRL[15:9] of the slave,
  254         //                user has to transmit 0x2E (0x17 << 1) to select this slave.
  255         //                Please refer User Manual for the detailed explanation.
  256         //                
  257         //                User can use the macro U0C1_IIC_vSlaveAddrFormat(Addr)
  258         //                to left shift the address by 1,
  259         //                U0C1_IIC_vWriteData(U0C1TDF_MStart, 
  260         //                U0C1_IIC_vSlaveAddrFormat(Addr) + U0C1IIC_WRITE);
  261         //                
  262         //                10 bit address mode:
  263         //                if 10 bit slave address is 0x1C4 at PCRL[10:9] & PCRL[7:0]
  264         //                of the slave, user has to transmit 0xF2 first and 
  265         //                0xC4 second to select this slave.
  266         //                
  267         //                U0C1_IIC_vWriteData(U0C1TDF_MStart, uwDeviceAddr + 
  268         //                U0C1IIC_WRITE);
  269         //                U0C1_IIC_vWriteData(U0C1TDF_MTxData, uwSubAddr);
  270         //
  271         //----------------------------------------------------------------------------
  272         // @Returnvalue   None
  273         //
  274         //----------------------------------------------------------------------------
  275         // @Parameters    uwTDF: 
  276         //                valid Transmit Data Format TDF code
  277         // @Parameters    uwData: 
  278         //                8 bit data to be transmitted
  279         //
  280         //----------------------------------------------------------------------------
  281         // @Date          2020/1/14
  282         //
  283         //****************************************************************************
  284         
  285         // USER CODE BEGIN (IICWriteData,1)
  286         
  287         // USER CODE END
  288         
  289         void U0C1_IIC_vWriteData(uword uwTDF, uword uwData)
  290         {
  291  1      
  292  1        while(U0C1_TCSRL & 0x0080);             // check TDV, wait until TBUF is ready
  293  1      
  294  1        U0C1_PSCR   |= 0x2000;                                       // clear PSR_TBIF
  295  1        U0C1_TBUF00  = ((uwTDF << 8) & 0x0700) | (uwData & 0x00FF);  // load TBUF00
  296  1      
  297  1      } //  End of function U0C1_IIC_vWriteData
  298         
  299         
  300         //****************************************************************************
  301         // @Function      uword U0C1_IIC_uwReadData(void) 
  302         //
C166 COMPILER V7.00, U0C1                                                                  04/01/2020 13:45:19 PAGE 6   

  303         //----------------------------------------------------------------------------
  304         // @Description   This function reads out the content of the U0C1 receive 
  305         //                buffer (U0C1_RBUF).
  306         //
  307         //----------------------------------------------------------------------------
  308         // @Returnvalue   Value of the register U0C1_RBUF
  309         //
  310         //----------------------------------------------------------------------------
  311         // @Parameters    None
  312         //
  313         //----------------------------------------------------------------------------
  314         // @Date          2020/1/14
  315         //
  316         //****************************************************************************
  317         
  318         // USER CODE BEGIN (IICReadData,1)
  319         
  320         // USER CODE END
  321         
  322         uword U0C1_IIC_uwReadData(void)
  323         {
  324  1      
  325  1        while(!((U0C1_PSR & 0x8000) || (U0C1_PSR & 0x4000)));
  326  1      
  327  1        U0C1_PSCR   |= 0xC000;         // clear PSR_AIF & PSR_RIF
  328  1        return(U0C1_RBUF);             // return receive buffer register
  329  1      
  330  1      } //  End of function U0C1_IIC_uwReadData
  331         
  332         
  333         
  334         
  335         // USER CODE BEGIN (U0C1_General,10)
  336         
  337         // USER CODE END
  338         


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         252     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =    --------     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
