C166 COMPILER V7.00, U2C0                                                                  04/01/2020 13:45:19 PAGE 1   


C166 COMPILER V7.00, COMPILATION OF MODULE U2C0
OBJECT MODULE PLACED IN U2C0.obj
COMPILER INVOKED BY: H:\KEILC166\C166\BIN\C166.EXE source\U2C0.c MODV2 BROWSE INCDIR(.\source;.\lib) MODV2 DEBUG PRINT(.
                    -\U2C0.lst) OBJECT(U2C0.obj) 

 stmt lvl     source

    1         //****************************************************************************
    2         // @Module        Universal Serial Interface Channel (USIC) U2C0
    3         // @Filename      U2C0.c
    4         // @Project       tiaoshi.dav
    5         //----------------------------------------------------------------------------
    6         // @Controller    Infineon XC2267M-104F80
    7         //
    8         // @Compiler      Keil
    9         //
   10         // @Codegenerator 2.1
   11         //
   12         // @Description   This file contains functions that use the U2C0 module.
   13         //
   14         //----------------------------------------------------------------------------
   15         // @Date          2015/3/16 12:47:13
   16         //
   17         //****************************************************************************
   18         
   19         // USER CODE BEGIN (U2C0_General,1)
   20         
   21         // USER CODE END
   22         
   23         
   24         
   25         //****************************************************************************
   26         // @Project Includes
   27         //****************************************************************************
   28         
   29         #include "MAIN.h"
   30         
   31         // USER CODE BEGIN (U2C0_General,2)
   32         
   33         // USER CODE END
   34         
   35         
   36         //****************************************************************************
   37         // @Macros
   38         //****************************************************************************
   39         
   40         // USER CODE BEGIN (U2C0_General,3)
   41         
   42         // USER CODE END
   43         
   44         
   45         //****************************************************************************
   46         // @Defines
   47         //****************************************************************************
   48         
   49         // USER CODE BEGIN (U2C0_General,4)
   50         
   51         // USER CODE END
   52         
   53         
   54         //****************************************************************************
C166 COMPILER V7.00, U2C0                                                                  04/01/2020 13:45:19 PAGE 2   

   55         // @Typedefs
   56         //****************************************************************************
   57         
   58         // USER CODE BEGIN (U2C0_General,5)
   59         
   60         // USER CODE END
   61         
   62         
   63         //****************************************************************************
   64         // @Imported Global Variables
   65         //****************************************************************************
   66         
   67         // USER CODE BEGIN (U2C0_General,6)
   68         
   69         // USER CODE END
   70         
   71         
   72         //****************************************************************************
   73         // @Global Variables
   74         //****************************************************************************
   75         
   76         // USER CODE BEGIN (U2C0_General,7)
   77         
   78         // USER CODE END
   79         
   80         
   81         //****************************************************************************
   82         // @External Prototypes
   83         //****************************************************************************
   84         
   85         // USER CODE BEGIN (U2C0_General,8)
   86         
   87         // USER CODE END
   88         
   89         
   90         //****************************************************************************
   91         // @Prototypes Of Local Functions
   92         //****************************************************************************
   93         
   94         // USER CODE BEGIN (U2C0_General,9)
   95         
   96         // USER CODE END
   97         
   98         
   99         //****************************************************************************
  100         // @Function      void U2C0_SSC_vInit(void)
  101         //
  102         //----------------------------------------------------------------------------
  103         // @Description   This is the initialization function of the U2C0 function
  104         //                library. It is assumed that the SFRs used by this library
  105         //                are in reset state.
  106         //
  107         //----------------------------------------------------------------------------
  108         // @Returnvalue   None
  109         //
  110         //----------------------------------------------------------------------------
  111         // @Parameters    None
  112         //
  113         //----------------------------------------------------------------------------
  114         // @Date          2015/3/16
  115         //
  116         //****************************************************************************
C166 COMPILER V7.00, U2C0                                                                  04/01/2020 13:45:19 PAGE 3   

  117         
  118         // USER CODE BEGIN (Init,1)
  119         
  120         // USER CODE END
  121         
  122         void U2C0_SSC_vInit(void)
  123         {
  124  1        // USER CODE BEGIN (Init,2)
  125  1      
  126  1        // USER CODE END
  127  1      
  128  1        ///  -----------------------------------------------------------------------
  129  1        ///  Configuration of the U2C0 Fractional Divider:
  130  1        ///  -----------------------------------------------------------------------
  131  1        ///  - The Normal divider is selected
  132  1        ///  - The step value STEP = 1022
  133  1      
  134  1        U2C0_FDRL      =  0x43FE;      // load U2C0 fractional divider register
  135  1      
  136  1        ///  -----------------------------------------------------------------------
  137  1        ///  Configuration of the U2C0 Baudrate Generator:
  138  1        ///  -----------------------------------------------------------------------
  139  1        ///  - The selected BaudRate is 500.000 kbaud
  140  1        ///  - The PreDivider for CTQ, PCTQ = 0
  141  1        ///  - The Denominator for CTQ, DCTQ = 0
  142  1        ///  - The Divider factor PDIV = 39
  143  1      
  144  1        U2C0_BRGL      =  0x0000;      // load U2C0 load baud rate generator 
  145  1                                       // register L
  146  1      
  147  1        U2C0_BRGH      =  0x0027;      // load U2C0 load baud rate generator 
  148  1                                       // register H
  149  1      
  150  1        ///  -----------------------------------------------------------------------
  151  1        ///  Configuration of the U2C0 Input Control Register:
  152  1        ///  -----------------------------------------------------------------------
  153  1        ///  - The data input DX0C is selected
  154  1      
  155  1        U2C0_DX0CR     =  0x0012;      // load U2C0 input control register(Data)
  156  1      
  157  1        ///  -----------------------------------------------------------------------
  158  1        ///  Configuration of the U2C0 Interrupt Node Pointer Register:
  159  1        ///  -----------------------------------------------------------------------
  160  1      
  161  1        U2C0_INPRL     =  0x0000;      // load U2C0 Interrupt Node Pointer register 
  162  1                                       // L
  163  1        U2C0_INPRH     =  0x0000;      // load U2C0 Interrupt Node Pointer register 
  164  1                                       // H
  165  1      
  166  1        ///  -----------------------------------------------------------------------
  167  1        ///  Configuration of the U2C0 Shift Control:
  168  1        ///  -----------------------------------------------------------------------
  169  1        ///  - Transmit/Receive MSB first is selected
  170  1      
  171  1        U2C0_SCTRL     =  0x0103;      // load U2C0 shift control register L
  172  1        U2C0_SCTRH     =  0x0707;      // load U2C0 shift control register H
  173  1      
  174  1        ///  -----------------------------------------------------------------------
  175  1        ///  Configuration of the U2C0 Transmit Control/Status Register:
  176  1        ///  -----------------------------------------------------------------------
  177  1      
  178  1        U2C0_TCSRL     =  0x0500;      // load U2C0 transmit control/status 
C166 COMPILER V7.00, U2C0                                                                  04/01/2020 13:45:19 PAGE 4   

  179  1                                       // register L
  180  1        U2C0_TCSRH     =  0x0000;      // load U2C0 transmit control/status 
  181  1                                       // register H
  182  1      
  183  1        ///  -----------------------------------------------------------------------
  184  1        ///  Configuration of the U2C0 Protocol Control Register:
  185  1        ///  -----------------------------------------------------------------------
  186  1      
  187  1        U2C0_PCRL      =  0x0F47;      // load U2C0 protocol control register L
  188  1        U2C0_PCRH      =  0x0000;      // load U2C0 protocol control register H
  189  1      
  190  1        ///  -----------------------------------------------------------------------
  191  1        ///  Configuration of the U2C0 Protocol Status Register:
  192  1        ///  -----------------------------------------------------------------------
  193  1        ///  - TBIF is set to simplify polling
  194  1      
  195  1        U2C0_PSR      |=  0x2000;      // load U2C0 protocol status register
  196  1      
  197  1      
  198  1        ///  -----------------------------------------------------------------------
  199  1        ///  Configuration of the used U2C0 Interrupts:
  200  1        ///  -----------------------------------------------------------------------
  201  1      
  202  1        ///  -----------------------------------------------------------------------
  203  1        ///  Configuration of the used U2C0 Port Pins:
  204  1        ///  -----------------------------------------------------------------------
  205  1        P1_IOCR05      =  0x0020;      // load port register for data input
  206  1      
  207  1        ///  - P1.6 is used for USIC2 Channel0 Shift Data output(DOUT)
  208  1        ///  - P1.7 is used for USIC2 Channel0 Shift Clock Output(SCLKOUT)
  209  1      
  210  1        P1_IOCR06 = 0x00B0;    //set direction register
  211  1        P1_IOCR07 = 0x00B0;    //set direction register
  212  1      
  213  1      
  214  1        ///  -----------------------------------------------------------------------
  215  1        ///  Configuration of U2C0 FIFO:
  216  1        ///  -----------------------------------------------------------------------
  217  1        ///  -----------------------------------------------------------------------
  218  1        ///  Configuration of U2C0 Transmitter Buffer Conrol Register:
  219  1        ///  -----------------------------------------------------------------------
  220  1        ///  - Transmit FIFO buffer is disabled
  221  1        ///  -----------------------------------------------------------------------
  222  1        ///  Configuration of U2C0 Receiver Buffer Conrol Register:
  223  1        ///  -----------------------------------------------------------------------
  224  1        ///  - Receive FIFO buffer is disabled
  225  1      
  226  1        // USER CODE BEGIN (U2C0_Function,3)
  227  1      
  228  1        // USER CODE END
  229  1      
  230  1      
  231  1      
  232  1      } //  End of function U2C0_SSC_vInit
  233         
  234         
  235         //****************************************************************************
  236         // @Function      void U2C0_SSC_vSendData(uword uwData) 
  237         //
  238         //----------------------------------------------------------------------------
  239         // @Description   This function clears the transmit buffer Indication flag 
  240         //                first  & then writes the send data initialization word into 
C166 COMPILER V7.00, U2C0                                                                  04/01/2020 13:45:19 PAGE 5   

  241         //                the transmit buffer register.
  242         //                
  243         //                Note: 
  244         //                In a multiprocessor system the master with this function 
  245         //                has the possibility to send data to the selected slave.
  246         //
  247         //----------------------------------------------------------------------------
  248         // @Returnvalue   None
  249         //
  250         //----------------------------------------------------------------------------
  251         // @Parameters    uwData: 
  252         //                Data to be send
  253         //
  254         //----------------------------------------------------------------------------
  255         // @Date          2015/3/16
  256         //
  257         //****************************************************************************
  258         
  259         // USER CODE BEGIN (SSCSendData,1)
  260         
  261         // USER CODE END
  262         
  263         void U2C0_SSC_vSendData(uword uwData)
  264         {
  265  1      
  266  1        while(!(U2C0_PSR & 0x2000));   //  wait until tx buffer indication flag is set
  267  1      
  268  1        U2C0_PSCR     |= 0x2000;   //  clear transmit buffer indication flag
  269  1        U2C0_TBUF00    = uwData;   //  load transmit buffer register
  270  1      
  271  1      } //  End of function U2C0_SSC_vSendData
  272         
  273         
  274         //****************************************************************************
  275         // @Function      uword U2C0_SSC_uwGetData(void) 
  276         //
  277         //----------------------------------------------------------------------------
  278         // @Description   This function reads out the content of the receive buffer 
  279         //                register which contains the received data.
  280         //
  281         //----------------------------------------------------------------------------
  282         // @Returnvalue   Data that has been received
  283         //
  284         //----------------------------------------------------------------------------
  285         // @Parameters    None
  286         //
  287         //----------------------------------------------------------------------------
  288         // @Date          2015/3/16
  289         //
  290         //****************************************************************************
  291         
  292         // USER CODE BEGIN (SSCGetData,1)
  293         
  294         // USER CODE END
  295         
  296         uword U2C0_SSC_uwGetData(void)
  297         {
  298  1        while(!((U2C0_PSR & 0x8000) || (U2C0_PSR & 0x4000)));
  299  1      
  300  1        U2C0_PSCR     |= 0xC000;   //  clear alternate receive indication flag & receive indication flag
  301  1        return(U2C0_RBUF);         // return receive buffer register
  302  1      
C166 COMPILER V7.00, U2C0                                                                  04/01/2020 13:45:19 PAGE 6   

  303  1      
  304  1      } //  End of function U2C0_SSC_uwGetData
  305         
  306         
  307         //****************************************************************************
  308         // @Function      ubyte U2C0_SSC_ubTxDataReady(void) 
  309         //
  310         //----------------------------------------------------------------------------
  311         // @Description   This function can be used for checking up the status of the 
  312         //                transmit shift indication flag U2C0_PSR_TSIF. This function 
  313         //                shows when the sending of data has terminated. By 
  314         //                continuously polling this flag after the function 
  315         //                U2C0_SSC_vSendData has been called, it is possible to 
  316         //                establish when U2C0 has terminated its task.
  317         //
  318         //----------------------------------------------------------------------------
  319         // @Returnvalue   0 if transmitter is busy, else 1
  320         //
  321         //----------------------------------------------------------------------------
  322         // @Parameters    None
  323         //
  324         //----------------------------------------------------------------------------
  325         // @Date          2015/3/16
  326         //
  327         //****************************************************************************
  328         
  329         // USER CODE BEGIN (SSCTxDataReady,1)
  330         
  331         // USER CODE END
  332         
  333         ubyte U2C0_SSC_ubTxDataReady(void)
  334         {
  335  1        ubyte ubReturnValue;
  336  1      
  337  1        ubReturnValue = 0;
  338  1      
  339  1        if(U2C0_PSR & 0x1000)               // if sending of data is terminated
  340  1        {
  341  2          ubReturnValue = 1;
  342  2          U2C0_PSCR |= 0x1000;
  343  2        }
  344  1        return(ubReturnValue);         
  345  1      
  346  1      } //  End of function U2C0_SSC_ubTxDataReady
  347         
  348         
  349         
  350         
  351         // USER CODE BEGIN (U2C0_General,10)
  352         
  353         // USER CODE END
  354         


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         288     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =    --------     --------
  FAR-DATA SIZE    =    --------     --------
C166 COMPILER V7.00, U2C0                                                                  04/01/2020 13:45:19 PAGE 7   

  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
