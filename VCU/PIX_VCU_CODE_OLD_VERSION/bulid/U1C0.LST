C166 COMPILER V7.00, U1C0                                                                  04/01/2020 13:21:47 PAGE 1   


C166 COMPILER V7.00, COMPILATION OF MODULE U1C0
OBJECT MODULE PLACED IN U1C0.OBJ
COMPILER INVOKED BY: H:\KEILC166\C166\BIN\C166.EXE U1C0.c MODV2 BROWSE MODV2 DEBUG

 stmt lvl     source

    1         //****************************************************************************
    2         // @Module        Universal Serial Interface Channel (USIC) U1C0
    3         // @Filename      U1C0.c
    4         // @Project       tiaoshi.dav
    5         //----------------------------------------------------------------------------
    6         // @Controller    Infineon XC2267M-104F80
    7         //
    8         // @Compiler      Keil
    9         //
   10         // @Codegenerator 2.0
   11         //
   12         // @Description   This file contains functions that use the U1C0 module.
   13         //
   14         //----------------------------------------------------------------------------
   15         // @Date          2020/1/14 16:27:48
   16         //
   17         //****************************************************************************
   18         
   19         // USER CODE BEGIN (U1C0_General,1)
   20         
   21         // USER CODE END
   22         
   23         
   24         
   25         //****************************************************************************
   26         // @Project Includes
   27         //****************************************************************************
   28         
   29         #include "MAIN.h"
   30         
   31         // USER CODE BEGIN (U1C0_General,2)
   32         
   33         // USER CODE END
   34         
   35         
   36         //****************************************************************************
   37         // @Macros
   38         //****************************************************************************
   39         
   40         // USER CODE BEGIN (U1C0_General,3)
   41         
   42         // USER CODE END
   43         
   44         
   45         //****************************************************************************
   46         // @Defines
   47         //****************************************************************************
   48         
   49         // USER CODE BEGIN (U1C0_General,4)
   50         
   51         // USER CODE END
   52         
   53         
   54         //****************************************************************************
   55         // @Typedefs
C166 COMPILER V7.00, U1C0                                                                  04/01/2020 13:21:47 PAGE 2   

   56         //****************************************************************************
   57         
   58         // USER CODE BEGIN (U1C0_General,5)
   59         
   60         // USER CODE END
   61         
   62         
   63         //****************************************************************************
   64         // @Imported Global Variables
   65         //****************************************************************************
   66         
   67         // USER CODE BEGIN (U1C0_General,6)
   68         
   69         // USER CODE END
   70         
   71         
   72         //****************************************************************************
   73         // @Global Variables
   74         //****************************************************************************
   75         
   76         // USER CODE BEGIN (U1C0_General,7)
   77         
   78         // USER CODE END
   79         
   80         
   81         //****************************************************************************
   82         // @External Prototypes
   83         //****************************************************************************
   84         
   85         // USER CODE BEGIN (U1C0_General,8)
   86         
   87         // USER CODE END
   88         
   89         
   90         //****************************************************************************
   91         // @Prototypes Of Local Functions
   92         //****************************************************************************
   93         
   94         // USER CODE BEGIN (U1C0_General,9)
   95         
   96         // USER CODE END
   97         
   98         
   99         //****************************************************************************
  100         // @Function      void U1C0_SSC_vInit(void)
  101         //
  102         //----------------------------------------------------------------------------
  103         // @Description   This is the initialization function of the U1C0 function
  104         //                library. It is assumed that the SFRs used by this library
  105         //                are in reset state.
  106         //
  107         //----------------------------------------------------------------------------
  108         // @Returnvalue   None
  109         //
  110         //----------------------------------------------------------------------------
  111         // @Parameters    None
  112         //
  113         //----------------------------------------------------------------------------
  114         // @Date          2020/1/14
  115         //
  116         //****************************************************************************
  117         
C166 COMPILER V7.00, U1C0                                                                  04/01/2020 13:21:47 PAGE 3   

  118         // USER CODE BEGIN (Init,1)
  119         
  120         // USER CODE END
  121         
  122         void U1C0_SSC_vInit(void)
  123         {
  124  1        // USER CODE BEGIN (Init,2)
  125  1      
  126  1        // USER CODE END
  127  1      
  128  1        ///  -----------------------------------------------------------------------
  129  1        ///  Configuration of the U1C0 Fractional Divider:
  130  1        ///  -----------------------------------------------------------------------
  131  1        ///  - The Fractional divider is selected
  132  1        ///  - The step value STEP = 870
  133  1      
  134  1        U1C0_FDRL      =  0x8366;      // load U1C0 fractional divider register
  135  1      
  136  1        ///  -----------------------------------------------------------------------
  137  1        ///  Configuration of the U1C0 Baudrate Generator:
  138  1        ///  -----------------------------------------------------------------------
  139  1        ///  - The selected BaudRate is 2.000 Mbaud
  140  1        ///  - The PreDivider for CTQ, PCTQ = 0
  141  1        ///  - The Denominator for CTQ, DCTQ = 0
  142  1        ///  - The Divider factor PDIV = 16
  143  1      
  144  1        U1C0_BRGL      =  0x0000;      // load U1C0 load baud rate generator 
  145  1                                       // register L
  146  1      
  147  1        U1C0_BRGH      =  0x0010;      // load U1C0 load baud rate generator 
  148  1                                       // register H
  149  1      
  150  1        ///  -----------------------------------------------------------------------
  151  1        ///  Configuration of the U1C0 Input Control Register:
  152  1        ///  -----------------------------------------------------------------------
  153  1        ///  - The data input DX0B is selected
  154  1      
  155  1        U1C0_DX0CR     =  0x0011;      // load U1C0 input control register(Data)
  156  1      
  157  1        ///  -----------------------------------------------------------------------
  158  1        ///  Configuration of the U1C0 Interrupt Node Pointer Register:
  159  1        ///  -----------------------------------------------------------------------
  160  1      
  161  1        U1C0_INPRL     =  0x0000;      // load U1C0 Interrupt Node Pointer register 
  162  1                                       // L
  163  1        U1C0_INPRH     =  0x0000;      // load U1C0 Interrupt Node Pointer register 
  164  1                                       // H
  165  1      
  166  1        ///  -----------------------------------------------------------------------
  167  1        ///  Configuration of the U1C0 Shift Control:
  168  1        ///  -----------------------------------------------------------------------
  169  1        ///  - Transmit/Receive MSB first is selected
  170  1      
  171  1        U1C0_SCTRL     =  0x0103;      // load U1C0 shift control register L
  172  1        U1C0_SCTRH     =  0x0F0F;      // load U1C0 shift control register H
  173  1      
  174  1        ///  -----------------------------------------------------------------------
  175  1        ///  Configuration of the U1C0 Transmit Control/Status Register:
  176  1        ///  -----------------------------------------------------------------------
  177  1      
  178  1        U1C0_TCSRL     =  0x0500;      // load U1C0 transmit control/status 
  179  1                                       // register L
C166 COMPILER V7.00, U1C0                                                                  04/01/2020 13:21:47 PAGE 4   

  180  1        U1C0_TCSRH     =  0x0000;      // load U1C0 transmit control/status 
  181  1                                       // register H
  182  1      
  183  1        ///  -----------------------------------------------------------------------
  184  1        ///  Configuration of the U1C0 Protocol Control Register:
  185  1        ///  -----------------------------------------------------------------------
  186  1      
  187  1        U1C0_PCRL      =  0x0F47;      // load U1C0 protocol control register L
  188  1        U1C0_PCRH      =  0x0000;      // load U1C0 protocol control register H
  189  1      
  190  1        ///  -----------------------------------------------------------------------
  191  1        ///  Configuration of the U1C0 Protocol Status Register:
  192  1        ///  -----------------------------------------------------------------------
  193  1        ///  - TBIF is set to simplify polling
  194  1      
  195  1        U1C0_PSR      |=  0x2000;      // load U1C0 protocol status register
  196  1      
  197  1      
  198  1        ///  -----------------------------------------------------------------------
  199  1        ///  Configuration of the used U1C0 Interrupts:
  200  1        ///  -----------------------------------------------------------------------
  201  1        ///  -----------------------------------------------------------------------
  202  1        ///  Configuration of the used U1C0 Port Pins:
  203  1        ///  -----------------------------------------------------------------------
  204  1        P0_IOCR01      =  0x0020;      // load port register for data input
  205  1      
  206  1        ///  - P0.0 is used for USIC1 Channel0 Shift Data output(DOUT)
  207  1        ///  - P0.2 is used for USIC1 Channel0 Shift Clock output(SCLKOUT)
  208  1      
  209  1        P0_IOCR00 = 0x0090;    //set direction register
  210  1        P0_IOCR02 = 0x0090;    //set direction register
  211  1      
  212  1      
  213  1        ///  -----------------------------------------------------------------------
  214  1        ///  Configuration of U1C0 FIFO:
  215  1        ///  -----------------------------------------------------------------------
  216  1        ///  -----------------------------------------------------------------------
  217  1        ///  Configuration of U1C0 Transmitter Buffer Conrol Register:
  218  1        ///  -----------------------------------------------------------------------
  219  1        ///  - Transmit FIFO buffer is disabled
  220  1        ///  -----------------------------------------------------------------------
  221  1        ///  Configuration of U1C0 Receiver Buffer Conrol Register:
  222  1        ///  -----------------------------------------------------------------------
  223  1        ///  - Receive FIFO buffer is disabled
  224  1      
  225  1        // USER CODE BEGIN (U1C0_Function,3)
  226  1      
  227  1        // USER CODE END
  228  1      
  229  1      
  230  1      
  231  1      } //  End of function U1C0_SSC_vInit
  232         
  233         
  234         //****************************************************************************
  235         // @Function      void U1C0_SSC_vSendData(uword uwData) 
  236         //
  237         //----------------------------------------------------------------------------
  238         // @Description   This function clears the transmit buffer Indication flag 
  239         //                first  & then writes the send data initialization word into 
  240         //                the transmit buffer register.
  241         //                
C166 COMPILER V7.00, U1C0                                                                  04/01/2020 13:21:47 PAGE 5   

  242         //                Note: 
  243         //                In a multiprocessor system the master with this function 
  244         //                has the possibility to send data to the selected slave.
  245         //
  246         //----------------------------------------------------------------------------
  247         // @Returnvalue   None
  248         //
  249         //----------------------------------------------------------------------------
  250         // @Parameters    uwData: 
  251         //                Data to be send
  252         //
  253         //----------------------------------------------------------------------------
  254         // @Date          2020/1/14
  255         //
  256         //****************************************************************************
  257         
  258         // USER CODE BEGIN (SSCSendData,1)
  259         
  260         // USER CODE END
  261         
  262         void U1C0_SSC_vSendData(uword uwData)
  263         {
  264  1      
  265  1        while(!(U1C0_PSR & 0x2000));   //  wait until tx buffer indication flag is set
  266  1      
  267  1        U1C0_PSCR     |= 0x2000;   //  clear transmit buffer indication flag
  268  1        U1C0_TBUF00    = uwData;   //  load transmit buffer register
  269  1      
  270  1      } //  End of function U1C0_SSC_vSendData
  271         
  272         
  273         //****************************************************************************
  274         // @Function      uword U1C0_SSC_uwGetData(void) 
  275         //
  276         //----------------------------------------------------------------------------
  277         // @Description   This function reads out the content of the receive buffer 
  278         //                register which contains the received data.
  279         //
  280         //----------------------------------------------------------------------------
  281         // @Returnvalue   Data that has been received
  282         //
  283         //----------------------------------------------------------------------------
  284         // @Parameters    None
  285         //
  286         //----------------------------------------------------------------------------
  287         // @Date          2020/1/14
  288         //
  289         //****************************************************************************
  290         
  291         // USER CODE BEGIN (SSCGetData,1)
  292         
  293         // USER CODE END
  294         
  295         uword U1C0_SSC_uwGetData(void)
  296         {
  297  1        while(!((U1C0_PSR & 0x8000) || (U1C0_PSR & 0x4000)));
  298  1      
  299  1        U1C0_PSCR     |= 0xC000;   //  clear alternate receive indication flag & receive indication flag
  300  1        return(U1C0_RBUF);         // return receive buffer register
  301  1      
  302  1      
  303  1      } //  End of function U1C0_SSC_uwGetData
C166 COMPILER V7.00, U1C0                                                                  04/01/2020 13:21:47 PAGE 6   

  304         
  305         
  306         //****************************************************************************
  307         // @Function      ubyte U1C0_SSC_ubTxDataReady(void) 
  308         //
  309         //----------------------------------------------------------------------------
  310         // @Description   This function can be used for checking up the status of the 
  311         //                transmit shift indication flag U1C0_PSR_TSIF. This function 
  312         //                shows when the sending of data has terminated. By 
  313         //                continuously polling this flag after the function 
  314         //                U1C0_SSC_vSendData has been called, it is possible to 
  315         //                establish when U1C0 has terminated its task.
  316         //
  317         //----------------------------------------------------------------------------
  318         // @Returnvalue   0 if transmitter is busy, else 1
  319         //
  320         //----------------------------------------------------------------------------
  321         // @Parameters    None
  322         //
  323         //----------------------------------------------------------------------------
  324         // @Date          2020/1/14
  325         //
  326         //****************************************************************************
  327         
  328         // USER CODE BEGIN (SSCTxDataReady,1)
  329         
  330         // USER CODE END
  331         
  332         ubyte U1C0_SSC_ubTxDataReady(void)
  333         {
  334  1        ubyte ubReturnValue;
  335  1      
  336  1        ubReturnValue = 0;
  337  1      
  338  1        if(U1C0_PSR & 0x1000)               // if sending of data is terminated
  339  1        {
  340  2          ubReturnValue = 1;
  341  2          U1C0_PSCR |= 0x1000;
  342  2        }
  343  1        return(ubReturnValue);         
  344  1      
  345  1      } //  End of function U1C0_SSC_ubTxDataReady
  346         
  347         
  348         
  349         
  350         // USER CODE BEGIN (U1C0_General,10)
  351         
  352         // USER CODE END
  353         


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         288     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =    --------     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
C166 COMPILER V7.00, U1C0                                                                  04/01/2020 13:21:47 PAGE 7   

  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
