C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 1   


C166 COMPILER V7.00, COMPILATION OF MODULE CAN
OBJECT MODULE PLACED IN CAN.obj
COMPILER INVOKED BY: H:\KEILC166\C166\BIN\C166.EXE source\CAN.c MODV2 BROWSE INCDIR(.\source;.\lib) MODV2 DEBUG PRINT(.\
                    -CAN.lst) OBJECT(CAN.obj) 

 stmt lvl     source

    1         //****************************************************************************
    2         // @Module        MultiCAN Module (CAN)
    3         // @Filename      CAN.c
    4         // @Project       tiaoshi.dav
    5         //----------------------------------------------------------------------------
    6         // @Controller    Infineon XC2267M-104F80
    7         //
    8         // @Compiler      Keil
    9         //
   10         // @Codegenerator 2.0
   11         //
   12         // @Description   This file contains functions that use the CAN module.
   13         //
   14         //----------------------------------------------------------------------------
   15         // @Date          2020/1/14 16:27:48
   16         //
   17         //****************************************************************************
   18         
   19         
   20         
   21         // USER CODE BEGIN (CAN_General,1)
   22         
   23         // USER CODE END
   24         
   25         
   26         
   27         //****************************************************************************
   28         // @Project Includes
   29         //****************************************************************************
   30         
   31         #include "MAIN.h"
   32         
   33         // USER CODE BEGIN (CAN_General,2)
   34         #include "remote.h"
   35         #include "steering.h"
   36         #include "vehicle_control.h"
   37         #include "breaking_control.h"
   38         
   39         #define DEBUG TRUE
   40         // USER CODE END
   41         
   42         
   43         //****************************************************************************
   44         // @Macros
   45         //****************************************************************************
   46         
   47         // USER CODE BEGIN (CAN_General,3)
   48         
   49         // USER CODE END
   50         
   51         
   52         //****************************************************************************
   53         // @Defines
   54         //****************************************************************************
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 2   

   55         
   56         // USER CODE BEGIN (CAN_General,4)
   57                  
   58         // USER CODE END
   59         
   60         
   61         //****************************************************************************
   62         // @Typedefs
   63         //****************************************************************************
   64         
   65         // USER CODE BEGIN (CAN_General,5)
   66         
   67         // USER CODE END
   68         
   69         
   70         //****************************************************************************
   71         // @Imported Global Variables
   72         //****************************************************************************
   73         
   74         // USER CODE BEGIN (CAN_General,6)
   75         
   76         // USER CODE END
   77         
   78         
   79         //****************************************************************************
   80         // @Global Variables
   81         //****************************************************************************
   82         
   83         
   84         // USER CODE BEGIN (CAN_General,7)
   85         
   86         // USER CODE END
   87         
   88         
   89         //****************************************************************************
   90         // @External Prototypes
   91         //****************************************************************************
   92         
   93         // USER CODE BEGIN (CAN_General,8)
   94         
   95         // USER CODE END
   96         
   97         
   98         //****************************************************************************
   99         // @Prototypes Of Local Functions
  100         //****************************************************************************
  101         
  102         // USER CODE BEGIN (CAN_General,9)
  103         
  104         // USER CODE END
  105         
  106         
  107         //****************************************************************************
  108         // @Function      void CAN_vInit(void) 
  109         //
  110         //----------------------------------------------------------------------------
  111         // @Description   This is the initialization function of the CAN function 
  112         //                library. It is assumed that the SFRs used by this library 
  113         //                are in reset state. 
  114         //
  115         //----------------------------------------------------------------------------
  116         // @Returnvalue   None
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 3   

  117         //
  118         //----------------------------------------------------------------------------
  119         // @Parameters    None
  120         //
  121         //----------------------------------------------------------------------------
  122         // @Date          2020/1/14
  123         //
  124         //****************************************************************************
  125         
  126         // USER CODE BEGIN (Init,1)
  127         
  128         // USER CODE END
  129         
  130         void CAN_vInit(void)
  131         {
  132  1      
  133  1        // USER CODE BEGIN (Init,2)
  134  1        
  135  1        
  136  1        // 柯默电动 此处注释CAN消息
  137  1        //    Node0                                           Node1                                   Node2     
  138  1        // Mo (ID 181 发送)           M1 (ID 183 发送)                         M2 (ID 184 发送)
  139  1        // M3 (ID 182 接收)           M4 (ID 185 接收)                         M5 (ID 183 接收)
  140  1                
  141  1         
  142  1      
  143  1        // USER CODE END
  144  1      
  145  1        ///  -----------------------------------------------------------------------
  146  1        ///  Configuration of Kernel State Configuration Register:
  147  1        ///  -----------------------------------------------------------------------
  148  1        ///  - Enable the CAN module(MODEN)
  149  1        ///  - Enable Bit Protection for MODEN
  150  1      
  151  1          MCAN_KSCCFG  =  0x0003;      // load Kernel State Configuration Register
  152  1      
  153  1          _nop_();  // one cycle delay 
  154  1      
  155  1          _nop_();  // one cycle delay 
  156  1      
  157  1      
  158  1        ///  -----------------------------------------------------------------------
  159  1        ///  Configuration of the Module Clock:
  160  1        ///  -----------------------------------------------------------------------
  161  1        ///  - the CAN module clock = 40.00 MHz
  162  1        ///  - Normal divider mode selected
  163  1      
  164  1          CAN_FDRL     =  0x43FE;      // load Fractional Divider Register
  165  1      
  166  1        ///  -----------------------------------------------------------------------
  167  1        ///  Panel Control
  168  1        ///  -----------------------------------------------------------------------
  169  1        ///  - wait until Panel has finished the initialisation
  170  1      
  171  1          while(CAN_PANCTRL & CAN_PANCTR_BUSY){ // wait until Panel has finished 
  172  2                                                // the initialisation
  173  2            }                         
  174  1      
  175  1        ///  -----------------------------------------------------------------------
  176  1        ///  Configuration of CAN Node 0:
  177  1        ///  -----------------------------------------------------------------------
  178  1      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 4   

  179  1        ///  General Configuration of the Node 0:
  180  1        ///  - set INIT and CCE
  181  1      
  182  1          CAN_NCR0     =  0x0041;      // load NODE 0 control register[15-0]
  183  1      
  184  1        ///  - load NODE 0 interrupt pointer register
  185  1      
  186  1          CAN_NIPR0    =  0x0000;      // load NIPR0_LECINP, ALINP, CFCINP and TRINP
  187  1      
  188  1        ///  Configuration of the used CAN Port Pins:
  189  1        ///  - Loop-back mode is disabled
  190  1        ///  - P2.0 is used for CAN0 Receive input(RXDC0C)
  191  1        ///  - P2.1 is used for CAN0 Transmit output(TXDC0C)
  192  1      
  193  1        P2_IOCR01 = 0x0090;    //set direction register
  194  1          CAN_NPCR0    =  0x0002;      // load node0 port control register
  195  1      
  196  1      
  197  1        ///  Configuration of the Node 0 Baud Rate:
  198  1        ///  - required baud rate = 500.000 kbaud
  199  1        ///  - real baud rate     = 500.000 kbaud
  200  1        ///  - sample point       = 60.00 %
  201  1        ///  - there are 5 time quanta before sample point
  202  1        ///  - there are 4 time quanta after sample point
  203  1        ///  - the (re)synchronization jump width is 2 time quanta
  204  1      
  205  1          CAN_NBTR0L   =  0x3447;      // load NBTR0_DIV8, TSEG2, TSEG1, SJW and BRP
  206  1      
  207  1        ///  Configuration of the Node 0 Error Counter:
  208  1        ///  - the error warning threshold value (warning level) is 96
  209  1      
  210  1          CAN_NECNT0H = 0x0060;        // load NECNT0_EWRNLVL register
  211  1          CAN_NECNT0L = 0x0000;       
  212  1      
  213  1        ///  Configuration of the Frame Counter:
  214  1        ///  - Frame Counter Mode: the counter is incremented upon the reception 
  215  1        ///    and transmission of frames
  216  1        ///  - frame counter: 0x0000
  217  1      
  218  1          CAN_NFCR0H = 0x0000;         // load NFCR0_CFCOV, CFCIE, CFMOD, CFSEL
  219  1          CAN_NFCR0L = 0x0000;         // load NFCR0_CFC
  220  1      
  221  1        ///  -----------------------------------------------------------------------
  222  1        ///  Configuration of CAN Node 1:
  223  1        ///  -----------------------------------------------------------------------
  224  1      
  225  1        ///  General Configuration of the Node 1:
  226  1        ///  - set INIT and CCE
  227  1      
  228  1          CAN_NCR1     =  0x0041;      // load NODE 1 control register[15-0]
  229  1      
  230  1        ///  - load NODE 1 interrupt pointer register
  231  1      
  232  1          CAN_NIPR1    =  0x0000;      // load NIPR1_LECINP, ALINP, CFCINP and TRINP
  233  1      
  234  1        ///  Configuration of the used CAN Port Pins:
  235  1        ///  - Loop-back mode is disabled
  236  1        ///  - P0.4 is used for CAN1 Receive input(RXDC1B)
  237  1        ///  - P0.6 is used for CAN1 Transmit Output(TXDC1A)
  238  1      
  239  1        P0_IOCR06 = 0x00A0;    //set direction register
  240  1          CAN_NPCR1    =  0x0001;      // load node1 port control register
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 5   

  241  1      
  242  1      
  243  1        ///  Configuration of the Node 1 Baud Rate:
  244  1        ///  - required baud rate = 500.000 kbaud
  245  1        ///  - real baud rate     = 500.000 kbaud
  246  1        ///  - sample point       = 60.00 %
  247  1        ///  - there are 5 time quanta before sample point
  248  1        ///  - there are 4 time quanta after sample point
  249  1        ///  - the (re)synchronization jump width is 2 time quanta
  250  1      
  251  1          CAN_NBTR1L   =  0x3447;      // load NBTR1_DIV8, TSEG2, TSEG1, SJW and BRP
  252  1      
  253  1        ///  Configuration of the Node 1 Error Counter:
  254  1        ///  - the error warning threshold value (warning level) is 96
  255  1      
  256  1          CAN_NECNT1H = 0x0060;        // load NECNT1_EWRNLVL register
  257  1          CAN_NECNT1L = 0x0000;       
  258  1      
  259  1        ///  Configuration of the Frame Counter:
  260  1        ///  - Frame Counter Mode: the counter is incremented upon the reception 
  261  1        ///    and transmission of frames
  262  1        ///  - frame counter: 0x0000
  263  1      
  264  1          CAN_NFCR1H = 0x0000;         // load NFCR1_CFCOV, CFCIE, CFMOD, CFSEL
  265  1          CAN_NFCR1L = 0x0000;         // load NFCR1_CFC
  266  1      
  267  1        ///  -----------------------------------------------------------------------
  268  1        ///  Configuration of CAN Node 2:
  269  1        ///  -----------------------------------------------------------------------
  270  1      
  271  1        ///  General Configuration of the Node 2:
  272  1        ///  - set INIT and CCE
  273  1      
  274  1          CAN_NCR2     =  0x0041;      // load NODE 2 control register[15-0]
  275  1      
  276  1        ///  - load NODE 2 interrupt pointer register
  277  1      
  278  1          CAN_NIPR2    =  0x0000;      // load NIPR2_LECINP, ALINP, CFCINP and TRINP
  279  1      
  280  1        ///  Configuration of the used CAN Port Pins:
  281  1        ///  - Loop-back mode is disabled
  282  1        ///  - P4.3 is used for CAN2 Receive inputA(RXDC2A)
  283  1        ///  - P4.2 is used for CAN2 Transmit output(TXDC2B)
  284  1      
  285  1        P4_IOCR02 = 0x00A0;    //set direction register
  286  1          CAN_NPCR2    =  0x0000;      // load node2 port control register
  287  1      
  288  1      
  289  1        ///  Configuration of the Node 2 Baud Rate:
  290  1        ///  - required baud rate = 500.000 kbaud
  291  1        ///  - real baud rate     = 500.000 kbaud
  292  1        ///  - sample point       = 60.00 %
  293  1        ///  - there are 5 time quanta before sample point
  294  1        ///  - there are 4 time quanta after sample point
  295  1        ///  - the (re)synchronization jump width is 2 time quanta
  296  1      
  297  1          CAN_NBTR2L   =  0x3447;      // load NBTR2_DIV8, TSEG2, TSEG1, SJW and BRP
  298  1      
  299  1        ///  Configuration of the Node 2 Error Counter:
  300  1        ///  - the error warning threshold value (warning level) is 96
  301  1      
  302  1          CAN_NECNT2H = 0x0060;        // load NECNT2_EWRNLVL register
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 6   

  303  1          CAN_NECNT2L = 0x0000;       
  304  1      
  305  1        ///  Configuration of the Frame Counter:
  306  1        ///  - Frame Counter Mode: the counter is incremented upon the reception 
  307  1        ///    and transmission of frames
  308  1        ///  - frame counter: 0x0000
  309  1      
  310  1          CAN_NFCR2H = 0x0000;         // load NFCR2_CFCOV, CFCIE, CFMOD, CFSEL
  311  1          CAN_NFCR2L = 0x0000;         // load NFCR2_CFC
  312  1      
  313  1        ///  -----------------------------------------------------------------------
  314  1        ///  Configuration of CAN Node 3:
  315  1        ///  -----------------------------------------------------------------------
  316  1      
  317  1        ///  General Configuration of the Node 3:
  318  1        ///  - set INIT and CCE
  319  1      
  320  1          CAN_NCR3     =  0x0041;      // load NODE 3 control register[15-0]
  321  1      
  322  1        ///  -----------------------------------------------------------------------
  323  1        ///  Configuration of CAN Node 4:
  324  1        ///  -----------------------------------------------------------------------
  325  1      
  326  1        ///  General Configuration of the Node 4:
  327  1        ///  - set INIT and CCE
  328  1      
  329  1          CAN_NCR4     =  0x0041;      // load NODE 4 control register[15-0]
  330  1      
  331  1        ///  -----------------------------------------------------------------------
  332  1        ///  Configuration of CAN Node 5:
  333  1        ///  -----------------------------------------------------------------------
  334  1      
  335  1        ///  General Configuration of the Node 5:
  336  1        ///  - set INIT and CCE
  337  1      
  338  1          CAN_NCR5     =  0x0041;      // load NODE 5 control register[15-0]
  339  1      
  340  1        ///  -----------------------------------------------------------------------
  341  1        ///  Configuration of the CAN Message Object List Structure:
  342  1        ///  -----------------------------------------------------------------------
  343  1      
  344  1        ///  Allocate MOs for list 1:
  345  1      
  346  1          SetListCommand(0x010E,0x0002);  // MO14 for list 1 (Node 0)
  347  1      
  348  1          SetListCommand(0x010D,0x0002);  // MO13 for list 1 (Node 0)
  349  1      
  350  1          SetListCommand(0x010C,0x0002);  // MO12 for list 1 (Node 0)
  351  1      
  352  1          SetListCommand(0x010B,0x0002);  // MO11 for list 1 (Node 0)
  353  1      
  354  1          SetListCommand(0x010A,0x0002);  // MO10 for list 1 (Node 0)
  355  1      
  356  1          SetListCommand(0x0109,0x0002);  // MO9 for list 1 (Node 0)
  357  1      
  358  1          SetListCommand(0x0108,0x0002);  // MO8 for list 1 (Node 0)
  359  1      
  360  1          SetListCommand(0x0107,0x0002);  // MO7 for list 1 (Node 0)
  361  1      
  362  1          SetListCommand(0x0106,0x0002);  // MO6 for list 1 (Node 0)
  363  1      
  364  1          SetListCommand(0x0105,0x0002);  // MO5 for list 1 (Node 0)
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 7   

  365  1      
  366  1          SetListCommand(0x0104,0x0002);  // MO4 for list 1 (Node 0)
  367  1      
  368  1          SetListCommand(0x0103,0x0002);  // MO3 for list 1 (Node 0)
  369  1      
  370  1          SetListCommand(0x0102,0x0002);  // MO2 for list 1 (Node 0)
  371  1      
  372  1          SetListCommand(0x0101,0x0002);  // MO1 for list 1 (Node 0)
  373  1      
  374  1          SetListCommand(0x0100,0x0002);  // MO0 for list 1 (Node 0)
  375  1      
  376  1          SetListCommand(0x010F,0x0002);  // MO15 for list 1 (Node 0)
  377  1      
  378  1          SetListCommand(0x0110,0x0002);  // MO16 for list 1 (Node 0)
  379  1      
  380  1          SetListCommand(0x0111,0x0002);  // MO17 for list 1 (Node 0)
  381  1      
  382  1          SetListCommand(0x0112,0x0002);  // MO18 for list 1 (Node 0)
  383  1      
  384  1          SetListCommand(0x0119,0x0002);  // MO25 for list 1 (Node 0)
  385  1      
  386  1          SetListCommand(0x0113,0x0002);  // MO19 for list 1 (Node 0)
  387  1      
  388  1          SetListCommand(0x0114,0x0002);  // MO20 for list 1 (Node 0)
  389  1      
  390  1          SetListCommand(0x0115,0x0002);  // MO21 for list 1 (Node 0)
  391  1      
  392  1          SetListCommand(0x0116,0x0002);  // MO22 for list 1 (Node 0)
  393  1      
  394  1          SetListCommand(0x0117,0x0002);  // MO23 for list 1 (Node 0)
  395  1      
  396  1          SetListCommand(0x0118,0x0002);  // MO24 for list 1 (Node 0)
  397  1      
  398  1          SetListCommand(0x011A,0x0002);  // MO26 for list 1 (Node 0)
  399  1      
  400  1        ///  -----------------------------------------------------------------------
  401  1        ///  Configuration of the CAN Message Objects 0 - 254:
  402  1        ///  -----------------------------------------------------------------------
  403  1        ///  -----------------------------------------------------------------------
  404  1        ///  Configuration of Message Object 0:
  405  1        ///  -----------------------------------------------------------------------
  406  1      
  407  1        ///  General Configuration of the Message Object 0 :
  408  1        ///  - message object 0 is valid
  409  1        ///  - message object is used as receive object
  410  1        ///  - this message object is assigned to list 1 (node 0)
  411  1      
  412  1          CAN_MOCTR0H = 0x00A0;        // load MO0 control register high
  413  1          CAN_MOCTR0L = 0x0000;        // load MO0 control register low
  414  1      
  415  1        ///  Configuration of Message Object 0 Arbitration:
  416  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
  417  1        ///    order
  418  1        ///  - standard 11-bit identifier
  419  1        ///  - identifier 11-bit:      0x316
  420  1      
  421  1          CAN_MOAR0H = 0x4C58;         // load MO0 arbitration register high
  422  1          CAN_MOAR0L = 0x0000;         // load MO0 arbitration register low
  423  1      
  424  1        ///  Configuration of Message Object 0 acceptance mask:
  425  1        ///  - only accept receive frames with matching IDE bit
  426  1        ///  - acceptance mask 11-bit: 0x7FF
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 8   

  427  1      
  428  1          CAN_MOAMR0H = 0x3FFF;        // load MO0 acceptance mask register high
  429  1          CAN_MOAMR0L = 0xFFFF;        // load MO0 acceptance mask register low
  430  1      
  431  1        ///  Configuration of Message Object 0 interrupt pointer:
  432  1        ///  - use message pending register 0 bit position 0
  433  1        ///  - receive interrupt node pointer: MultiCAN SRN 0
  434  1      
  435  1          CAN_MOIPR0H = 0x0000;        // load MO0 interrupt pointer register high
  436  1          CAN_MOIPR0L = 0x0000;        // load MO0 interrupt pointer register low
  437  1      
  438  1        ///  Configuration of Message Object 0 FIFO/Gateway pointer:
  439  1      
  440  1          CAN_MOFGPR0H = 0x0000;       // load MO0 FIFO/gateway pointer register 
  441  1                                       // high
  442  1          CAN_MOFGPR0L = 0x0000;       // load MO0 FIFO/gateway pointer register low
  443  1      
  444  1      
  445  1        ///  Configuration of Message Object 0 Function control:
  446  1        ///  - this object is a STANDARD MESSAGE OBJECT
  447  1        ///  - 8 valid data bytes
  448  1        ///  - enable receive interrupt; bit RXPND is set after successful 
  449  1        ///    reception of a frame
  450  1      
  451  1          CAN_MOFCR0H = 0x0801;        // load MO0 function control register high
  452  1          CAN_MOFCR0L = 0x0000;        // load MO0 function control register low
  453  1      
  454  1        ///  -----------------------------------------------------------------------
  455  1        ///  Configuration of Message Object 1:
  456  1        ///  -----------------------------------------------------------------------
  457  1      
  458  1        ///  General Configuration of the Message Object 1 :
  459  1        ///  - message object 1 is valid
  460  1        ///  - message object is used as receive object
  461  1        ///  - this message object is assigned to list 1 (node 0)
  462  1      
  463  1          CAN_MOCTR1H = 0x00A0;        // load MO1 control register high
  464  1          CAN_MOCTR1L = 0x0000;        // load MO1 control register low
  465  1      
  466  1        ///  Configuration of Message Object 1 Arbitration:
  467  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
  468  1        ///    order
  469  1        ///  - standard 11-bit identifier
  470  1        ///  - identifier 11-bit:      0x326
  471  1      
  472  1          CAN_MOAR1H = 0x4C98;         // load MO1 arbitration register high
  473  1          CAN_MOAR1L = 0x0000;         // load MO1 arbitration register low
  474  1      
  475  1        ///  Configuration of Message Object 1 acceptance mask:
  476  1        ///  - only accept receive frames with matching IDE bit
  477  1        ///  - acceptance mask 11-bit: 0x7FF
  478  1      
  479  1          CAN_MOAMR1H = 0x3FFF;        // load MO1 acceptance mask register high
  480  1          CAN_MOAMR1L = 0xFFFF;        // load MO1 acceptance mask register low
  481  1      
  482  1        ///  Configuration of Message Object 1 interrupt pointer:
  483  1        ///  - use message pending register 0 bit position 1
  484  1        ///  - receive interrupt node pointer: MultiCAN SRN 0
  485  1      
  486  1          CAN_MOIPR1H = 0x0000;        // load MO1 interrupt pointer register high
  487  1          CAN_MOIPR1L = 0x0100;        // load MO1 interrupt pointer register low
  488  1      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 9   

  489  1        ///  Configuration of Message Object 1 FIFO/Gateway pointer:
  490  1      
  491  1          CAN_MOFGPR1H = 0x0000;       // load MO1 FIFO/gateway pointer register 
  492  1                                       // high
  493  1          CAN_MOFGPR1L = 0x0000;       // load MO1 FIFO/gateway pointer register low
  494  1      
  495  1      
  496  1        ///  Configuration of Message Object 1 Function control:
  497  1        ///  - this object is a STANDARD MESSAGE OBJECT
  498  1        ///  - 8 valid data bytes
  499  1        ///  - enable receive interrupt; bit RXPND is set after successful 
  500  1        ///    reception of a frame
  501  1      
  502  1          CAN_MOFCR1H = 0x0801;        // load MO1 function control register high
  503  1          CAN_MOFCR1L = 0x0000;        // load MO1 function control register low
  504  1      
  505  1        ///  -----------------------------------------------------------------------
  506  1        ///  Configuration of Message Object 2:
  507  1        ///  -----------------------------------------------------------------------
  508  1      
  509  1        ///  General Configuration of the Message Object 2 :
  510  1        ///  - message object 2 is valid
  511  1        ///  - message object is used as receive object
  512  1        ///  - this message object is assigned to list 1 (node 0)
  513  1      
  514  1          CAN_MOCTR2H = 0x00A0;        // load MO2 control register high
  515  1          CAN_MOCTR2L = 0x0000;        // load MO2 control register low
  516  1      
  517  1        ///  Configuration of Message Object 2 Arbitration:
  518  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
  519  1        ///    order
  520  1        ///  - standard 11-bit identifier
  521  1        ///  - identifier 11-bit:      0x336
  522  1      
  523  1          CAN_MOAR2H = 0x4CD8;         // load MO2 arbitration register high
  524  1          CAN_MOAR2L = 0x0000;         // load MO2 arbitration register low
  525  1      
  526  1        ///  Configuration of Message Object 2 acceptance mask:
  527  1        ///  - only accept receive frames with matching IDE bit
  528  1        ///  - acceptance mask 11-bit: 0x7FF
  529  1      
  530  1          CAN_MOAMR2H = 0x3FFF;        // load MO2 acceptance mask register high
  531  1          CAN_MOAMR2L = 0xFFFF;        // load MO2 acceptance mask register low
  532  1      
  533  1        ///  Configuration of Message Object 2 interrupt pointer:
  534  1        ///  - use message pending register 0 bit position 2
  535  1        ///  - receive interrupt node pointer: MultiCAN SRN 0
  536  1      
  537  1          CAN_MOIPR2H = 0x0000;        // load MO2 interrupt pointer register high
  538  1          CAN_MOIPR2L = 0x0200;        // load MO2 interrupt pointer register low
  539  1      
  540  1        ///  Configuration of Message Object 2 FIFO/Gateway pointer:
  541  1      
  542  1          CAN_MOFGPR2H = 0x0000;       // load MO2 FIFO/gateway pointer register 
  543  1                                       // high
  544  1          CAN_MOFGPR2L = 0x0000;       // load MO2 FIFO/gateway pointer register low
  545  1      
  546  1      
  547  1        ///  Configuration of Message Object 2 Function control:
  548  1        ///  - this object is a STANDARD MESSAGE OBJECT
  549  1        ///  - 8 valid data bytes
  550  1        ///  - enable receive interrupt; bit RXPND is set after successful 
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 10  

  551  1        ///    reception of a frame
  552  1      
  553  1          CAN_MOFCR2H = 0x0801;        // load MO2 function control register high
  554  1          CAN_MOFCR2L = 0x0000;        // load MO2 function control register low
  555  1      
  556  1        ///  -----------------------------------------------------------------------
  557  1        ///  Configuration of Message Object 3:
  558  1        ///  -----------------------------------------------------------------------
  559  1      
  560  1        ///  General Configuration of the Message Object 3 :
  561  1        ///  - message object 3 is valid
  562  1        ///  - message object is used as receive object
  563  1        ///  - this message object is assigned to list 1 (node 0)
  564  1      
  565  1          CAN_MOCTR3H = 0x00A0;        // load MO3 control register high
  566  1          CAN_MOCTR3L = 0x0000;        // load MO3 control register low
  567  1      
  568  1        ///  Configuration of Message Object 3 Arbitration:
  569  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
  570  1        ///    order
  571  1        ///  - standard 11-bit identifier
  572  1        ///  - identifier 11-bit:      0x346
  573  1      
  574  1          CAN_MOAR3H = 0x4D18;         // load MO3 arbitration register high
  575  1          CAN_MOAR3L = 0x0000;         // load MO3 arbitration register low
  576  1      
  577  1        ///  Configuration of Message Object 3 acceptance mask:
  578  1        ///  - only accept receive frames with matching IDE bit
  579  1        ///  - acceptance mask 11-bit: 0x7FF
  580  1      
  581  1          CAN_MOAMR3H = 0x3FFF;        // load MO3 acceptance mask register high
  582  1          CAN_MOAMR3L = 0xFFFF;        // load MO3 acceptance mask register low
  583  1      
  584  1        ///  Configuration of Message Object 3 interrupt pointer:
  585  1        ///  - use message pending register 0 bit position 3
  586  1        ///  - receive interrupt node pointer: MultiCAN SRN 0
  587  1      
  588  1          CAN_MOIPR3H = 0x0000;        // load MO3 interrupt pointer register high
  589  1          CAN_MOIPR3L = 0x0300;        // load MO3 interrupt pointer register low
  590  1      
  591  1        ///  Configuration of Message Object 3 FIFO/Gateway pointer:
  592  1      
  593  1          CAN_MOFGPR3H = 0x0000;       // load MO3 FIFO/gateway pointer register 
  594  1                                       // high
  595  1          CAN_MOFGPR3L = 0x0000;       // load MO3 FIFO/gateway pointer register low
  596  1      
  597  1      
  598  1        ///  Configuration of Message Object 3 Function control:
  599  1        ///  - this object is a STANDARD MESSAGE OBJECT
  600  1        ///  - 8 valid data bytes
  601  1        ///  - enable receive interrupt; bit RXPND is set after successful 
  602  1        ///    reception of a frame
  603  1      
  604  1          CAN_MOFCR3H = 0x0801;        // load MO3 function control register high
  605  1          CAN_MOFCR3L = 0x0000;        // load MO3 function control register low
  606  1      
  607  1        ///  -----------------------------------------------------------------------
  608  1        ///  Configuration of Message Object 4:
  609  1        ///  -----------------------------------------------------------------------
  610  1      
  611  1        ///  General Configuration of the Message Object 4 :
  612  1        ///  - message object 4 is valid
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 11  

  613  1        ///  - message object is used as receive object
  614  1        ///  - this message object is assigned to list 1 (node 0)
  615  1      
  616  1          CAN_MOCTR4H = 0x00A0;        // load MO4 control register high
  617  1          CAN_MOCTR4L = 0x0000;        // load MO4 control register low
  618  1      
  619  1        ///  Configuration of Message Object 4 Arbitration:
  620  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
  621  1        ///    order
  622  1        ///  - standard 11-bit identifier
  623  1        ///  - identifier 11-bit:      0x416
  624  1      
  625  1          CAN_MOAR4H = 0x5058;         // load MO4 arbitration register high
  626  1          CAN_MOAR4L = 0x0000;         // load MO4 arbitration register low
  627  1      
  628  1        ///  Configuration of Message Object 4 acceptance mask:
  629  1        ///  - only accept receive frames with matching IDE bit
  630  1        ///  - acceptance mask 11-bit: 0x7FF
  631  1      
  632  1          CAN_MOAMR4H = 0x3FFF;        // load MO4 acceptance mask register high
  633  1          CAN_MOAMR4L = 0xFFFF;        // load MO4 acceptance mask register low
  634  1      
  635  1        ///  Configuration of Message Object 4 interrupt pointer:
  636  1        ///  - use message pending register 0 bit position 4
  637  1        ///  - receive interrupt node pointer: MultiCAN SRN 0
  638  1      
  639  1          CAN_MOIPR4H = 0x0000;        // load MO4 interrupt pointer register high
  640  1          CAN_MOIPR4L = 0x0400;        // load MO4 interrupt pointer register low
  641  1      
  642  1        ///  Configuration of Message Object 4 FIFO/Gateway pointer:
  643  1      
  644  1          CAN_MOFGPR4H = 0x0000;       // load MO4 FIFO/gateway pointer register 
  645  1                                       // high
  646  1          CAN_MOFGPR4L = 0x0000;       // load MO4 FIFO/gateway pointer register low
  647  1      
  648  1      
  649  1        ///  Configuration of Message Object 4 Function control:
  650  1        ///  - this object is a STANDARD MESSAGE OBJECT
  651  1        ///  - 8 valid data bytes
  652  1        ///  - enable receive interrupt; bit RXPND is set after successful 
  653  1        ///    reception of a frame
  654  1      
  655  1          CAN_MOFCR4H = 0x0801;        // load MO4 function control register high
  656  1          CAN_MOFCR4L = 0x0000;        // load MO4 function control register low
  657  1      
  658  1        ///  -----------------------------------------------------------------------
  659  1        ///  Configuration of Message Object 5:
  660  1        ///  -----------------------------------------------------------------------
  661  1      
  662  1        ///  General Configuration of the Message Object 5 :
  663  1        ///  - message object 5 is valid
  664  1        ///  - message object is used as receive object
  665  1        ///  - this message object is assigned to list 1 (node 0)
  666  1      
  667  1          CAN_MOCTR5H = 0x00A0;        // load MO5 control register high
  668  1          CAN_MOCTR5L = 0x0000;        // load MO5 control register low
  669  1      
  670  1        ///  Configuration of Message Object 5 Arbitration:
  671  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
  672  1        ///    order
  673  1        ///  - standard 11-bit identifier
  674  1        ///  - identifier 11-bit:      0x426
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 12  

  675  1      
  676  1          CAN_MOAR5H = 0x5098;         // load MO5 arbitration register high
  677  1          CAN_MOAR5L = 0x0000;         // load MO5 arbitration register low
  678  1      
  679  1        ///  Configuration of Message Object 5 acceptance mask:
  680  1        ///  - only accept receive frames with matching IDE bit
  681  1        ///  - acceptance mask 11-bit: 0x7FF
  682  1      
  683  1          CAN_MOAMR5H = 0x3FFF;        // load MO5 acceptance mask register high
  684  1          CAN_MOAMR5L = 0xFFFF;        // load MO5 acceptance mask register low
  685  1      
  686  1        ///  Configuration of Message Object 5 interrupt pointer:
  687  1        ///  - use message pending register 0 bit position 5
  688  1        ///  - receive interrupt node pointer: MultiCAN SRN 0
  689  1      
  690  1          CAN_MOIPR5H = 0x0000;        // load MO5 interrupt pointer register high
  691  1          CAN_MOIPR5L = 0x0500;        // load MO5 interrupt pointer register low
  692  1      
  693  1        ///  Configuration of Message Object 5 FIFO/Gateway pointer:
  694  1      
  695  1          CAN_MOFGPR5H = 0x0000;       // load MO5 FIFO/gateway pointer register 
  696  1                                       // high
  697  1          CAN_MOFGPR5L = 0x0000;       // load MO5 FIFO/gateway pointer register low
  698  1      
  699  1      
  700  1        ///  Configuration of Message Object 5 Function control:
  701  1        ///  - this object is a STANDARD MESSAGE OBJECT
  702  1        ///  - 8 valid data bytes
  703  1        ///  - enable receive interrupt; bit RXPND is set after successful 
  704  1        ///    reception of a frame
  705  1      
  706  1          CAN_MOFCR5H = 0x0801;        // load MO5 function control register high
  707  1          CAN_MOFCR5L = 0x0000;        // load MO5 function control register low
  708  1      
  709  1        ///  -----------------------------------------------------------------------
  710  1        ///  Configuration of Message Object 6:
  711  1        ///  -----------------------------------------------------------------------
  712  1      
  713  1        ///  General Configuration of the Message Object 6 :
  714  1        ///  - message object 6 is valid
  715  1        ///  - message object is used as transmit object
  716  1        ///  - this message object is assigned to list 1 (node 0)
  717  1      
  718  1          CAN_MOCTR6H = 0x0EA8;        // load MO6 control register high
  719  1          CAN_MOCTR6L = 0x0000;        // load MO6 control register low
  720  1      
  721  1        ///  Configuration of Message Object 6 Arbitration:
  722  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
  723  1        ///    order
  724  1        ///  - standard 11-bit identifier
  725  1        ///  - identifier 11-bit:      0x410
  726  1      
  727  1          CAN_MOAR6H = 0x5040;         // load MO6 arbitration register high
  728  1          CAN_MOAR6L = 0x0000;         // load MO6 arbitration register low
  729  1      
  730  1        ///  Configuration of Message Object 6 Data:
  731  1      
  732  1          CAN_MODATA6HH = 0x0000;      // load MO6 Data Bytes(DB7 & DB6)
  733  1          CAN_MODATA6HL = 0x0000;      // load MO6 Data Bytes(DB5 & DB4)
  734  1          CAN_MODATA6LH = 0x0000;      // load MO6 Data Bytes(DB3 & DB2)
  735  1          CAN_MODATA6LL = 0x0000;      // load MO6 Data Bytes(DB1 & DB0)
  736  1      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 13  

  737  1        ///  Configuration of Message Object 6 acceptance mask:
  738  1        ///  - only accept receive frames with matching IDE bit
  739  1        ///  - acceptance mask 11-bit: 0x000
  740  1      
  741  1          CAN_MOAMR6H = 0x2000;        // load MO6 acceptance mask register high
  742  1          CAN_MOAMR6L = 0x0000;        // load MO6 acceptance mask register low
  743  1      
  744  1        ///  Configuration of Message Object 6 interrupt pointer:
  745  1        ///  - use message pending register 0 bit position 6
  746  1      
  747  1          CAN_MOIPR6H = 0x0000;        // load MO6 interrupt pointer register high
  748  1          CAN_MOIPR6L = 0x0600;        // load MO6 interrupt pointer register low
  749  1      
  750  1        ///  Configuration of Message Object 6 FIFO/Gateway pointer:
  751  1      
  752  1          CAN_MOFGPR6H = 0x0000;       // load MO6 FIFO/gateway pointer register 
  753  1                                       // high
  754  1          CAN_MOFGPR6L = 0x0000;       // load MO6 FIFO/gateway pointer register low
  755  1      
  756  1      
  757  1        ///  Configuration of Message Object 6 Function control:
  758  1        ///  - this object is a STANDARD MESSAGE OBJECT
  759  1        ///  - 8 valid data bytes
  760  1      
  761  1          CAN_MOFCR6H = 0x0800;        // load MO6 function control register high
  762  1          CAN_MOFCR6L = 0x0000;        // load MO6 function control register low
  763  1      
  764  1        ///  -----------------------------------------------------------------------
  765  1        ///  Configuration of Message Object 7:
  766  1        ///  -----------------------------------------------------------------------
  767  1      
  768  1        ///  General Configuration of the Message Object 7 :
  769  1        ///  - message object 7 is valid
  770  1        ///  - message object is used as transmit object
  771  1        ///  - this message object is assigned to list 1 (node 0)
  772  1      
  773  1          CAN_MOCTR7H = 0x0EA8;        // load MO7 control register high
  774  1          CAN_MOCTR7L = 0x0000;        // load MO7 control register low
  775  1      
  776  1        ///  Configuration of Message Object 7 Arbitration:
  777  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
  778  1        ///    order
  779  1        ///  - standard 11-bit identifier
  780  1        ///  - identifier 11-bit:      0x420
  781  1      
  782  1          CAN_MOAR7H = 0x5080;         // load MO7 arbitration register high
  783  1          CAN_MOAR7L = 0x0000;         // load MO7 arbitration register low
  784  1      
  785  1        ///  Configuration of Message Object 7 Data:
  786  1      
  787  1          CAN_MODATA7HH = 0x0000;      // load MO7 Data Bytes(DB7 & DB6)
  788  1          CAN_MODATA7HL = 0x0000;      // load MO7 Data Bytes(DB5 & DB4)
  789  1          CAN_MODATA7LH = 0x0000;      // load MO7 Data Bytes(DB3 & DB2)
  790  1          CAN_MODATA7LL = 0x0000;      // load MO7 Data Bytes(DB1 & DB0)
  791  1      
  792  1        ///  Configuration of Message Object 7 acceptance mask:
  793  1        ///  - only accept receive frames with matching IDE bit
  794  1        ///  - acceptance mask 11-bit: 0x7FF
  795  1      
  796  1          CAN_MOAMR7H = 0x3FFF;        // load MO7 acceptance mask register high
  797  1          CAN_MOAMR7L = 0xFFFF;        // load MO7 acceptance mask register low
  798  1      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 14  

  799  1        ///  Configuration of Message Object 7 interrupt pointer:
  800  1        ///  - use message pending register 0 bit position 7
  801  1      
  802  1          CAN_MOIPR7H = 0x0000;        // load MO7 interrupt pointer register high
  803  1          CAN_MOIPR7L = 0x0700;        // load MO7 interrupt pointer register low
  804  1      
  805  1        ///  Configuration of Message Object 7 FIFO/Gateway pointer:
  806  1      
  807  1          CAN_MOFGPR7H = 0x0000;       // load MO7 FIFO/gateway pointer register 
  808  1                                       // high
  809  1          CAN_MOFGPR7L = 0x0000;       // load MO7 FIFO/gateway pointer register low
  810  1      
  811  1      
  812  1        ///  Configuration of Message Object 7 Function control:
  813  1        ///  - this object is a STANDARD MESSAGE OBJECT
  814  1        ///  - 8 valid data bytes
  815  1      
  816  1          CAN_MOFCR7H = 0x0800;        // load MO7 function control register high
  817  1          CAN_MOFCR7L = 0x0000;        // load MO7 function control register low
  818  1      
  819  1        ///  -----------------------------------------------------------------------
  820  1        ///  Configuration of Message Object 8:
  821  1        ///  -----------------------------------------------------------------------
  822  1      
  823  1        ///  General Configuration of the Message Object 8 :
  824  1        ///  - message object 8 is valid
  825  1        ///  - message object is used as transmit object
  826  1        ///  - this message object is assigned to list 1 (node 0)
  827  1      
  828  1          CAN_MOCTR8H = 0x0EA8;        // load MO8 control register high
  829  1          CAN_MOCTR8L = 0x0000;        // load MO8 control register low
  830  1      
  831  1        ///  Configuration of Message Object 8 Arbitration:
  832  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
  833  1        ///    order
  834  1        ///  - standard 11-bit identifier
  835  1        ///  - identifier 11-bit:      0x310
  836  1      
  837  1          CAN_MOAR8H = 0x4C40;         // load MO8 arbitration register high
  838  1          CAN_MOAR8L = 0x0000;         // load MO8 arbitration register low
  839  1      
  840  1        ///  Configuration of Message Object 8 Data:
  841  1      
  842  1          CAN_MODATA8HH = 0x0000;      // load MO8 Data Bytes(DB7 & DB6)
  843  1          CAN_MODATA8HL = 0x0000;      // load MO8 Data Bytes(DB5 & DB4)
  844  1          CAN_MODATA8LH = 0x0000;      // load MO8 Data Bytes(DB3 & DB2)
  845  1          CAN_MODATA8LL = 0x0000;      // load MO8 Data Bytes(DB1 & DB0)
  846  1      
  847  1        ///  Configuration of Message Object 8 acceptance mask:
  848  1        ///  - only accept receive frames with matching IDE bit
  849  1        ///  - acceptance mask 11-bit: 0x7FF
  850  1      
  851  1          CAN_MOAMR8H = 0x3FFF;        // load MO8 acceptance mask register high
  852  1          CAN_MOAMR8L = 0xFFFF;        // load MO8 acceptance mask register low
  853  1      
  854  1        ///  Configuration of Message Object 8 interrupt pointer:
  855  1        ///  - use message pending register 0 bit position 8
  856  1      
  857  1          CAN_MOIPR8H = 0x0000;        // load MO8 interrupt pointer register high
  858  1          CAN_MOIPR8L = 0x0800;        // load MO8 interrupt pointer register low
  859  1      
  860  1        ///  Configuration of Message Object 8 FIFO/Gateway pointer:
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 15  

  861  1      
  862  1          CAN_MOFGPR8H = 0x0000;       // load MO8 FIFO/gateway pointer register 
  863  1                                       // high
  864  1          CAN_MOFGPR8L = 0x0000;       // load MO8 FIFO/gateway pointer register low
  865  1      
  866  1      
  867  1        ///  Configuration of Message Object 8 Function control:
  868  1        ///  - this object is a STANDARD MESSAGE OBJECT
  869  1        ///  - 8 valid data bytes
  870  1      
  871  1          CAN_MOFCR8H = 0x0800;        // load MO8 function control register high
  872  1          CAN_MOFCR8L = 0x0000;        // load MO8 function control register low
  873  1      
  874  1        ///  -----------------------------------------------------------------------
  875  1        ///  Configuration of Message Object 9:
  876  1        ///  -----------------------------------------------------------------------
  877  1      
  878  1        ///  General Configuration of the Message Object 9 :
  879  1        ///  - message object 9 is valid
  880  1        ///  - message object is used as transmit object
  881  1        ///  - this message object is assigned to list 1 (node 0)
  882  1      
  883  1          CAN_MOCTR9H = 0x0EA8;        // load MO9 control register high
  884  1          CAN_MOCTR9L = 0x0000;        // load MO9 control register low
  885  1      
  886  1        ///  Configuration of Message Object 9 Arbitration:
  887  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
  888  1        ///    order
  889  1        ///  - standard 11-bit identifier
  890  1        ///  - identifier 11-bit:      0x320
  891  1      
  892  1          CAN_MOAR9H = 0x4C80;         // load MO9 arbitration register high
  893  1          CAN_MOAR9L = 0x0000;         // load MO9 arbitration register low
  894  1      
  895  1        ///  Configuration of Message Object 9 Data:
  896  1      
  897  1          CAN_MODATA9HH = 0x0000;      // load MO9 Data Bytes(DB7 & DB6)
  898  1          CAN_MODATA9HL = 0x0000;      // load MO9 Data Bytes(DB5 & DB4)
  899  1          CAN_MODATA9LH = 0x0000;      // load MO9 Data Bytes(DB3 & DB2)
  900  1          CAN_MODATA9LL = 0x0000;      // load MO9 Data Bytes(DB1 & DB0)
  901  1      
  902  1        ///  Configuration of Message Object 9 acceptance mask:
  903  1        ///  - only accept receive frames with matching IDE bit
  904  1        ///  - acceptance mask 11-bit: 0x7FF
  905  1      
  906  1          CAN_MOAMR9H = 0x3FFF;        // load MO9 acceptance mask register high
  907  1          CAN_MOAMR9L = 0xFFFF;        // load MO9 acceptance mask register low
  908  1      
  909  1        ///  Configuration of Message Object 9 interrupt pointer:
  910  1        ///  - use message pending register 0 bit position 9
  911  1      
  912  1          CAN_MOIPR9H = 0x0000;        // load MO9 interrupt pointer register high
  913  1          CAN_MOIPR9L = 0x0900;        // load MO9 interrupt pointer register low
  914  1      
  915  1        ///  Configuration of Message Object 9 FIFO/Gateway pointer:
  916  1      
  917  1          CAN_MOFGPR9H = 0x0000;       // load MO9 FIFO/gateway pointer register 
  918  1                                       // high
  919  1          CAN_MOFGPR9L = 0x0000;       // load MO9 FIFO/gateway pointer register low
  920  1      
  921  1      
  922  1        ///  Configuration of Message Object 9 Function control:
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 16  

  923  1        ///  - this object is a STANDARD MESSAGE OBJECT
  924  1        ///  - 8 valid data bytes
  925  1      
  926  1          CAN_MOFCR9H = 0x0800;        // load MO9 function control register high
  927  1          CAN_MOFCR9L = 0x0000;        // load MO9 function control register low
  928  1      
  929  1        ///  -----------------------------------------------------------------------
  930  1        ///  Configuration of Message Object 10:
  931  1        ///  -----------------------------------------------------------------------
  932  1      
  933  1        ///  General Configuration of the Message Object 10 :
  934  1        ///  - message object 10 is valid
  935  1        ///  - message object is used as transmit object
  936  1        ///  - this message object is assigned to list 1 (node 0)
  937  1      
  938  1          CAN_MOCTR10H = 0x0EA8;       // load MO10 control register high
  939  1          CAN_MOCTR10L = 0x0000;       // load MO10 control register low
  940  1      
  941  1        ///  Configuration of Message Object 10 Arbitration:
  942  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
  943  1        ///    order
  944  1        ///  - standard 11-bit identifier
  945  1        ///  - identifier 11-bit:      0x330
  946  1      
  947  1          CAN_MOAR10H = 0x4CC0;        // load MO10 arbitration register high
  948  1          CAN_MOAR10L = 0x0000;        // load MO10 arbitration register low
  949  1      
  950  1        ///  Configuration of Message Object 10 Data:
  951  1      
  952  1          CAN_MODATA10HH = 0x0000;     // load MO10 Data Bytes(DB7 & DB6)
  953  1          CAN_MODATA10HL = 0x0000;     // load MO10 Data Bytes(DB5 & DB4)
  954  1          CAN_MODATA10LH = 0x0000;     // load MO10 Data Bytes(DB3 & DB2)
  955  1          CAN_MODATA10LL = 0x0000;     // load MO10 Data Bytes(DB1 & DB0)
  956  1      
  957  1        ///  Configuration of Message Object 10 acceptance mask:
  958  1        ///  - only accept receive frames with matching IDE bit
  959  1        ///  - acceptance mask 11-bit: 0x7FF
  960  1      
  961  1          CAN_MOAMR10H = 0x3FFF;       // load MO10 acceptance mask register high
  962  1          CAN_MOAMR10L = 0xFFFF;       // load MO10 acceptance mask register low
  963  1      
  964  1        ///  Configuration of Message Object 10 interrupt pointer:
  965  1        ///  - use message pending register 0 bit position 10
  966  1      
  967  1          CAN_MOIPR10H = 0x0000;       // load MO10 interrupt pointer register high
  968  1          CAN_MOIPR10L = 0x0A00;       // load MO10 interrupt pointer register low
  969  1      
  970  1        ///  Configuration of Message Object 10 FIFO/Gateway pointer:
  971  1      
  972  1          CAN_MOFGPR10H = 0x0000;      // load MO10 FIFO/gateway pointer register 
  973  1                                       // high
  974  1          CAN_MOFGPR10L = 0x0000;      // load MO10 FIFO/gateway pointer register 
  975  1                                       // low
  976  1      
  977  1      
  978  1        ///  Configuration of Message Object 10 Function control:
  979  1        ///  - this object is a STANDARD MESSAGE OBJECT
  980  1        ///  - 8 valid data bytes
  981  1      
  982  1          CAN_MOFCR10H = 0x0800;       // load MO10 function control register high
  983  1          CAN_MOFCR10L = 0x0000;       // load MO10 function control register low
  984  1      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 17  

  985  1        ///  -----------------------------------------------------------------------
  986  1        ///  Configuration of Message Object 11:
  987  1        ///  -----------------------------------------------------------------------
  988  1      
  989  1        ///  General Configuration of the Message Object 11 :
  990  1        ///  - message object 11 is valid
  991  1        ///  - message object is used as transmit object
  992  1        ///  - this message object is assigned to list 1 (node 0)
  993  1      
  994  1          CAN_MOCTR11H = 0x0EA8;       // load MO11 control register high
  995  1          CAN_MOCTR11L = 0x0000;       // load MO11 control register low
  996  1      
  997  1        ///  Configuration of Message Object 11 Arbitration:
  998  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
  999  1        ///    order
 1000  1        ///  - standard 11-bit identifier
 1001  1        ///  - identifier 11-bit:      0x340
 1002  1      
 1003  1          CAN_MOAR11H = 0x4D00;        // load MO11 arbitration register high
 1004  1          CAN_MOAR11L = 0x0000;        // load MO11 arbitration register low
 1005  1      
 1006  1        ///  Configuration of Message Object 11 Data:
 1007  1      
 1008  1          CAN_MODATA11HH = 0x0000;     // load MO11 Data Bytes(DB7 & DB6)
 1009  1          CAN_MODATA11HL = 0x0000;     // load MO11 Data Bytes(DB5 & DB4)
 1010  1          CAN_MODATA11LH = 0x0000;     // load MO11 Data Bytes(DB3 & DB2)
 1011  1          CAN_MODATA11LL = 0x0000;     // load MO11 Data Bytes(DB1 & DB0)
 1012  1      
 1013  1        ///  Configuration of Message Object 11 acceptance mask:
 1014  1        ///  - only accept receive frames with matching IDE bit
 1015  1        ///  - acceptance mask 11-bit: 0x7FF
 1016  1      
 1017  1          CAN_MOAMR11H = 0x3FFF;       // load MO11 acceptance mask register high
 1018  1          CAN_MOAMR11L = 0xFFFF;       // load MO11 acceptance mask register low
 1019  1      
 1020  1        ///  Configuration of Message Object 11 interrupt pointer:
 1021  1        ///  - use message pending register 0 bit position 11
 1022  1      
 1023  1          CAN_MOIPR11H = 0x0000;       // load MO11 interrupt pointer register high
 1024  1          CAN_MOIPR11L = 0x0B00;       // load MO11 interrupt pointer register low
 1025  1      
 1026  1        ///  Configuration of Message Object 11 FIFO/Gateway pointer:
 1027  1      
 1028  1          CAN_MOFGPR11H = 0x0000;      // load MO11 FIFO/gateway pointer register 
 1029  1                                       // high
 1030  1          CAN_MOFGPR11L = 0x0000;      // load MO11 FIFO/gateway pointer register 
 1031  1                                       // low
 1032  1      
 1033  1      
 1034  1        ///  Configuration of Message Object 11 Function control:
 1035  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1036  1        ///  - 8 valid data bytes
 1037  1      
 1038  1          CAN_MOFCR11H = 0x0800;       // load MO11 function control register high
 1039  1          CAN_MOFCR11L = 0x0000;       // load MO11 function control register low
 1040  1      
 1041  1        ///  -----------------------------------------------------------------------
 1042  1        ///  Configuration of Message Object 12:
 1043  1        ///  -----------------------------------------------------------------------
 1044  1      
 1045  1        ///  General Configuration of the Message Object 12 :
 1046  1        ///  - message object 12 is valid
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 18  

 1047  1        ///  - message object is used as receive object
 1048  1        ///  - this message object is assigned to list 1 (node 0)
 1049  1      
 1050  1          CAN_MOCTR12H = 0x00A0;       // load MO12 control register high
 1051  1          CAN_MOCTR12L = 0x0000;       // load MO12 control register low
 1052  1      
 1053  1        ///  Configuration of Message Object 12 Arbitration:
 1054  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
 1055  1        ///    order
 1056  1        ///  - standard 11-bit identifier
 1057  1        ///  - identifier 11-bit:      0x283
 1058  1      
 1059  1          CAN_MOAR12H = 0x4A0C;        // load MO12 arbitration register high
 1060  1          CAN_MOAR12L = 0x0000;        // load MO12 arbitration register low
 1061  1      
 1062  1        ///  Configuration of Message Object 12 acceptance mask:
 1063  1        ///  - only accept receive frames with matching IDE bit
 1064  1        ///  - acceptance mask 11-bit: 0x7FF
 1065  1      
 1066  1          CAN_MOAMR12H = 0x3FFF;       // load MO12 acceptance mask register high
 1067  1          CAN_MOAMR12L = 0xFFFF;       // load MO12 acceptance mask register low
 1068  1      
 1069  1        ///  Configuration of Message Object 12 interrupt pointer:
 1070  1        ///  - use message pending register 0 bit position 12
 1071  1        ///  - receive interrupt node pointer: MultiCAN SRN 0
 1072  1      
 1073  1          CAN_MOIPR12H = 0x0000;       // load MO12 interrupt pointer register high
 1074  1          CAN_MOIPR12L = 0x0C00;       // load MO12 interrupt pointer register low
 1075  1      
 1076  1        ///  Configuration of Message Object 12 FIFO/Gateway pointer:
 1077  1      
 1078  1          CAN_MOFGPR12H = 0x0000;      // load MO12 FIFO/gateway pointer register 
 1079  1                                       // high
 1080  1          CAN_MOFGPR12L = 0x0000;      // load MO12 FIFO/gateway pointer register 
 1081  1                                       // low
 1082  1      
 1083  1      
 1084  1        ///  Configuration of Message Object 12 Function control:
 1085  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1086  1        ///  - 8 valid data bytes
 1087  1        ///  - enable receive interrupt; bit RXPND is set after successful 
 1088  1        ///    reception of a frame
 1089  1      
 1090  1          CAN_MOFCR12H = 0x0801;       // load MO12 function control register high
 1091  1          CAN_MOFCR12L = 0x0000;       // load MO12 function control register low
 1092  1      
 1093  1        ///  -----------------------------------------------------------------------
 1094  1        ///  Configuration of Message Object 13:
 1095  1        ///  -----------------------------------------------------------------------
 1096  1      
 1097  1        ///  General Configuration of the Message Object 13 :
 1098  1        ///  - message object 13 is valid
 1099  1        ///  - message object is used as transmit object
 1100  1        ///  - this message object is assigned to list 1 (node 0)
 1101  1      
 1102  1          CAN_MOCTR13H = 0x0EA8;       // load MO13 control register high
 1103  1          CAN_MOCTR13L = 0x0000;       // load MO13 control register low
 1104  1      
 1105  1        ///  Configuration of Message Object 13 Arbitration:
 1106  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
 1107  1        ///    order
 1108  1        ///  - standard 11-bit identifier
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 19  

 1109  1        ///  - identifier 11-bit:      0x190
 1110  1      
 1111  1          CAN_MOAR13H = 0x4640;        // load MO13 arbitration register high
 1112  1          CAN_MOAR13L = 0x0000;        // load MO13 arbitration register low
 1113  1      
 1114  1        ///  Configuration of Message Object 13 Data:
 1115  1      
 1116  1          CAN_MODATA13HH = 0x0000;     // load MO13 Data Bytes(DB7 & DB6)
 1117  1          CAN_MODATA13HL = 0x0000;     // load MO13 Data Bytes(DB5 & DB4)
 1118  1          CAN_MODATA13LH = 0x0000;     // load MO13 Data Bytes(DB3 & DB2)
 1119  1          CAN_MODATA13LL = 0x0000;     // load MO13 Data Bytes(DB1 & DB0)
 1120  1      
 1121  1        ///  Configuration of Message Object 13 acceptance mask:
 1122  1        ///  - only accept receive frames with matching IDE bit
 1123  1        ///  - acceptance mask 11-bit: 0x7FF
 1124  1      
 1125  1          CAN_MOAMR13H = 0x3FFF;       // load MO13 acceptance mask register high
 1126  1          CAN_MOAMR13L = 0xFFFF;       // load MO13 acceptance mask register low
 1127  1      
 1128  1        ///  Configuration of Message Object 13 interrupt pointer:
 1129  1        ///  - use message pending register 0 bit position 13
 1130  1      
 1131  1          CAN_MOIPR13H = 0x0000;       // load MO13 interrupt pointer register high
 1132  1          CAN_MOIPR13L = 0x0D00;       // load MO13 interrupt pointer register low
 1133  1      
 1134  1        ///  Configuration of Message Object 13 FIFO/Gateway pointer:
 1135  1      
 1136  1          CAN_MOFGPR13H = 0x0000;      // load MO13 FIFO/gateway pointer register 
 1137  1                                       // high
 1138  1          CAN_MOFGPR13L = 0x0000;      // load MO13 FIFO/gateway pointer register 
 1139  1                                       // low
 1140  1      
 1141  1      
 1142  1        ///  Configuration of Message Object 13 Function control:
 1143  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1144  1        ///  - 8 valid data bytes
 1145  1      
 1146  1          CAN_MOFCR13H = 0x0800;       // load MO13 function control register high
 1147  1          CAN_MOFCR13L = 0x0000;       // load MO13 function control register low
 1148  1      
 1149  1        ///  -----------------------------------------------------------------------
 1150  1        ///  Configuration of Message Object 14:
 1151  1        ///  -----------------------------------------------------------------------
 1152  1      
 1153  1        ///  General Configuration of the Message Object 14 :
 1154  1        ///  - message object 14 is valid
 1155  1        ///  - message object is used as transmit object
 1156  1        ///  - this message object is assigned to list 1 (node 0)
 1157  1      
 1158  1          CAN_MOCTR14H = 0x0EA8;       // load MO14 control register high
 1159  1          CAN_MOCTR14L = 0x0000;       // load MO14 control register low
 1160  1      
 1161  1        ///  Configuration of Message Object 14 Arbitration:
 1162  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
 1163  1        ///    order
 1164  1        ///  - standard 11-bit identifier
 1165  1        ///  - identifier 11-bit:      0x077
 1166  1      
 1167  1          CAN_MOAR14H = 0x41DC;        // load MO14 arbitration register high
 1168  1          CAN_MOAR14L = 0x0000;        // load MO14 arbitration register low
 1169  1      
 1170  1        ///  Configuration of Message Object 14 Data:
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 20  

 1171  1      
 1172  1          CAN_MODATA14HH = 0x0000;     // load MO14 Data Bytes(DB7 & DB6)
 1173  1          CAN_MODATA14HL = 0x0000;     // load MO14 Data Bytes(DB5 & DB4)
 1174  1          CAN_MODATA14LH = 0x0000;     // load MO14 Data Bytes(DB3 & DB2)
 1175  1          CAN_MODATA14LL = 0x0000;     // load MO14 Data Bytes(DB1 & DB0)
 1176  1      
 1177  1        ///  Configuration of Message Object 14 acceptance mask:
 1178  1        ///  - only accept receive frames with matching IDE bit
 1179  1        ///  - acceptance mask 11-bit: 0x7FF
 1180  1      
 1181  1          CAN_MOAMR14H = 0x3FFF;       // load MO14 acceptance mask register high
 1182  1          CAN_MOAMR14L = 0xFFFF;       // load MO14 acceptance mask register low
 1183  1      
 1184  1        ///  Configuration of Message Object 14 interrupt pointer:
 1185  1        ///  - use message pending register 0 bit position 14
 1186  1      
 1187  1          CAN_MOIPR14H = 0x0000;       // load MO14 interrupt pointer register high
 1188  1          CAN_MOIPR14L = 0x0E00;       // load MO14 interrupt pointer register low
 1189  1      
 1190  1        ///  Configuration of Message Object 14 FIFO/Gateway pointer:
 1191  1      
 1192  1          CAN_MOFGPR14H = 0x0000;      // load MO14 FIFO/gateway pointer register 
 1193  1                                       // high
 1194  1          CAN_MOFGPR14L = 0x0000;      // load MO14 FIFO/gateway pointer register 
 1195  1                                       // low
 1196  1      
 1197  1      
 1198  1        ///  Configuration of Message Object 14 Function control:
 1199  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1200  1        ///  - 8 valid data bytes
 1201  1      
 1202  1          CAN_MOFCR14H = 0x0800;       // load MO14 function control register high
 1203  1          CAN_MOFCR14L = 0x0000;       // load MO14 function control register low
 1204  1      
 1205  1        ///  -----------------------------------------------------------------------
 1206  1        ///  Configuration of Message Object 15:
 1207  1        ///  -----------------------------------------------------------------------
 1208  1      
 1209  1        ///  General Configuration of the Message Object 15 :
 1210  1        ///  - message object 15 is valid
 1211  1        ///  - message object is used as receive object
 1212  1        ///  - this message object is assigned to list 1 (node 0)
 1213  1      
 1214  1          CAN_MOCTR15H = 0x00A0;       // load MO15 control register high
 1215  1          CAN_MOCTR15L = 0x0000;       // load MO15 control register low
 1216  1      
 1217  1        ///  Configuration of Message Object 15 Arbitration:
 1218  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
 1219  1        ///    order
 1220  1        ///  - standard 11-bit identifier
 1221  1        ///  - identifier 11-bit:      0x183
 1222  1      
 1223  1          CAN_MOAR15H = 0x460C;        // load MO15 arbitration register high
 1224  1          CAN_MOAR15L = 0x0000;        // load MO15 arbitration register low
 1225  1      
 1226  1        ///  Configuration of Message Object 15 acceptance mask:
 1227  1        ///  - only accept receive frames with matching IDE bit
 1228  1        ///  - acceptance mask 11-bit: 0x7FF
 1229  1      
 1230  1          CAN_MOAMR15H = 0x3FFF;       // load MO15 acceptance mask register high
 1231  1          CAN_MOAMR15L = 0xFFFF;       // load MO15 acceptance mask register low
 1232  1      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 21  

 1233  1        ///  Configuration of Message Object 15 interrupt pointer:
 1234  1        ///  - use message pending register 0 bit position 15
 1235  1        ///  - receive interrupt node pointer: MultiCAN SRN 0
 1236  1      
 1237  1          CAN_MOIPR15H = 0x0000;       // load MO15 interrupt pointer register high
 1238  1          CAN_MOIPR15L = 0x0F00;       // load MO15 interrupt pointer register low
 1239  1      
 1240  1        ///  Configuration of Message Object 15 FIFO/Gateway pointer:
 1241  1      
 1242  1          CAN_MOFGPR15H = 0x0000;      // load MO15 FIFO/gateway pointer register 
 1243  1                                       // high
 1244  1          CAN_MOFGPR15L = 0x0000;      // load MO15 FIFO/gateway pointer register 
 1245  1                                       // low
 1246  1      
 1247  1      
 1248  1        ///  Configuration of Message Object 15 Function control:
 1249  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1250  1        ///  - 8 valid data bytes
 1251  1        ///  - enable receive interrupt; bit RXPND is set after successful 
 1252  1        ///    reception of a frame
 1253  1      
 1254  1          CAN_MOFCR15H = 0x0801;       // load MO15 function control register high
 1255  1          CAN_MOFCR15L = 0x0000;       // load MO15 function control register low
 1256  1      
 1257  1        ///  -----------------------------------------------------------------------
 1258  1        ///  Configuration of Message Object 16:
 1259  1        ///  -----------------------------------------------------------------------
 1260  1      
 1261  1        ///  General Configuration of the Message Object 16 :
 1262  1        ///  - message object 16 is valid
 1263  1        ///  - message object is used as receive object
 1264  1        ///  - this message object is assigned to list 1 (node 0)
 1265  1      
 1266  1          CAN_MOCTR16H = 0x00A0;       // load MO16 control register high
 1267  1          CAN_MOCTR16L = 0x0000;       // load MO16 control register low
 1268  1      
 1269  1        ///  Configuration of Message Object 16 Arbitration:
 1270  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
 1271  1        ///    order
 1272  1        ///  - standard 11-bit identifier
 1273  1        ///  - identifier 11-bit:      0x436
 1274  1      
 1275  1          CAN_MOAR16H = 0x50D8;        // load MO16 arbitration register high
 1276  1          CAN_MOAR16L = 0x0000;        // load MO16 arbitration register low
 1277  1      
 1278  1        ///  Configuration of Message Object 16 acceptance mask:
 1279  1        ///  - only accept receive frames with matching IDE bit
 1280  1        ///  - acceptance mask 11-bit: 0x7FF
 1281  1      
 1282  1          CAN_MOAMR16H = 0x3FFF;       // load MO16 acceptance mask register high
 1283  1          CAN_MOAMR16L = 0xFFFF;       // load MO16 acceptance mask register low
 1284  1      
 1285  1        ///  Configuration of Message Object 16 interrupt pointer:
 1286  1        ///  - use message pending register 0 bit position 16
 1287  1        ///  - receive interrupt node pointer: MultiCAN SRN 0
 1288  1      
 1289  1          CAN_MOIPR16H = 0x0000;       // load MO16 interrupt pointer register high
 1290  1          CAN_MOIPR16L = 0x1000;       // load MO16 interrupt pointer register low
 1291  1      
 1292  1        ///  Configuration of Message Object 16 FIFO/Gateway pointer:
 1293  1      
 1294  1          CAN_MOFGPR16H = 0x0000;      // load MO16 FIFO/gateway pointer register 
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 22  

 1295  1                                       // high
 1296  1          CAN_MOFGPR16L = 0x0000;      // load MO16 FIFO/gateway pointer register 
 1297  1                                       // low
 1298  1      
 1299  1      
 1300  1        ///  Configuration of Message Object 16 Function control:
 1301  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1302  1        ///  - 8 valid data bytes
 1303  1        ///  - enable receive interrupt; bit RXPND is set after successful 
 1304  1        ///    reception of a frame
 1305  1      
 1306  1          CAN_MOFCR16H = 0x0801;       // load MO16 function control register high
 1307  1          CAN_MOFCR16L = 0x0000;       // load MO16 function control register low
 1308  1      
 1309  1        ///  -----------------------------------------------------------------------
 1310  1        ///  Configuration of Message Object 17:
 1311  1        ///  -----------------------------------------------------------------------
 1312  1      
 1313  1        ///  General Configuration of the Message Object 17 :
 1314  1        ///  - message object 17 is valid
 1315  1        ///  - message object is used as transmit object
 1316  1        ///  - this message object is assigned to list 1 (node 0)
 1317  1      
 1318  1          CAN_MOCTR17H = 0x0EA8;       // load MO17 control register high
 1319  1          CAN_MOCTR17L = 0x0000;       // load MO17 control register low
 1320  1      
 1321  1        ///  Configuration of Message Object 17 Arbitration:
 1322  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
 1323  1        ///    order
 1324  1        ///  - standard 11-bit identifier
 1325  1        ///  - identifier 11-bit:      0x430
 1326  1      
 1327  1          CAN_MOAR17H = 0x50C0;        // load MO17 arbitration register high
 1328  1          CAN_MOAR17L = 0x0000;        // load MO17 arbitration register low
 1329  1      
 1330  1        ///  Configuration of Message Object 17 Data:
 1331  1      
 1332  1          CAN_MODATA17HH = 0x0000;     // load MO17 Data Bytes(DB7 & DB6)
 1333  1          CAN_MODATA17HL = 0x0000;     // load MO17 Data Bytes(DB5 & DB4)
 1334  1          CAN_MODATA17LH = 0x0000;     // load MO17 Data Bytes(DB3 & DB2)
 1335  1          CAN_MODATA17LL = 0x0000;     // load MO17 Data Bytes(DB1 & DB0)
 1336  1      
 1337  1        ///  Configuration of Message Object 17 acceptance mask:
 1338  1        ///  - only accept receive frames with matching IDE bit
 1339  1        ///  - acceptance mask 11-bit: 0x7FF
 1340  1      
 1341  1          CAN_MOAMR17H = 0x3FFF;       // load MO17 acceptance mask register high
 1342  1          CAN_MOAMR17L = 0xFFFF;       // load MO17 acceptance mask register low
 1343  1      
 1344  1        ///  Configuration of Message Object 17 interrupt pointer:
 1345  1        ///  - use message pending register 0 bit position 17
 1346  1      
 1347  1          CAN_MOIPR17H = 0x0000;       // load MO17 interrupt pointer register high
 1348  1          CAN_MOIPR17L = 0x1100;       // load MO17 interrupt pointer register low
 1349  1      
 1350  1        ///  Configuration of Message Object 17 FIFO/Gateway pointer:
 1351  1      
 1352  1          CAN_MOFGPR17H = 0x0000;      // load MO17 FIFO/gateway pointer register 
 1353  1                                       // high
 1354  1          CAN_MOFGPR17L = 0x0000;      // load MO17 FIFO/gateway pointer register 
 1355  1                                       // low
 1356  1      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 23  

 1357  1      
 1358  1        ///  Configuration of Message Object 17 Function control:
 1359  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1360  1        ///  - 8 valid data bytes
 1361  1      
 1362  1          CAN_MOFCR17H = 0x0800;       // load MO17 function control register high
 1363  1          CAN_MOFCR17L = 0x0000;       // load MO17 function control register low
 1364  1      
 1365  1        ///  -----------------------------------------------------------------------
 1366  1        ///  Configuration of Message Object 18:
 1367  1        ///  -----------------------------------------------------------------------
 1368  1      
 1369  1        ///  General Configuration of the Message Object 18 :
 1370  1        ///  - message object 18 is valid
 1371  1        ///  - message object is used as transmit object
 1372  1        ///  - this message object is assigned to list 1 (node 0)
 1373  1      
 1374  1          CAN_MOCTR18H = 0x0EA8;       // load MO18 control register high
 1375  1          CAN_MOCTR18L = 0x0000;       // load MO18 control register low
 1376  1      
 1377  1        ///  Configuration of Message Object 18 Arbitration:
 1378  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
 1379  1        ///    order
 1380  1        ///  - standard 11-bit identifier
 1381  1        ///  - identifier 11-bit:      0x401
 1382  1      
 1383  1          CAN_MOAR18H = 0x5004;        // load MO18 arbitration register high
 1384  1          CAN_MOAR18L = 0x0000;        // load MO18 arbitration register low
 1385  1      
 1386  1        ///  Configuration of Message Object 18 Data:
 1387  1      
 1388  1          CAN_MODATA18HH = 0x0000;     // load MO18 Data Bytes(DB7 & DB6)
 1389  1          CAN_MODATA18HL = 0x0000;     // load MO18 Data Bytes(DB5 & DB4)
 1390  1          CAN_MODATA18LH = 0x0000;     // load MO18 Data Bytes(DB3 & DB2)
 1391  1          CAN_MODATA18LL = 0x0000;     // load MO18 Data Bytes(DB1 & DB0)
 1392  1      
 1393  1        ///  Configuration of Message Object 18 acceptance mask:
 1394  1        ///  - only accept receive frames with matching IDE bit
 1395  1        ///  - acceptance mask 11-bit: 0x7FF
 1396  1      
 1397  1          CAN_MOAMR18H = 0x3FFF;       // load MO18 acceptance mask register high
 1398  1          CAN_MOAMR18L = 0xFFFF;       // load MO18 acceptance mask register low
 1399  1      
 1400  1        ///  Configuration of Message Object 18 interrupt pointer:
 1401  1        ///  - use message pending register 0 bit position 18
 1402  1      
 1403  1          CAN_MOIPR18H = 0x0000;       // load MO18 interrupt pointer register high
 1404  1          CAN_MOIPR18L = 0x1200;       // load MO18 interrupt pointer register low
 1405  1      
 1406  1        ///  Configuration of Message Object 18 FIFO/Gateway pointer:
 1407  1      
 1408  1          CAN_MOFGPR18H = 0x0000;      // load MO18 FIFO/gateway pointer register 
 1409  1                                       // high
 1410  1          CAN_MOFGPR18L = 0x0000;      // load MO18 FIFO/gateway pointer register 
 1411  1                                       // low
 1412  1      
 1413  1      
 1414  1        ///  Configuration of Message Object 18 Function control:
 1415  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1416  1        ///  - 8 valid data bytes
 1417  1      
 1418  1          CAN_MOFCR18H = 0x0800;       // load MO18 function control register high
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 24  

 1419  1          CAN_MOFCR18L = 0x0000;       // load MO18 function control register low
 1420  1      
 1421  1        ///  -----------------------------------------------------------------------
 1422  1        ///  Configuration of Message Object 19:
 1423  1        ///  -----------------------------------------------------------------------
 1424  1      
 1425  1        ///  General Configuration of the Message Object 19 :
 1426  1        ///  - message object 19 is valid
 1427  1        ///  - message object is used as receive object
 1428  1        ///  - this message object is assigned to list 1 (node 0)
 1429  1      
 1430  1          CAN_MOCTR19H = 0x00A0;       // load MO19 control register high
 1431  1          CAN_MOCTR19L = 0x0000;       // load MO19 control register low
 1432  1      
 1433  1        ///  Configuration of Message Object 19 Arbitration:
 1434  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
 1435  1        ///    order
 1436  1        ///  - standard 11-bit identifier
 1437  1        ///  - identifier 11-bit:      0x319
 1438  1      
 1439  1          CAN_MOAR19H = 0x4C64;        // load MO19 arbitration register high
 1440  1          CAN_MOAR19L = 0x0000;        // load MO19 arbitration register low
 1441  1      
 1442  1        ///  Configuration of Message Object 19 acceptance mask:
 1443  1        ///  - only accept receive frames with matching IDE bit
 1444  1        ///  - acceptance mask 11-bit: 0x7FF
 1445  1      
 1446  1          CAN_MOAMR19H = 0x3FFF;       // load MO19 acceptance mask register high
 1447  1          CAN_MOAMR19L = 0xFFFF;       // load MO19 acceptance mask register low
 1448  1      
 1449  1        ///  Configuration of Message Object 19 interrupt pointer:
 1450  1        ///  - use message pending register 0 bit position 19
 1451  1        ///  - receive interrupt node pointer: MultiCAN SRN 0
 1452  1      
 1453  1          CAN_MOIPR19H = 0x0000;       // load MO19 interrupt pointer register high
 1454  1          CAN_MOIPR19L = 0x1300;       // load MO19 interrupt pointer register low
 1455  1      
 1456  1        ///  Configuration of Message Object 19 FIFO/Gateway pointer:
 1457  1      
 1458  1          CAN_MOFGPR19H = 0x0000;      // load MO19 FIFO/gateway pointer register 
 1459  1                                       // high
 1460  1          CAN_MOFGPR19L = 0x0000;      // load MO19 FIFO/gateway pointer register 
 1461  1                                       // low
 1462  1      
 1463  1      
 1464  1        ///  Configuration of Message Object 19 Function control:
 1465  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1466  1        ///  - 8 valid data bytes
 1467  1        ///  - enable receive interrupt; bit RXPND is set after successful 
 1468  1        ///    reception of a frame
 1469  1      
 1470  1          CAN_MOFCR19H = 0x0801;       // load MO19 function control register high
 1471  1          CAN_MOFCR19L = 0x0000;       // load MO19 function control register low
 1472  1      
 1473  1        ///  -----------------------------------------------------------------------
 1474  1        ///  Configuration of Message Object 20:
 1475  1        ///  -----------------------------------------------------------------------
 1476  1      
 1477  1        ///  General Configuration of the Message Object 20 :
 1478  1        ///  - message object 20 is valid
 1479  1        ///  - message object is used as receive object
 1480  1        ///  - this message object is assigned to list 1 (node 0)
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 25  

 1481  1      
 1482  1          CAN_MOCTR20H = 0x00A0;       // load MO20 control register high
 1483  1          CAN_MOCTR20L = 0x0000;       // load MO20 control register low
 1484  1      
 1485  1        ///  Configuration of Message Object 20 Arbitration:
 1486  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
 1487  1        ///    order
 1488  1        ///  - standard 11-bit identifier
 1489  1        ///  - identifier 11-bit:      0x329
 1490  1      
 1491  1          CAN_MOAR20H = 0x4CA4;        // load MO20 arbitration register high
 1492  1          CAN_MOAR20L = 0x0000;        // load MO20 arbitration register low
 1493  1      
 1494  1        ///  Configuration of Message Object 20 acceptance mask:
 1495  1        ///  - only accept receive frames with matching IDE bit
 1496  1        ///  - acceptance mask 11-bit: 0x7FF
 1497  1      
 1498  1          CAN_MOAMR20H = 0x3FFF;       // load MO20 acceptance mask register high
 1499  1          CAN_MOAMR20L = 0xFFFF;       // load MO20 acceptance mask register low
 1500  1      
 1501  1        ///  Configuration of Message Object 20 interrupt pointer:
 1502  1        ///  - use message pending register 0 bit position 20
 1503  1        ///  - receive interrupt node pointer: MultiCAN SRN 0
 1504  1      
 1505  1          CAN_MOIPR20H = 0x0000;       // load MO20 interrupt pointer register high
 1506  1          CAN_MOIPR20L = 0x1400;       // load MO20 interrupt pointer register low
 1507  1      
 1508  1        ///  Configuration of Message Object 20 FIFO/Gateway pointer:
 1509  1      
 1510  1          CAN_MOFGPR20H = 0x0000;      // load MO20 FIFO/gateway pointer register 
 1511  1                                       // high
 1512  1          CAN_MOFGPR20L = 0x0000;      // load MO20 FIFO/gateway pointer register 
 1513  1                                       // low
 1514  1      
 1515  1      
 1516  1        ///  Configuration of Message Object 20 Function control:
 1517  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1518  1        ///  - 8 valid data bytes
 1519  1        ///  - enable receive interrupt; bit RXPND is set after successful 
 1520  1        ///    reception of a frame
 1521  1      
 1522  1          CAN_MOFCR20H = 0x0801;       // load MO20 function control register high
 1523  1          CAN_MOFCR20L = 0x0000;       // load MO20 function control register low
 1524  1      
 1525  1        ///  -----------------------------------------------------------------------
 1526  1        ///  Configuration of Message Object 21:
 1527  1        ///  -----------------------------------------------------------------------
 1528  1      
 1529  1        ///  General Configuration of the Message Object 21 :
 1530  1        ///  - message object 21 is valid
 1531  1        ///  - message object is used as receive object
 1532  1        ///  - this message object is assigned to list 1 (node 0)
 1533  1      
 1534  1          CAN_MOCTR21H = 0x00A0;       // load MO21 control register high
 1535  1          CAN_MOCTR21L = 0x0000;       // load MO21 control register low
 1536  1      
 1537  1        ///  Configuration of Message Object 21 Arbitration:
 1538  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
 1539  1        ///    order
 1540  1        ///  - standard 11-bit identifier
 1541  1        ///  - identifier 11-bit:      0x339
 1542  1      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 26  

 1543  1          CAN_MOAR21H = 0x4CE4;        // load MO21 arbitration register high
 1544  1          CAN_MOAR21L = 0x0000;        // load MO21 arbitration register low
 1545  1      
 1546  1        ///  Configuration of Message Object 21 acceptance mask:
 1547  1        ///  - only accept receive frames with matching IDE bit
 1548  1        ///  - acceptance mask 11-bit: 0x7FF
 1549  1      
 1550  1          CAN_MOAMR21H = 0x3FFF;       // load MO21 acceptance mask register high
 1551  1          CAN_MOAMR21L = 0xFFFF;       // load MO21 acceptance mask register low
 1552  1      
 1553  1        ///  Configuration of Message Object 21 interrupt pointer:
 1554  1        ///  - use message pending register 0 bit position 21
 1555  1        ///  - receive interrupt node pointer: MultiCAN SRN 0
 1556  1      
 1557  1          CAN_MOIPR21H = 0x0000;       // load MO21 interrupt pointer register high
 1558  1          CAN_MOIPR21L = 0x1500;       // load MO21 interrupt pointer register low
 1559  1      
 1560  1        ///  Configuration of Message Object 21 FIFO/Gateway pointer:
 1561  1      
 1562  1          CAN_MOFGPR21H = 0x0000;      // load MO21 FIFO/gateway pointer register 
 1563  1                                       // high
 1564  1          CAN_MOFGPR21L = 0x0000;      // load MO21 FIFO/gateway pointer register 
 1565  1                                       // low
 1566  1      
 1567  1      
 1568  1        ///  Configuration of Message Object 21 Function control:
 1569  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1570  1        ///  - 8 valid data bytes
 1571  1        ///  - enable receive interrupt; bit RXPND is set after successful 
 1572  1        ///    reception of a frame
 1573  1      
 1574  1          CAN_MOFCR21H = 0x0801;       // load MO21 function control register high
 1575  1          CAN_MOFCR21L = 0x0000;       // load MO21 function control register low
 1576  1      
 1577  1        ///  -----------------------------------------------------------------------
 1578  1        ///  Configuration of Message Object 22:
 1579  1        ///  -----------------------------------------------------------------------
 1580  1      
 1581  1        ///  General Configuration of the Message Object 22 :
 1582  1        ///  - message object 22 is valid
 1583  1        ///  - message object is used as receive object
 1584  1        ///  - this message object is assigned to list 1 (node 0)
 1585  1      
 1586  1          CAN_MOCTR22H = 0x00A0;       // load MO22 control register high
 1587  1          CAN_MOCTR22L = 0x0000;       // load MO22 control register low
 1588  1      
 1589  1        ///  Configuration of Message Object 22 Arbitration:
 1590  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
 1591  1        ///    order
 1592  1        ///  - standard 11-bit identifier
 1593  1        ///  - identifier 11-bit:      0x349
 1594  1      
 1595  1          CAN_MOAR22H = 0x4D24;        // load MO22 arbitration register high
 1596  1          CAN_MOAR22L = 0x0000;        // load MO22 arbitration register low
 1597  1      
 1598  1        ///  Configuration of Message Object 22 acceptance mask:
 1599  1        ///  - only accept receive frames with matching IDE bit
 1600  1        ///  - acceptance mask 11-bit: 0x7FF
 1601  1      
 1602  1          CAN_MOAMR22H = 0x3FFF;       // load MO22 acceptance mask register high
 1603  1          CAN_MOAMR22L = 0xFFFF;       // load MO22 acceptance mask register low
 1604  1      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 27  

 1605  1        ///  Configuration of Message Object 22 interrupt pointer:
 1606  1        ///  - use message pending register 0 bit position 22
 1607  1        ///  - receive interrupt node pointer: MultiCAN SRN 0
 1608  1      
 1609  1          CAN_MOIPR22H = 0x0000;       // load MO22 interrupt pointer register high
 1610  1          CAN_MOIPR22L = 0x1600;       // load MO22 interrupt pointer register low
 1611  1      
 1612  1        ///  Configuration of Message Object 22 FIFO/Gateway pointer:
 1613  1      
 1614  1          CAN_MOFGPR22H = 0x0000;      // load MO22 FIFO/gateway pointer register 
 1615  1                                       // high
 1616  1          CAN_MOFGPR22L = 0x0000;      // load MO22 FIFO/gateway pointer register 
 1617  1                                       // low
 1618  1      
 1619  1      
 1620  1        ///  Configuration of Message Object 22 Function control:
 1621  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1622  1        ///  - 8 valid data bytes
 1623  1        ///  - enable receive interrupt; bit RXPND is set after successful 
 1624  1        ///    reception of a frame
 1625  1      
 1626  1          CAN_MOFCR22H = 0x0801;       // load MO22 function control register high
 1627  1          CAN_MOFCR22L = 0x0000;       // load MO22 function control register low
 1628  1      
 1629  1        ///  -----------------------------------------------------------------------
 1630  1        ///  Configuration of Message Object 23:
 1631  1        ///  -----------------------------------------------------------------------
 1632  1      
 1633  1        ///  General Configuration of the Message Object 23 :
 1634  1        ///  - message object 23 is valid
 1635  1        ///  - message object is used as transmit object
 1636  1        ///  - this message object is assigned to list 1 (node 0)
 1637  1      
 1638  1          CAN_MOCTR23H = 0x0EA8;       // load MO23 control register high
 1639  1          CAN_MOCTR23L = 0x0000;       // load MO23 control register low
 1640  1      
 1641  1        ///  Configuration of Message Object 23 Arbitration:
 1642  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
 1643  1        ///    order
 1644  1        ///  - standard 11-bit identifier
 1645  1        ///  - identifier 11-bit:      0x196
 1646  1      
 1647  1          CAN_MOAR23H = 0x4658;        // load MO23 arbitration register high
 1648  1          CAN_MOAR23L = 0x0000;        // load MO23 arbitration register low
 1649  1      
 1650  1        ///  Configuration of Message Object 23 Data:
 1651  1      
 1652  1          CAN_MODATA23HH = 0x0000;     // load MO23 Data Bytes(DB7 & DB6)
 1653  1          CAN_MODATA23HL = 0x0000;     // load MO23 Data Bytes(DB5 & DB4)
 1654  1          CAN_MODATA23LH = 0x0000;     // load MO23 Data Bytes(DB3 & DB2)
 1655  1          CAN_MODATA23LL = 0x0000;     // load MO23 Data Bytes(DB1 & DB0)
 1656  1      
 1657  1        ///  Configuration of Message Object 23 acceptance mask:
 1658  1        ///  - only accept receive frames with matching IDE bit
 1659  1        ///  - acceptance mask 11-bit: 0x7FF
 1660  1      
 1661  1          CAN_MOAMR23H = 0x3FFF;       // load MO23 acceptance mask register high
 1662  1          CAN_MOAMR23L = 0xFFFF;       // load MO23 acceptance mask register low
 1663  1      
 1664  1        ///  Configuration of Message Object 23 interrupt pointer:
 1665  1        ///  - use message pending register 0 bit position 23
 1666  1      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 28  

 1667  1          CAN_MOIPR23H = 0x0000;       // load MO23 interrupt pointer register high
 1668  1          CAN_MOIPR23L = 0x1700;       // load MO23 interrupt pointer register low
 1669  1      
 1670  1        ///  Configuration of Message Object 23 FIFO/Gateway pointer:
 1671  1      
 1672  1          CAN_MOFGPR23H = 0x0000;      // load MO23 FIFO/gateway pointer register 
 1673  1                                       // high
 1674  1          CAN_MOFGPR23L = 0x0000;      // load MO23 FIFO/gateway pointer register 
 1675  1                                       // low
 1676  1      
 1677  1      
 1678  1        ///  Configuration of Message Object 23 Function control:
 1679  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1680  1        ///  - 8 valid data bytes
 1681  1      
 1682  1          CAN_MOFCR23H = 0x0800;       // load MO23 function control register high
 1683  1          CAN_MOFCR23L = 0x0000;       // load MO23 function control register low
 1684  1      
 1685  1        ///  -----------------------------------------------------------------------
 1686  1        ///  Configuration of Message Object 24:
 1687  1        ///  -----------------------------------------------------------------------
 1688  1      
 1689  1        ///  General Configuration of the Message Object 24 :
 1690  1        ///  - message object 24 is valid
 1691  1        ///  - message object is used as transmit object
 1692  1        ///  - this message object is assigned to list 1 (node 0)
 1693  1      
 1694  1          CAN_MOCTR24H = 0x0EA8;       // load MO24 control register high
 1695  1          CAN_MOCTR24L = 0x0000;       // load MO24 control register low
 1696  1      
 1697  1        ///  Configuration of Message Object 24 Arbitration:
 1698  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
 1699  1        ///    order
 1700  1        ///  - standard 11-bit identifier
 1701  1        ///  - identifier 11-bit:      0x197
 1702  1      
 1703  1          CAN_MOAR24H = 0x465C;        // load MO24 arbitration register high
 1704  1          CAN_MOAR24L = 0x0000;        // load MO24 arbitration register low
 1705  1      
 1706  1        ///  Configuration of Message Object 24 Data:
 1707  1      
 1708  1          CAN_MODATA24HH = 0x0000;     // load MO24 Data Bytes(DB7 & DB6)
 1709  1          CAN_MODATA24HL = 0x0000;     // load MO24 Data Bytes(DB5 & DB4)
 1710  1          CAN_MODATA24LH = 0x0000;     // load MO24 Data Bytes(DB3 & DB2)
 1711  1          CAN_MODATA24LL = 0x0000;     // load MO24 Data Bytes(DB1 & DB0)
 1712  1      
 1713  1        ///  Configuration of Message Object 24 acceptance mask:
 1714  1        ///  - only accept receive frames with matching IDE bit
 1715  1        ///  - acceptance mask 11-bit: 0x7FF
 1716  1      
 1717  1          CAN_MOAMR24H = 0x3FFF;       // load MO24 acceptance mask register high
 1718  1          CAN_MOAMR24L = 0xFFFF;       // load MO24 acceptance mask register low
 1719  1      
 1720  1        ///  Configuration of Message Object 24 interrupt pointer:
 1721  1        ///  - use message pending register 0 bit position 24
 1722  1      
 1723  1          CAN_MOIPR24H = 0x0000;       // load MO24 interrupt pointer register high
 1724  1          CAN_MOIPR24L = 0x1800;       // load MO24 interrupt pointer register low
 1725  1      
 1726  1        ///  Configuration of Message Object 24 FIFO/Gateway pointer:
 1727  1      
 1728  1          CAN_MOFGPR24H = 0x0000;      // load MO24 FIFO/gateway pointer register 
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 29  

 1729  1                                       // high
 1730  1          CAN_MOFGPR24L = 0x0000;      // load MO24 FIFO/gateway pointer register 
 1731  1                                       // low
 1732  1      
 1733  1      
 1734  1        ///  Configuration of Message Object 24 Function control:
 1735  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1736  1        ///  - 8 valid data bytes
 1737  1      
 1738  1          CAN_MOFCR24H = 0x0800;       // load MO24 function control register high
 1739  1          CAN_MOFCR24L = 0x0000;       // load MO24 function control register low
 1740  1      
 1741  1        ///  -----------------------------------------------------------------------
 1742  1        ///  Configuration of Message Object 25:
 1743  1        ///  -----------------------------------------------------------------------
 1744  1      
 1745  1        ///  General Configuration of the Message Object 25 :
 1746  1        ///  - message object 25 is valid
 1747  1        ///  - message object is used as transmit object
 1748  1        ///  - this message object is assigned to list 1 (node 0)
 1749  1      
 1750  1          CAN_MOCTR25H = 0x0EA8;       // load MO25 control register high
 1751  1          CAN_MOCTR25L = 0x0000;       // load MO25 control register low
 1752  1      
 1753  1        ///  Configuration of Message Object 25 Arbitration:
 1754  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
 1755  1        ///    order
 1756  1        ///  - standard 11-bit identifier
 1757  1        ///  - identifier 11-bit:      0x101
 1758  1      
 1759  1          CAN_MOAR25H = 0x4404;        // load MO25 arbitration register high
 1760  1          CAN_MOAR25L = 0x0000;        // load MO25 arbitration register low
 1761  1      
 1762  1        ///  Configuration of Message Object 25 Data:
 1763  1      
 1764  1          CAN_MODATA25HH = 0x0000;     // load MO25 Data Bytes(DB7 & DB6)
 1765  1          CAN_MODATA25HL = 0x0000;     // load MO25 Data Bytes(DB5 & DB4)
 1766  1          CAN_MODATA25LH = 0x0000;     // load MO25 Data Bytes(DB3 & DB2)
 1767  1          CAN_MODATA25LL = 0x0000;     // load MO25 Data Bytes(DB1 & DB0)
 1768  1      
 1769  1        ///  Configuration of Message Object 25 acceptance mask:
 1770  1        ///  - only accept receive frames with matching IDE bit
 1771  1        ///  - acceptance mask 11-bit: 0x7FF
 1772  1      
 1773  1          CAN_MOAMR25H = 0x3FFF;       // load MO25 acceptance mask register high
 1774  1          CAN_MOAMR25L = 0xFFFF;       // load MO25 acceptance mask register low
 1775  1      
 1776  1        ///  Configuration of Message Object 25 interrupt pointer:
 1777  1        ///  - use message pending register 0 bit position 25
 1778  1      
 1779  1          CAN_MOIPR25H = 0x0000;       // load MO25 interrupt pointer register high
 1780  1          CAN_MOIPR25L = 0x1900;       // load MO25 interrupt pointer register low
 1781  1      
 1782  1        ///  Configuration of Message Object 25 FIFO/Gateway pointer:
 1783  1      
 1784  1          CAN_MOFGPR25H = 0x0000;      // load MO25 FIFO/gateway pointer register 
 1785  1                                       // high
 1786  1          CAN_MOFGPR25L = 0x0000;      // load MO25 FIFO/gateway pointer register 
 1787  1                                       // low
 1788  1      
 1789  1      
 1790  1        ///  Configuration of Message Object 25 Function control:
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 30  

 1791  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1792  1        ///  - 8 valid data bytes
 1793  1      
 1794  1          CAN_MOFCR25H = 0x0800;       // load MO25 function control register high
 1795  1          CAN_MOFCR25L = 0x0000;       // load MO25 function control register low
 1796  1      
 1797  1        ///  -----------------------------------------------------------------------
 1798  1        ///  Configuration of Message Object 26:
 1799  1        ///  -----------------------------------------------------------------------
 1800  1      
 1801  1        ///  General Configuration of the Message Object 26 :
 1802  1        ///  - message object 26 is valid
 1803  1        ///  - message object is used as receive object
 1804  1        ///  - this message object is assigned to list 1 (node 0)
 1805  1      
 1806  1          CAN_MOCTR26H = 0x00A0;       // load MO26 control register high
 1807  1          CAN_MOCTR26L = 0x0000;       // load MO26 control register low
 1808  1      
 1809  1        ///  Configuration of Message Object 26 Arbitration:
 1810  1        ///  - priority class 1; transmit acceptance filtering is based on the list 
 1811  1        ///    order
 1812  1        ///  - standard 11-bit identifier
 1813  1        ///  - identifier 11-bit:      0x700
 1814  1      
 1815  1          CAN_MOAR26H = 0x5C00;        // load MO26 arbitration register high
 1816  1          CAN_MOAR26L = 0x0000;        // load MO26 arbitration register low
 1817  1      
 1818  1        ///  Configuration of Message Object 26 acceptance mask:
 1819  1        ///  - only accept receive frames with matching IDE bit
 1820  1        ///  - acceptance mask 11-bit: 0x7FF
 1821  1      
 1822  1          CAN_MOAMR26H = 0x3FFF;       // load MO26 acceptance mask register high
 1823  1          CAN_MOAMR26L = 0xFFFF;       // load MO26 acceptance mask register low
 1824  1      
 1825  1        ///  Configuration of Message Object 26 interrupt pointer:
 1826  1        ///  - use message pending register 0 bit position 26
 1827  1        ///  - receive interrupt node pointer: MultiCAN SRN 0
 1828  1      
 1829  1          CAN_MOIPR26H = 0x0000;       // load MO26 interrupt pointer register high
 1830  1          CAN_MOIPR26L = 0x1A00;       // load MO26 interrupt pointer register low
 1831  1      
 1832  1        ///  Configuration of Message Object 26 FIFO/Gateway pointer:
 1833  1      
 1834  1          CAN_MOFGPR26H = 0x0000;      // load MO26 FIFO/gateway pointer register 
 1835  1                                       // high
 1836  1          CAN_MOFGPR26L = 0x0000;      // load MO26 FIFO/gateway pointer register 
 1837  1                                       // low
 1838  1      
 1839  1      
 1840  1        ///  Configuration of Message Object 26 Function control:
 1841  1        ///  - this object is a STANDARD MESSAGE OBJECT
 1842  1        ///  - 8 valid data bytes
 1843  1        ///  - enable receive interrupt; bit RXPND is set after successful 
 1844  1        ///    reception of a frame
 1845  1      
 1846  1          CAN_MOFCR26H = 0x0801;       // load MO26 function control register high
 1847  1          CAN_MOFCR26L = 0x0000;       // load MO26 function control register low
 1848  1      
 1849  1        ///  -----------------------------------------------------------------------
 1850  1        ///  Configuration of Message Object 27:
 1851  1        ///  -----------------------------------------------------------------------
 1852  1        ///  - message object 27 is not valid
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 31  

 1853  1        ///  -----------------------------------------------------------------------
 1854  1        ///  Configuration of Message Object 28:
 1855  1        ///  -----------------------------------------------------------------------
 1856  1        ///  - message object 28 is not valid
 1857  1        ///  -----------------------------------------------------------------------
 1858  1        ///  Configuration of Message Object 29:
 1859  1        ///  -----------------------------------------------------------------------
 1860  1        ///  - message object 29 is not valid
 1861  1        ///  -----------------------------------------------------------------------
 1862  1        ///  Configuration of Message Object 30:
 1863  1        ///  -----------------------------------------------------------------------
 1864  1        ///  - message object 30 is not valid
 1865  1        ///  -----------------------------------------------------------------------
 1866  1        ///  Configuration of Message Object 31:
 1867  1        ///  -----------------------------------------------------------------------
 1868  1        ///  - message object 31 is not valid
 1869  1        ///  -----------------------------------------------------------------------
 1870  1        ///  Configuration of Message Object 32:
 1871  1        ///  -----------------------------------------------------------------------
 1872  1        ///  - message object 32 is not valid
 1873  1        ///  -----------------------------------------------------------------------
 1874  1        ///  Configuration of Message Object 33:
 1875  1        ///  -----------------------------------------------------------------------
 1876  1        ///  - message object 33 is not valid
 1877  1        ///  -----------------------------------------------------------------------
 1878  1        ///  Configuration of Message Object 34:
 1879  1        ///  -----------------------------------------------------------------------
 1880  1        ///  - message object 34 is not valid
 1881  1        ///  -----------------------------------------------------------------------
 1882  1        ///  Configuration of Message Object 35:
 1883  1        ///  -----------------------------------------------------------------------
 1884  1        ///  - message object 35 is not valid
 1885  1        ///  -----------------------------------------------------------------------
 1886  1        ///  Configuration of Message Object 36:
 1887  1        ///  -----------------------------------------------------------------------
 1888  1        ///  - message object 36 is not valid
 1889  1        ///  -----------------------------------------------------------------------
 1890  1        ///  Configuration of Message Object 37:
 1891  1        ///  -----------------------------------------------------------------------
 1892  1        ///  - message object 37 is not valid
 1893  1        ///  -----------------------------------------------------------------------
 1894  1        ///  Configuration of Message Object 38:
 1895  1        ///  -----------------------------------------------------------------------
 1896  1        ///  - message object 38 is not valid
 1897  1        ///  -----------------------------------------------------------------------
 1898  1        ///  Configuration of Message Object 39:
 1899  1        ///  -----------------------------------------------------------------------
 1900  1        ///  - message object 39 is not valid
 1901  1        ///  -----------------------------------------------------------------------
 1902  1        ///  Configuration of Message Object 40:
 1903  1        ///  -----------------------------------------------------------------------
 1904  1        ///  - message object 40 is not valid
 1905  1        ///  -----------------------------------------------------------------------
 1906  1        ///  Configuration of Message Object 41:
 1907  1        ///  -----------------------------------------------------------------------
 1908  1        ///  - message object 41 is not valid
 1909  1        ///  -----------------------------------------------------------------------
 1910  1        ///  Configuration of Message Object 42:
 1911  1        ///  -----------------------------------------------------------------------
 1912  1        ///  - message object 42 is not valid
 1913  1        ///  -----------------------------------------------------------------------
 1914  1        ///  Configuration of Message Object 43:
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 32  

 1915  1        ///  -----------------------------------------------------------------------
 1916  1        ///  - message object 43 is not valid
 1917  1        ///  -----------------------------------------------------------------------
 1918  1        ///  Configuration of Message Object 44:
 1919  1        ///  -----------------------------------------------------------------------
 1920  1        ///  - message object 44 is not valid
 1921  1        ///  -----------------------------------------------------------------------
 1922  1        ///  Configuration of Message Object 45:
 1923  1        ///  -----------------------------------------------------------------------
 1924  1        ///  - message object 45 is not valid
 1925  1        ///  -----------------------------------------------------------------------
 1926  1        ///  Configuration of Message Object 46:
 1927  1        ///  -----------------------------------------------------------------------
 1928  1        ///  - message object 46 is not valid
 1929  1        ///  -----------------------------------------------------------------------
 1930  1        ///  Configuration of Message Object 47:
 1931  1        ///  -----------------------------------------------------------------------
 1932  1        ///  - message object 47 is not valid
 1933  1        ///  -----------------------------------------------------------------------
 1934  1        ///  Configuration of Message Object 48:
 1935  1        ///  -----------------------------------------------------------------------
 1936  1        ///  - message object 48 is not valid
 1937  1        ///  -----------------------------------------------------------------------
 1938  1        ///  Configuration of Message Object 49:
 1939  1        ///  -----------------------------------------------------------------------
 1940  1        ///  - message object 49 is not valid
 1941  1        ///  -----------------------------------------------------------------------
 1942  1        ///  Configuration of Message Object 50:
 1943  1        ///  -----------------------------------------------------------------------
 1944  1        ///  - message object 50 is not valid
 1945  1        ///  -----------------------------------------------------------------------
 1946  1        ///  Configuration of Message Object 51:
 1947  1        ///  -----------------------------------------------------------------------
 1948  1        ///  - message object 51 is not valid
 1949  1        ///  -----------------------------------------------------------------------
 1950  1        ///  Configuration of Message Object 52:
 1951  1        ///  -----------------------------------------------------------------------
 1952  1        ///  - message object 52 is not valid
 1953  1        ///  -----------------------------------------------------------------------
 1954  1        ///  Configuration of Message Object 53:
 1955  1        ///  -----------------------------------------------------------------------
 1956  1        ///  - message object 53 is not valid
 1957  1        ///  -----------------------------------------------------------------------
 1958  1        ///  Configuration of Message Object 54:
 1959  1        ///  -----------------------------------------------------------------------
 1960  1        ///  - message object 54 is not valid
 1961  1        ///  -----------------------------------------------------------------------
 1962  1        ///  Configuration of Message Object 55:
 1963  1        ///  -----------------------------------------------------------------------
 1964  1        ///  - message object 55 is not valid
 1965  1        ///  -----------------------------------------------------------------------
 1966  1        ///  Configuration of Message Object 56:
 1967  1        ///  -----------------------------------------------------------------------
 1968  1        ///  - message object 56 is not valid
 1969  1        ///  -----------------------------------------------------------------------
 1970  1        ///  Configuration of Message Object 57:
 1971  1        ///  -----------------------------------------------------------------------
 1972  1        ///  - message object 57 is not valid
 1973  1        ///  -----------------------------------------------------------------------
 1974  1        ///  Configuration of Message Object 58:
 1975  1        ///  -----------------------------------------------------------------------
 1976  1        ///  - message object 58 is not valid
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 33  

 1977  1        ///  -----------------------------------------------------------------------
 1978  1        ///  Configuration of Message Object 59:
 1979  1        ///  -----------------------------------------------------------------------
 1980  1        ///  - message object 59 is not valid
 1981  1        ///  -----------------------------------------------------------------------
 1982  1        ///  Configuration of Message Object 60:
 1983  1        ///  -----------------------------------------------------------------------
 1984  1        ///  - message object 60 is not valid
 1985  1        ///  -----------------------------------------------------------------------
 1986  1        ///  Configuration of Message Object 61:
 1987  1        ///  -----------------------------------------------------------------------
 1988  1        ///  - message object 61 is not valid
 1989  1        ///  -----------------------------------------------------------------------
 1990  1        ///  Configuration of Message Object 62:
 1991  1        ///  -----------------------------------------------------------------------
 1992  1        ///  - message object 62 is not valid
 1993  1        ///  -----------------------------------------------------------------------
 1994  1        ///  Configuration of Message Object 63:
 1995  1        ///  -----------------------------------------------------------------------
 1996  1        ///  - message object 63 is not valid
 1997  1        ///  -----------------------------------------------------------------------
 1998  1        ///  Configuration of Message Object 64:
 1999  1        ///  -----------------------------------------------------------------------
 2000  1        ///  - message object 64 is not valid
 2001  1        ///  -----------------------------------------------------------------------
 2002  1        ///  Configuration of Message Object 65:
 2003  1        ///  -----------------------------------------------------------------------
 2004  1        ///  - message object 65 is not valid
 2005  1        ///  -----------------------------------------------------------------------
 2006  1        ///  Configuration of Message Object 66:
 2007  1        ///  -----------------------------------------------------------------------
 2008  1        ///  - message object 66 is not valid
 2009  1        ///  -----------------------------------------------------------------------
 2010  1        ///  Configuration of Message Object 67:
 2011  1        ///  -----------------------------------------------------------------------
 2012  1        ///  - message object 67 is not valid
 2013  1        ///  -----------------------------------------------------------------------
 2014  1        ///  Configuration of Message Object 68:
 2015  1        ///  -----------------------------------------------------------------------
 2016  1        ///  - message object 68 is not valid
 2017  1        ///  -----------------------------------------------------------------------
 2018  1        ///  Configuration of Message Object 69:
 2019  1        ///  -----------------------------------------------------------------------
 2020  1        ///  - message object 69 is not valid
 2021  1        ///  -----------------------------------------------------------------------
 2022  1        ///  Configuration of Message Object 70:
 2023  1        ///  -----------------------------------------------------------------------
 2024  1        ///  - message object 70 is not valid
 2025  1        ///  -----------------------------------------------------------------------
 2026  1        ///  Configuration of Message Object 71:
 2027  1        ///  -----------------------------------------------------------------------
 2028  1        ///  - message object 71 is not valid
 2029  1        ///  -----------------------------------------------------------------------
 2030  1        ///  Configuration of Message Object 72:
 2031  1        ///  -----------------------------------------------------------------------
 2032  1        ///  - message object 72 is not valid
 2033  1        ///  -----------------------------------------------------------------------
 2034  1        ///  Configuration of Message Object 73:
 2035  1        ///  -----------------------------------------------------------------------
 2036  1        ///  - message object 73 is not valid
 2037  1        ///  -----------------------------------------------------------------------
 2038  1        ///  Configuration of Message Object 74:
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 34  

 2039  1        ///  -----------------------------------------------------------------------
 2040  1        ///  - message object 74 is not valid
 2041  1        ///  -----------------------------------------------------------------------
 2042  1        ///  Configuration of Message Object 75:
 2043  1        ///  -----------------------------------------------------------------------
 2044  1        ///  - message object 75 is not valid
 2045  1        ///  -----------------------------------------------------------------------
 2046  1        ///  Configuration of Message Object 76:
 2047  1        ///  -----------------------------------------------------------------------
 2048  1        ///  - message object 76 is not valid
 2049  1        ///  -----------------------------------------------------------------------
 2050  1        ///  Configuration of Message Object 77:
 2051  1        ///  -----------------------------------------------------------------------
 2052  1        ///  - message object 77 is not valid
 2053  1        ///  -----------------------------------------------------------------------
 2054  1        ///  Configuration of Message Object 78:
 2055  1        ///  -----------------------------------------------------------------------
 2056  1        ///  - message object 78 is not valid
 2057  1        ///  -----------------------------------------------------------------------
 2058  1        ///  Configuration of Message Object 79:
 2059  1        ///  -----------------------------------------------------------------------
 2060  1        ///  - message object 79 is not valid
 2061  1        ///  -----------------------------------------------------------------------
 2062  1        ///  Configuration of Message Object 80:
 2063  1        ///  -----------------------------------------------------------------------
 2064  1        ///  - message object 80 is not valid
 2065  1        ///  -----------------------------------------------------------------------
 2066  1        ///  Configuration of Message Object 81:
 2067  1        ///  -----------------------------------------------------------------------
 2068  1        ///  - message object 81 is not valid
 2069  1        ///  -----------------------------------------------------------------------
 2070  1        ///  Configuration of Message Object 82:
 2071  1        ///  -----------------------------------------------------------------------
 2072  1        ///  - message object 82 is not valid
 2073  1        ///  -----------------------------------------------------------------------
 2074  1        ///  Configuration of Message Object 83:
 2075  1        ///  -----------------------------------------------------------------------
 2076  1        ///  - message object 83 is not valid
 2077  1        ///  -----------------------------------------------------------------------
 2078  1        ///  Configuration of Message Object 84:
 2079  1        ///  -----------------------------------------------------------------------
 2080  1        ///  - message object 84 is not valid
 2081  1        ///  -----------------------------------------------------------------------
 2082  1        ///  Configuration of Message Object 85:
 2083  1        ///  -----------------------------------------------------------------------
 2084  1        ///  - message object 85 is not valid
 2085  1        ///  -----------------------------------------------------------------------
 2086  1        ///  Configuration of Message Object 86:
 2087  1        ///  -----------------------------------------------------------------------
 2088  1        ///  - message object 86 is not valid
 2089  1        ///  -----------------------------------------------------------------------
 2090  1        ///  Configuration of Message Object 87:
 2091  1        ///  -----------------------------------------------------------------------
 2092  1        ///  - message object 87 is not valid
 2093  1        ///  -----------------------------------------------------------------------
 2094  1        ///  Configuration of Message Object 88:
 2095  1        ///  -----------------------------------------------------------------------
 2096  1        ///  - message object 88 is not valid
 2097  1        ///  -----------------------------------------------------------------------
 2098  1        ///  Configuration of Message Object 89:
 2099  1        ///  -----------------------------------------------------------------------
 2100  1        ///  - message object 89 is not valid
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 35  

 2101  1        ///  -----------------------------------------------------------------------
 2102  1        ///  Configuration of Message Object 90:
 2103  1        ///  -----------------------------------------------------------------------
 2104  1        ///  - message object 90 is not valid
 2105  1        ///  -----------------------------------------------------------------------
 2106  1        ///  Configuration of Message Object 91:
 2107  1        ///  -----------------------------------------------------------------------
 2108  1        ///  - message object 91 is not valid
 2109  1        ///  -----------------------------------------------------------------------
 2110  1        ///  Configuration of Message Object 92:
 2111  1        ///  -----------------------------------------------------------------------
 2112  1        ///  - message object 92 is not valid
 2113  1        ///  -----------------------------------------------------------------------
 2114  1        ///  Configuration of Message Object 93:
 2115  1        ///  -----------------------------------------------------------------------
 2116  1        ///  - message object 93 is not valid
 2117  1        ///  -----------------------------------------------------------------------
 2118  1        ///  Configuration of Message Object 94:
 2119  1        ///  -----------------------------------------------------------------------
 2120  1        ///  - message object 94 is not valid
 2121  1        ///  -----------------------------------------------------------------------
 2122  1        ///  Configuration of Message Object 95:
 2123  1        ///  -----------------------------------------------------------------------
 2124  1        ///  - message object 95 is not valid
 2125  1        ///  -----------------------------------------------------------------------
 2126  1        ///  Configuration of Message Object 96:
 2127  1        ///  -----------------------------------------------------------------------
 2128  1        ///  - message object 96 is not valid
 2129  1        ///  -----------------------------------------------------------------------
 2130  1        ///  Configuration of Message Object 97:
 2131  1        ///  -----------------------------------------------------------------------
 2132  1        ///  - message object 97 is not valid
 2133  1        ///  -----------------------------------------------------------------------
 2134  1        ///  Configuration of Message Object 98:
 2135  1        ///  -----------------------------------------------------------------------
 2136  1        ///  - message object 98 is not valid
 2137  1        ///  -----------------------------------------------------------------------
 2138  1        ///  Configuration of Message Object 99:
 2139  1        ///  -----------------------------------------------------------------------
 2140  1        ///  - message object 99 is not valid
 2141  1        ///  -----------------------------------------------------------------------
 2142  1        ///  Configuration of Message Object 100:
 2143  1        ///  -----------------------------------------------------------------------
 2144  1        ///  - message object 100 is not valid
 2145  1        ///  -----------------------------------------------------------------------
 2146  1        ///  Configuration of Message Object 101:
 2147  1        ///  -----------------------------------------------------------------------
 2148  1        ///  - message object 101 is not valid
 2149  1        ///  -----------------------------------------------------------------------
 2150  1        ///  Configuration of Message Object 102:
 2151  1        ///  -----------------------------------------------------------------------
 2152  1        ///  - message object 102 is not valid
 2153  1        ///  -----------------------------------------------------------------------
 2154  1        ///  Configuration of Message Object 103:
 2155  1        ///  -----------------------------------------------------------------------
 2156  1        ///  - message object 103 is not valid
 2157  1        ///  -----------------------------------------------------------------------
 2158  1        ///  Configuration of Message Object 104:
 2159  1        ///  -----------------------------------------------------------------------
 2160  1        ///  - message object 104 is not valid
 2161  1        ///  -----------------------------------------------------------------------
 2162  1        ///  Configuration of Message Object 105:
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 36  

 2163  1        ///  -----------------------------------------------------------------------
 2164  1        ///  - message object 105 is not valid
 2165  1        ///  -----------------------------------------------------------------------
 2166  1        ///  Configuration of Message Object 106:
 2167  1        ///  -----------------------------------------------------------------------
 2168  1        ///  - message object 106 is not valid
 2169  1        ///  -----------------------------------------------------------------------
 2170  1        ///  Configuration of Message Object 107:
 2171  1        ///  -----------------------------------------------------------------------
 2172  1        ///  - message object 107 is not valid
 2173  1        ///  -----------------------------------------------------------------------
 2174  1        ///  Configuration of Message Object 108:
 2175  1        ///  -----------------------------------------------------------------------
 2176  1        ///  - message object 108 is not valid
 2177  1        ///  -----------------------------------------------------------------------
 2178  1        ///  Configuration of Message Object 109:
 2179  1        ///  -----------------------------------------------------------------------
 2180  1        ///  - message object 109 is not valid
 2181  1        ///  -----------------------------------------------------------------------
 2182  1        ///  Configuration of Message Object 110:
 2183  1        ///  -----------------------------------------------------------------------
 2184  1        ///  - message object 110 is not valid
 2185  1        ///  -----------------------------------------------------------------------
 2186  1        ///  Configuration of Message Object 111:
 2187  1        ///  -----------------------------------------------------------------------
 2188  1        ///  - message object 111 is not valid
 2189  1        ///  -----------------------------------------------------------------------
 2190  1        ///  Configuration of Message Object 112:
 2191  1        ///  -----------------------------------------------------------------------
 2192  1        ///  - message object 112 is not valid
 2193  1        ///  -----------------------------------------------------------------------
 2194  1        ///  Configuration of Message Object 113:
 2195  1        ///  -----------------------------------------------------------------------
 2196  1        ///  - message object 113 is not valid
 2197  1        ///  -----------------------------------------------------------------------
 2198  1        ///  Configuration of Message Object 114:
 2199  1        ///  -----------------------------------------------------------------------
 2200  1        ///  - message object 114 is not valid
 2201  1        ///  -----------------------------------------------------------------------
 2202  1        ///  Configuration of Message Object 115:
 2203  1        ///  -----------------------------------------------------------------------
 2204  1        ///  - message object 115 is not valid
 2205  1        ///  -----------------------------------------------------------------------
 2206  1        ///  Configuration of Message Object 116:
 2207  1        ///  -----------------------------------------------------------------------
 2208  1        ///  - message object 116 is not valid
 2209  1        ///  -----------------------------------------------------------------------
 2210  1        ///  Configuration of Message Object 117:
 2211  1        ///  -----------------------------------------------------------------------
 2212  1        ///  - message object 117 is not valid
 2213  1        ///  -----------------------------------------------------------------------
 2214  1        ///  Configuration of Message Object 118:
 2215  1        ///  -----------------------------------------------------------------------
 2216  1        ///  - message object 118 is not valid
 2217  1        ///  -----------------------------------------------------------------------
 2218  1        ///  Configuration of Message Object 119:
 2219  1        ///  -----------------------------------------------------------------------
 2220  1        ///  - message object 119 is not valid
 2221  1        ///  -----------------------------------------------------------------------
 2222  1        ///  Configuration of Message Object 120:
 2223  1        ///  -----------------------------------------------------------------------
 2224  1        ///  - message object 120 is not valid
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 37  

 2225  1        ///  -----------------------------------------------------------------------
 2226  1        ///  Configuration of Message Object 121:
 2227  1        ///  -----------------------------------------------------------------------
 2228  1        ///  - message object 121 is not valid
 2229  1        ///  -----------------------------------------------------------------------
 2230  1        ///  Configuration of Message Object 122:
 2231  1        ///  -----------------------------------------------------------------------
 2232  1        ///  - message object 122 is not valid
 2233  1        ///  -----------------------------------------------------------------------
 2234  1        ///  Configuration of Message Object 123:
 2235  1        ///  -----------------------------------------------------------------------
 2236  1        ///  - message object 123 is not valid
 2237  1        ///  -----------------------------------------------------------------------
 2238  1        ///  Configuration of Message Object 124:
 2239  1        ///  -----------------------------------------------------------------------
 2240  1        ///  - message object 124 is not valid
 2241  1        ///  -----------------------------------------------------------------------
 2242  1        ///  Configuration of Message Object 125:
 2243  1        ///  -----------------------------------------------------------------------
 2244  1        ///  - message object 125 is not valid
 2245  1        ///  -----------------------------------------------------------------------
 2246  1        ///  Configuration of Message Object 126:
 2247  1        ///  -----------------------------------------------------------------------
 2248  1        ///  - message object 126 is not valid
 2249  1        ///  -----------------------------------------------------------------------
 2250  1        ///  Configuration of Message Object 127:
 2251  1        ///  -----------------------------------------------------------------------
 2252  1        ///  - message object 127 is not valid
 2253  1        ///  -----------------------------------------------------------------------
 2254  1        ///  Configuration of Message Object 128:
 2255  1        ///  -----------------------------------------------------------------------
 2256  1        ///  - message object 128 is not valid
 2257  1        ///  -----------------------------------------------------------------------
 2258  1        ///  Configuration of Message Object 129:
 2259  1        ///  -----------------------------------------------------------------------
 2260  1        ///  - message object 129 is not valid
 2261  1        ///  -----------------------------------------------------------------------
 2262  1        ///  Configuration of Message Object 130:
 2263  1        ///  -----------------------------------------------------------------------
 2264  1        ///  - message object 130 is not valid
 2265  1        ///  -----------------------------------------------------------------------
 2266  1        ///  Configuration of Message Object 131:
 2267  1        ///  -----------------------------------------------------------------------
 2268  1        ///  - message object 131 is not valid
 2269  1        ///  -----------------------------------------------------------------------
 2270  1        ///  Configuration of Message Object 132:
 2271  1        ///  -----------------------------------------------------------------------
 2272  1        ///  - message object 132 is not valid
 2273  1        ///  -----------------------------------------------------------------------
 2274  1        ///  Configuration of Message Object 133:
 2275  1        ///  -----------------------------------------------------------------------
 2276  1        ///  - message object 133 is not valid
 2277  1        ///  -----------------------------------------------------------------------
 2278  1        ///  Configuration of Message Object 134:
 2279  1        ///  -----------------------------------------------------------------------
 2280  1        ///  - message object 134 is not valid
 2281  1        ///  -----------------------------------------------------------------------
 2282  1        ///  Configuration of Message Object 135:
 2283  1        ///  -----------------------------------------------------------------------
 2284  1        ///  - message object 135 is not valid
 2285  1        ///  -----------------------------------------------------------------------
 2286  1        ///  Configuration of Message Object 136:
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 38  

 2287  1        ///  -----------------------------------------------------------------------
 2288  1        ///  - message object 136 is not valid
 2289  1        ///  -----------------------------------------------------------------------
 2290  1        ///  Configuration of Message Object 137:
 2291  1        ///  -----------------------------------------------------------------------
 2292  1        ///  - message object 137 is not valid
 2293  1        ///  -----------------------------------------------------------------------
 2294  1        ///  Configuration of Message Object 138:
 2295  1        ///  -----------------------------------------------------------------------
 2296  1        ///  - message object 138 is not valid
 2297  1        ///  -----------------------------------------------------------------------
 2298  1        ///  Configuration of Message Object 139:
 2299  1        ///  -----------------------------------------------------------------------
 2300  1        ///  - message object 139 is not valid
 2301  1        ///  -----------------------------------------------------------------------
 2302  1        ///  Configuration of Message Object 140:
 2303  1        ///  -----------------------------------------------------------------------
 2304  1        ///  - message object 140 is not valid
 2305  1        ///  -----------------------------------------------------------------------
 2306  1        ///  Configuration of Message Object 141:
 2307  1        ///  -----------------------------------------------------------------------
 2308  1        ///  - message object 141 is not valid
 2309  1        ///  -----------------------------------------------------------------------
 2310  1        ///  Configuration of Message Object 142:
 2311  1        ///  -----------------------------------------------------------------------
 2312  1        ///  - message object 142 is not valid
 2313  1        ///  -----------------------------------------------------------------------
 2314  1        ///  Configuration of Message Object 143:
 2315  1        ///  -----------------------------------------------------------------------
 2316  1        ///  - message object 143 is not valid
 2317  1        ///  -----------------------------------------------------------------------
 2318  1        ///  Configuration of Message Object 144:
 2319  1        ///  -----------------------------------------------------------------------
 2320  1        ///  - message object 144 is not valid
 2321  1        ///  -----------------------------------------------------------------------
 2322  1        ///  Configuration of Message Object 145:
 2323  1        ///  -----------------------------------------------------------------------
 2324  1        ///  - message object 145 is not valid
 2325  1        ///  -----------------------------------------------------------------------
 2326  1        ///  Configuration of Message Object 146:
 2327  1        ///  -----------------------------------------------------------------------
 2328  1        ///  - message object 146 is not valid
 2329  1        ///  -----------------------------------------------------------------------
 2330  1        ///  Configuration of Message Object 147:
 2331  1        ///  -----------------------------------------------------------------------
 2332  1        ///  - message object 147 is not valid
 2333  1        ///  -----------------------------------------------------------------------
 2334  1        ///  Configuration of Message Object 148:
 2335  1        ///  -----------------------------------------------------------------------
 2336  1        ///  - message object 148 is not valid
 2337  1        ///  -----------------------------------------------------------------------
 2338  1        ///  Configuration of Message Object 149:
 2339  1        ///  -----------------------------------------------------------------------
 2340  1        ///  - message object 149 is not valid
 2341  1        ///  -----------------------------------------------------------------------
 2342  1        ///  Configuration of Message Object 150:
 2343  1        ///  -----------------------------------------------------------------------
 2344  1        ///  - message object 150 is not valid
 2345  1        ///  -----------------------------------------------------------------------
 2346  1        ///  Configuration of Message Object 151:
 2347  1        ///  -----------------------------------------------------------------------
 2348  1        ///  - message object 151 is not valid
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 39  

 2349  1        ///  -----------------------------------------------------------------------
 2350  1        ///  Configuration of Message Object 152:
 2351  1        ///  -----------------------------------------------------------------------
 2352  1        ///  - message object 152 is not valid
 2353  1        ///  -----------------------------------------------------------------------
 2354  1        ///  Configuration of Message Object 153:
 2355  1        ///  -----------------------------------------------------------------------
 2356  1        ///  - message object 153 is not valid
 2357  1        ///  -----------------------------------------------------------------------
 2358  1        ///  Configuration of Message Object 154:
 2359  1        ///  -----------------------------------------------------------------------
 2360  1        ///  - message object 154 is not valid
 2361  1        ///  -----------------------------------------------------------------------
 2362  1        ///  Configuration of Message Object 155:
 2363  1        ///  -----------------------------------------------------------------------
 2364  1        ///  - message object 155 is not valid
 2365  1        ///  -----------------------------------------------------------------------
 2366  1        ///  Configuration of Message Object 156:
 2367  1        ///  -----------------------------------------------------------------------
 2368  1        ///  - message object 156 is not valid
 2369  1        ///  -----------------------------------------------------------------------
 2370  1        ///  Configuration of Message Object 157:
 2371  1        ///  -----------------------------------------------------------------------
 2372  1        ///  - message object 157 is not valid
 2373  1        ///  -----------------------------------------------------------------------
 2374  1        ///  Configuration of Message Object 158:
 2375  1        ///  -----------------------------------------------------------------------
 2376  1        ///  - message object 158 is not valid
 2377  1        ///  -----------------------------------------------------------------------
 2378  1        ///  Configuration of Message Object 159:
 2379  1        ///  -----------------------------------------------------------------------
 2380  1        ///  - message object 159 is not valid
 2381  1        ///  -----------------------------------------------------------------------
 2382  1        ///  Configuration of Message Object 160:
 2383  1        ///  -----------------------------------------------------------------------
 2384  1        ///  - message object 160 is not valid
 2385  1        ///  -----------------------------------------------------------------------
 2386  1        ///  Configuration of Message Object 161:
 2387  1        ///  -----------------------------------------------------------------------
 2388  1        ///  - message object 161 is not valid
 2389  1        ///  -----------------------------------------------------------------------
 2390  1        ///  Configuration of Message Object 162:
 2391  1        ///  -----------------------------------------------------------------------
 2392  1        ///  - message object 162 is not valid
 2393  1        ///  -----------------------------------------------------------------------
 2394  1        ///  Configuration of Message Object 163:
 2395  1        ///  -----------------------------------------------------------------------
 2396  1        ///  - message object 163 is not valid
 2397  1        ///  -----------------------------------------------------------------------
 2398  1        ///  Configuration of Message Object 164:
 2399  1        ///  -----------------------------------------------------------------------
 2400  1        ///  - message object 164 is not valid
 2401  1        ///  -----------------------------------------------------------------------
 2402  1        ///  Configuration of Message Object 165:
 2403  1        ///  -----------------------------------------------------------------------
 2404  1        ///  - message object 165 is not valid
 2405  1        ///  -----------------------------------------------------------------------
 2406  1        ///  Configuration of Message Object 166:
 2407  1        ///  -----------------------------------------------------------------------
 2408  1        ///  - message object 166 is not valid
 2409  1        ///  -----------------------------------------------------------------------
 2410  1        ///  Configuration of Message Object 167:
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 40  

 2411  1        ///  -----------------------------------------------------------------------
 2412  1        ///  - message object 167 is not valid
 2413  1        ///  -----------------------------------------------------------------------
 2414  1        ///  Configuration of Message Object 168:
 2415  1        ///  -----------------------------------------------------------------------
 2416  1        ///  - message object 168 is not valid
 2417  1        ///  -----------------------------------------------------------------------
 2418  1        ///  Configuration of Message Object 169:
 2419  1        ///  -----------------------------------------------------------------------
 2420  1        ///  - message object 169 is not valid
 2421  1        ///  -----------------------------------------------------------------------
 2422  1        ///  Configuration of Message Object 170:
 2423  1        ///  -----------------------------------------------------------------------
 2424  1        ///  - message object 170 is not valid
 2425  1        ///  -----------------------------------------------------------------------
 2426  1        ///  Configuration of Message Object 171:
 2427  1        ///  -----------------------------------------------------------------------
 2428  1        ///  - message object 171 is not valid
 2429  1        ///  -----------------------------------------------------------------------
 2430  1        ///  Configuration of Message Object 172:
 2431  1        ///  -----------------------------------------------------------------------
 2432  1        ///  - message object 172 is not valid
 2433  1        ///  -----------------------------------------------------------------------
 2434  1        ///  Configuration of Message Object 173:
 2435  1        ///  -----------------------------------------------------------------------
 2436  1        ///  - message object 173 is not valid
 2437  1        ///  -----------------------------------------------------------------------
 2438  1        ///  Configuration of Message Object 174:
 2439  1        ///  -----------------------------------------------------------------------
 2440  1        ///  - message object 174 is not valid
 2441  1        ///  -----------------------------------------------------------------------
 2442  1        ///  Configuration of Message Object 175:
 2443  1        ///  -----------------------------------------------------------------------
 2444  1        ///  - message object 175 is not valid
 2445  1        ///  -----------------------------------------------------------------------
 2446  1        ///  Configuration of Message Object 176:
 2447  1        ///  -----------------------------------------------------------------------
 2448  1        ///  - message object 176 is not valid
 2449  1        ///  -----------------------------------------------------------------------
 2450  1        ///  Configuration of Message Object 177:
 2451  1        ///  -----------------------------------------------------------------------
 2452  1        ///  - message object 177 is not valid
 2453  1        ///  -----------------------------------------------------------------------
 2454  1        ///  Configuration of Message Object 178:
 2455  1        ///  -----------------------------------------------------------------------
 2456  1        ///  - message object 178 is not valid
 2457  1        ///  -----------------------------------------------------------------------
 2458  1        ///  Configuration of Message Object 179:
 2459  1        ///  -----------------------------------------------------------------------
 2460  1        ///  - message object 179 is not valid
 2461  1        ///  -----------------------------------------------------------------------
 2462  1        ///  Configuration of Message Object 180:
 2463  1        ///  -----------------------------------------------------------------------
 2464  1        ///  - message object 180 is not valid
 2465  1        ///  -----------------------------------------------------------------------
 2466  1        ///  Configuration of Message Object 181:
 2467  1        ///  -----------------------------------------------------------------------
 2468  1        ///  - message object 181 is not valid
 2469  1        ///  -----------------------------------------------------------------------
 2470  1        ///  Configuration of Message Object 182:
 2471  1        ///  -----------------------------------------------------------------------
 2472  1        ///  - message object 182 is not valid
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 41  

 2473  1        ///  -----------------------------------------------------------------------
 2474  1        ///  Configuration of Message Object 183:
 2475  1        ///  -----------------------------------------------------------------------
 2476  1        ///  - message object 183 is not valid
 2477  1        ///  -----------------------------------------------------------------------
 2478  1        ///  Configuration of Message Object 184:
 2479  1        ///  -----------------------------------------------------------------------
 2480  1        ///  - message object 184 is not valid
 2481  1        ///  -----------------------------------------------------------------------
 2482  1        ///  Configuration of Message Object 185:
 2483  1        ///  -----------------------------------------------------------------------
 2484  1        ///  - message object 185 is not valid
 2485  1        ///  -----------------------------------------------------------------------
 2486  1        ///  Configuration of Message Object 186:
 2487  1        ///  -----------------------------------------------------------------------
 2488  1        ///  - message object 186 is not valid
 2489  1        ///  -----------------------------------------------------------------------
 2490  1        ///  Configuration of Message Object 187:
 2491  1        ///  -----------------------------------------------------------------------
 2492  1        ///  - message object 187 is not valid
 2493  1        ///  -----------------------------------------------------------------------
 2494  1        ///  Configuration of Message Object 188:
 2495  1        ///  -----------------------------------------------------------------------
 2496  1        ///  - message object 188 is not valid
 2497  1        ///  -----------------------------------------------------------------------
 2498  1        ///  Configuration of Message Object 189:
 2499  1        ///  -----------------------------------------------------------------------
 2500  1        ///  - message object 189 is not valid
 2501  1        ///  -----------------------------------------------------------------------
 2502  1        ///  Configuration of Message Object 190:
 2503  1        ///  -----------------------------------------------------------------------
 2504  1        ///  - message object 190 is not valid
 2505  1        ///  -----------------------------------------------------------------------
 2506  1        ///  Configuration of Message Object 191:
 2507  1        ///  -----------------------------------------------------------------------
 2508  1        ///  - message object 191 is not valid
 2509  1        ///  -----------------------------------------------------------------------
 2510  1        ///  Configuration of Message Object 192:
 2511  1        ///  -----------------------------------------------------------------------
 2512  1        ///  - message object 192 is not valid
 2513  1        ///  -----------------------------------------------------------------------
 2514  1        ///  Configuration of Message Object 193:
 2515  1        ///  -----------------------------------------------------------------------
 2516  1        ///  - message object 193 is not valid
 2517  1        ///  -----------------------------------------------------------------------
 2518  1        ///  Configuration of Message Object 194:
 2519  1        ///  -----------------------------------------------------------------------
 2520  1        ///  - message object 194 is not valid
 2521  1        ///  -----------------------------------------------------------------------
 2522  1        ///  Configuration of Message Object 195:
 2523  1        ///  -----------------------------------------------------------------------
 2524  1        ///  - message object 195 is not valid
 2525  1        ///  -----------------------------------------------------------------------
 2526  1        ///  Configuration of Message Object 196:
 2527  1        ///  -----------------------------------------------------------------------
 2528  1        ///  - message object 196 is not valid
 2529  1        ///  -----------------------------------------------------------------------
 2530  1        ///  Configuration of Message Object 197:
 2531  1        ///  -----------------------------------------------------------------------
 2532  1        ///  - message object 197 is not valid
 2533  1        ///  -----------------------------------------------------------------------
 2534  1        ///  Configuration of Message Object 198:
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 42  

 2535  1        ///  -----------------------------------------------------------------------
 2536  1        ///  - message object 198 is not valid
 2537  1        ///  -----------------------------------------------------------------------
 2538  1        ///  Configuration of Message Object 199:
 2539  1        ///  -----------------------------------------------------------------------
 2540  1        ///  - message object 199 is not valid
 2541  1        ///  -----------------------------------------------------------------------
 2542  1        ///  Configuration of Message Object 200:
 2543  1        ///  -----------------------------------------------------------------------
 2544  1        ///  - message object 200 is not valid
 2545  1        ///  -----------------------------------------------------------------------
 2546  1        ///  Configuration of Message Object 201:
 2547  1        ///  -----------------------------------------------------------------------
 2548  1        ///  - message object 201 is not valid
 2549  1        ///  -----------------------------------------------------------------------
 2550  1        ///  Configuration of Message Object 202:
 2551  1        ///  -----------------------------------------------------------------------
 2552  1        ///  - message object 202 is not valid
 2553  1        ///  -----------------------------------------------------------------------
 2554  1        ///  Configuration of Message Object 203:
 2555  1        ///  -----------------------------------------------------------------------
 2556  1        ///  - message object 203 is not valid
 2557  1        ///  -----------------------------------------------------------------------
 2558  1        ///  Configuration of Message Object 204:
 2559  1        ///  -----------------------------------------------------------------------
 2560  1        ///  - message object 204 is not valid
 2561  1        ///  -----------------------------------------------------------------------
 2562  1        ///  Configuration of Message Object 205:
 2563  1        ///  -----------------------------------------------------------------------
 2564  1        ///  - message object 205 is not valid
 2565  1        ///  -----------------------------------------------------------------------
 2566  1        ///  Configuration of Message Object 206:
 2567  1        ///  -----------------------------------------------------------------------
 2568  1        ///  - message object 206 is not valid
 2569  1        ///  -----------------------------------------------------------------------
 2570  1        ///  Configuration of Message Object 207:
 2571  1        ///  -----------------------------------------------------------------------
 2572  1        ///  - message object 207 is not valid
 2573  1        ///  -----------------------------------------------------------------------
 2574  1        ///  Configuration of Message Object 208:
 2575  1        ///  -----------------------------------------------------------------------
 2576  1        ///  - message object 208 is not valid
 2577  1        ///  -----------------------------------------------------------------------
 2578  1        ///  Configuration of Message Object 209:
 2579  1        ///  -----------------------------------------------------------------------
 2580  1        ///  - message object 209 is not valid
 2581  1        ///  -----------------------------------------------------------------------
 2582  1        ///  Configuration of Message Object 210:
 2583  1        ///  -----------------------------------------------------------------------
 2584  1        ///  - message object 210 is not valid
 2585  1        ///  -----------------------------------------------------------------------
 2586  1        ///  Configuration of Message Object 211:
 2587  1        ///  -----------------------------------------------------------------------
 2588  1        ///  - message object 211 is not valid
 2589  1        ///  -----------------------------------------------------------------------
 2590  1        ///  Configuration of Message Object 212:
 2591  1        ///  -----------------------------------------------------------------------
 2592  1        ///  - message object 212 is not valid
 2593  1        ///  -----------------------------------------------------------------------
 2594  1        ///  Configuration of Message Object 213:
 2595  1        ///  -----------------------------------------------------------------------
 2596  1        ///  - message object 213 is not valid
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 43  

 2597  1        ///  -----------------------------------------------------------------------
 2598  1        ///  Configuration of Message Object 214:
 2599  1        ///  -----------------------------------------------------------------------
 2600  1        ///  - message object 214 is not valid
 2601  1        ///  -----------------------------------------------------------------------
 2602  1        ///  Configuration of Message Object 215:
 2603  1        ///  -----------------------------------------------------------------------
 2604  1        ///  - message object 215 is not valid
 2605  1        ///  -----------------------------------------------------------------------
 2606  1        ///  Configuration of Message Object 216:
 2607  1        ///  -----------------------------------------------------------------------
 2608  1        ///  - message object 216 is not valid
 2609  1        ///  -----------------------------------------------------------------------
 2610  1        ///  Configuration of Message Object 217:
 2611  1        ///  -----------------------------------------------------------------------
 2612  1        ///  - message object 217 is not valid
 2613  1        ///  -----------------------------------------------------------------------
 2614  1        ///  Configuration of Message Object 218:
 2615  1        ///  -----------------------------------------------------------------------
 2616  1        ///  - message object 218 is not valid
 2617  1        ///  -----------------------------------------------------------------------
 2618  1        ///  Configuration of Message Object 219:
 2619  1        ///  -----------------------------------------------------------------------
 2620  1        ///  - message object 219 is not valid
 2621  1        ///  -----------------------------------------------------------------------
 2622  1        ///  Configuration of Message Object 220:
 2623  1        ///  -----------------------------------------------------------------------
 2624  1        ///  - message object 220 is not valid
 2625  1        ///  -----------------------------------------------------------------------
 2626  1        ///  Configuration of Message Object 221:
 2627  1        ///  -----------------------------------------------------------------------
 2628  1        ///  - message object 221 is not valid
 2629  1        ///  -----------------------------------------------------------------------
 2630  1        ///  Configuration of Message Object 222:
 2631  1        ///  -----------------------------------------------------------------------
 2632  1        ///  - message object 222 is not valid
 2633  1        ///  -----------------------------------------------------------------------
 2634  1        ///  Configuration of Message Object 223:
 2635  1        ///  -----------------------------------------------------------------------
 2636  1        ///  - message object 223 is not valid
 2637  1        ///  -----------------------------------------------------------------------
 2638  1        ///  Configuration of Message Object 224:
 2639  1        ///  -----------------------------------------------------------------------
 2640  1        ///  - message object 224 is not valid
 2641  1        ///  -----------------------------------------------------------------------
 2642  1        ///  Configuration of Message Object 225:
 2643  1        ///  -----------------------------------------------------------------------
 2644  1        ///  - message object 225 is not valid
 2645  1        ///  -----------------------------------------------------------------------
 2646  1        ///  Configuration of Message Object 226:
 2647  1        ///  -----------------------------------------------------------------------
 2648  1        ///  - message object 226 is not valid
 2649  1        ///  -----------------------------------------------------------------------
 2650  1        ///  Configuration of Message Object 227:
 2651  1        ///  -----------------------------------------------------------------------
 2652  1        ///  - message object 227 is not valid
 2653  1        ///  -----------------------------------------------------------------------
 2654  1        ///  Configuration of Message Object 228:
 2655  1        ///  -----------------------------------------------------------------------
 2656  1        ///  - message object 228 is not valid
 2657  1        ///  -----------------------------------------------------------------------
 2658  1        ///  Configuration of Message Object 229:
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 44  

 2659  1        ///  -----------------------------------------------------------------------
 2660  1        ///  - message object 229 is not valid
 2661  1        ///  -----------------------------------------------------------------------
 2662  1        ///  Configuration of Message Object 230:
 2663  1        ///  -----------------------------------------------------------------------
 2664  1        ///  - message object 230 is not valid
 2665  1        ///  -----------------------------------------------------------------------
 2666  1        ///  Configuration of Message Object 231:
 2667  1        ///  -----------------------------------------------------------------------
 2668  1        ///  - message object 231 is not valid
 2669  1        ///  -----------------------------------------------------------------------
 2670  1        ///  Configuration of Message Object 232:
 2671  1        ///  -----------------------------------------------------------------------
 2672  1        ///  - message object 232 is not valid
 2673  1        ///  -----------------------------------------------------------------------
 2674  1        ///  Configuration of Message Object 233:
 2675  1        ///  -----------------------------------------------------------------------
 2676  1        ///  - message object 233 is not valid
 2677  1        ///  -----------------------------------------------------------------------
 2678  1        ///  Configuration of Message Object 234:
 2679  1        ///  -----------------------------------------------------------------------
 2680  1        ///  - message object 234 is not valid
 2681  1        ///  -----------------------------------------------------------------------
 2682  1        ///  Configuration of Message Object 235:
 2683  1        ///  -----------------------------------------------------------------------
 2684  1        ///  - message object 235 is not valid
 2685  1        ///  -----------------------------------------------------------------------
 2686  1        ///  Configuration of Message Object 236:
 2687  1        ///  -----------------------------------------------------------------------
 2688  1        ///  - message object 236 is not valid
 2689  1        ///  -----------------------------------------------------------------------
 2690  1        ///  Configuration of Message Object 237:
 2691  1        ///  -----------------------------------------------------------------------
 2692  1        ///  - message object 237 is not valid
 2693  1        ///  -----------------------------------------------------------------------
 2694  1        ///  Configuration of Message Object 238:
 2695  1        ///  -----------------------------------------------------------------------
 2696  1        ///  - message object 238 is not valid
 2697  1        ///  -----------------------------------------------------------------------
 2698  1        ///  Configuration of Message Object 239:
 2699  1        ///  -----------------------------------------------------------------------
 2700  1        ///  - message object 239 is not valid
 2701  1        ///  -----------------------------------------------------------------------
 2702  1        ///  Configuration of Message Object 240:
 2703  1        ///  -----------------------------------------------------------------------
 2704  1        ///  - message object 240 is not valid
 2705  1        ///  -----------------------------------------------------------------------
 2706  1        ///  Configuration of Message Object 241:
 2707  1        ///  -----------------------------------------------------------------------
 2708  1        ///  - message object 241 is not valid
 2709  1        ///  -----------------------------------------------------------------------
 2710  1        ///  Configuration of Message Object 242:
 2711  1        ///  -----------------------------------------------------------------------
 2712  1        ///  - message object 242 is not valid
 2713  1        ///  -----------------------------------------------------------------------
 2714  1        ///  Configuration of Message Object 243:
 2715  1        ///  -----------------------------------------------------------------------
 2716  1        ///  - message object 243 is not valid
 2717  1        ///  -----------------------------------------------------------------------
 2718  1        ///  Configuration of Message Object 244:
 2719  1        ///  -----------------------------------------------------------------------
 2720  1        ///  - message object 244 is not valid
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 45  

 2721  1        ///  -----------------------------------------------------------------------
 2722  1        ///  Configuration of Message Object 245:
 2723  1        ///  -----------------------------------------------------------------------
 2724  1        ///  - message object 245 is not valid
 2725  1        ///  -----------------------------------------------------------------------
 2726  1        ///  Configuration of Message Object 246:
 2727  1        ///  -----------------------------------------------------------------------
 2728  1        ///  - message object 246 is not valid
 2729  1        ///  -----------------------------------------------------------------------
 2730  1        ///  Configuration of Message Object 247:
 2731  1        ///  -----------------------------------------------------------------------
 2732  1        ///  - message object 247 is not valid
 2733  1        ///  -----------------------------------------------------------------------
 2734  1        ///  Configuration of Message Object 248:
 2735  1        ///  -----------------------------------------------------------------------
 2736  1        ///  - message object 248 is not valid
 2737  1        ///  -----------------------------------------------------------------------
 2738  1        ///  Configuration of Message Object 249:
 2739  1        ///  -----------------------------------------------------------------------
 2740  1        ///  - message object 249 is not valid
 2741  1        ///  -----------------------------------------------------------------------
 2742  1        ///  Configuration of Message Object 250:
 2743  1        ///  -----------------------------------------------------------------------
 2744  1        ///  - message object 250 is not valid
 2745  1        ///  -----------------------------------------------------------------------
 2746  1        ///  Configuration of Message Object 251:
 2747  1        ///  -----------------------------------------------------------------------
 2748  1        ///  - message object 251 is not valid
 2749  1        ///  -----------------------------------------------------------------------
 2750  1        ///  Configuration of Message Object 252:
 2751  1        ///  -----------------------------------------------------------------------
 2752  1        ///  - message object 252 is not valid
 2753  1        ///  -----------------------------------------------------------------------
 2754  1        ///  Configuration of Message Object 253:
 2755  1        ///  -----------------------------------------------------------------------
 2756  1        ///  - message object 253 is not valid
 2757  1        ///  -----------------------------------------------------------------------
 2758  1        ///  Configuration of Message Object 254:
 2759  1        ///  -----------------------------------------------------------------------
 2760  1        ///  - message object 254 is not valid
 2761  1      
 2762  1        ///  -----------------------------------------------------------------------
 2763  1        ///  Configuration of Service Request Nodes 0 - 15:
 2764  1        ///  -----------------------------------------------------------------------
 2765  1        ///  SRN0 service request node configuration:
 2766  1        ///  - SRN0 interrupt priority level (ILVL) = 10
 2767  1        ///  - SRN0 interrupt group level (GLVL) = 0
 2768  1        ///  - SRN0 group priority extension (GPX) = 0
 2769  1      
 2770  1        CAN_0IC        =  0x0068;     
 2771  1      
 2772  1      
 2773  1        //   -----------------------------------------------------------------------
 2774  1        //   Start the CAN Nodes:
 2775  1        //   -----------------------------------------------------------------------
 2776  1      
 2777  1        ///  - ------------- CAN_NCR0 ----------------------------------------------
 2778  1      
 2779  1          CAN_NCR0 &= ~ (uword) 0x0041; // reset INIT and CCE
 2780  1        ///  - ------------- CAN_NCR1 ----------------------------------------------
 2781  1      
 2782  1          CAN_NCR1 &= ~ (uword) 0x0041; // reset INIT and CCE
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 46  

 2783  1        ///  - ------------- CAN_NCR2 ----------------------------------------------
 2784  1      
 2785  1          CAN_NCR2 &= ~ (uword) 0x0041; // reset INIT and CCE
 2786  1      
 2787  1      
 2788  1      
 2789  1        // USER CODE BEGIN (Init,3)
 2790  1      
 2791  1        // USER CODE END
 2792  1      
 2793  1      } //  End of function CAN_vInit
 2794         
 2795         //****************************************************************************
 2796         // @Function      void CAN_vGetMsgObj(ubyte ubObjNr, stCAN_SWObj *pstObj) 
 2797         //
 2798         //----------------------------------------------------------------------------
 2799         // @Description   This function fills the forwarded SW message object with 
 2800         //                the content of the chosen HW message object.
 2801         //                
 2802         //                For Receive Message object use function CAN_vReleaseObj, to 
 2803         //                release the message object. 
 2804         //                
 2805         //                The structure of the SW message object is defined in the 
 2806         //                header file CAN.h (see stCAN_SWObj).
 2807         //
 2808         //----------------------------------------------------------------------------
 2809         // @Returnvalue   None
 2810         //
 2811         //----------------------------------------------------------------------------
 2812         // @Parameters    ubObjNr: 
 2813         //                Number of the message object to be read (0-254)
 2814         // @Parameters    *pstObj: 
 2815         //                Pointer on a message object to be filled by this function
 2816         //
 2817         //----------------------------------------------------------------------------
 2818         // @Date          2020/1/14
 2819         //
 2820         //****************************************************************************
 2821         
 2822         // USER CODE BEGIN (GetMsgObj,1)
 2823         
 2824         // USER CODE END
 2825         
 2826         void CAN_vGetMsgObj(ubyte ubObjNr, stCAN_SWObj *pstObj)
 2827         {
 2828  1        ubyte i;
 2829  1      
 2830  1        //----- get DLC -------------------------------------------------------
 2831  1        pstObj->ubMOCfg = (ubyte)((CAN_HWOBJ[ubObjNr].uwMOFCRH & 0x0F00) >> 8); //MOFCRnH[11-8] DLC
 2832  1      
 2833  1        //----- get MODATA ----------------------------------------------------
 2834  1        for(i = 0; i < pstObj->ubMOCfg; i++)
 2835  1        {
 2836  2          pstObj->ubData[i] = CAN_HWOBJ[ubObjNr].ubData[i];
 2837  2        }
 2838  1      
 2839  1        //----- get DIR -------------------------------------------------------
 2840  1          pstObj->ubMOCfg |= (ubyte)((CAN_HWOBJ[ubObjNr].uwMOCTRL & 0x0800) >> 7);  // set DIR if transmit objec
             -t
 2841  1      
 2842  1        //----- get Identifier ------------------------------------------------
 2843  1        if(CAN_HWOBJ[ubObjNr].uwMOARH & 0x2000)    // if extended identifier
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 47  

 2844  1        {
 2845  2          //----- get Extended Identifier -------------------------------------
 2846  2          pstObj->ulID = (((ulong)(CAN_HWOBJ[ubObjNr].uwMOARH & 0x1FFF))<<16) + CAN_HWOBJ[ubObjNr].uwMOARL;
 2847  2      
 2848  2          pstObj->ubMOCfg = pstObj->ubMOCfg | 0x20;  // set IDE
 2849  2        }
 2850  1        else                                       // standard identifier
 2851  1        {
 2852  2          //----- get Standard Identifier -------------------------------------
 2853  2          pstObj->ulID = (CAN_HWOBJ[ubObjNr].uwMOARH & 0x1FFF) >> 2;
 2854  2        }
 2855  1      
 2856  1        //----- get Acceptance Mask -----------------------------------------
 2857  1        if(((CAN_HWOBJ[ubObjNr].uwMOARH & 0x2000) == 0) && (CAN_HWOBJ[ubObjNr].uwMOAMRH & 0x2000))    // if IDE 
             -= 0 & MIDE = 1
 2858  1        {
 2859  2          pstObj->ulMask = (CAN_HWOBJ[ubObjNr].uwMOAMRH & 0x1FFF) >> 2;
 2860  2        }
 2861  1        else
 2862  1        {
 2863  2          pstObj->ulMask = (((ulong)(CAN_HWOBJ[ubObjNr].uwMOAMRH & 0x1FFF))<<16) + CAN_HWOBJ[ubObjNr].uwMOAMRL;
 2864  2        }
 2865  1      
 2866  1        //----- get Acceptance Mask bit ---------------------------------------
 2867  1        pstObj->ubMOCfg |= (ubyte)((CAN_HWOBJ[ubObjNr].uwMOAMRH & 0x2000) >> 7); // set MIDE
 2868  1      
 2869  1        //----- get Frame Counter Value ---------------------------------------
 2870  1        pstObj->uwCounter = CAN_HWOBJ[ubObjNr].uwMOIPRH;
 2871  1      
 2872  1      } //  End of function CAN_vGetMsgObj
 2873         
 2874         //****************************************************************************
 2875         // @Function      void CAN_vTransmit(ubyte ubObjNr) 
 2876         //
 2877         //----------------------------------------------------------------------------
 2878         // @Description   This function triggers the CAN controller to send the 
 2879         //                selected message.
 2880         //                If the selected message object is a TRANSMIT OBJECT then 
 2881         //                this function triggers the sending of a data frame. If 
 2882         //                however the selected message object is a RECEIVE OBJECT 
 2883         //                this function triggers the sending of a remote frame.
 2884         //
 2885         //----------------------------------------------------------------------------
 2886         // @Returnvalue   None
 2887         //
 2888         //----------------------------------------------------------------------------
 2889         // @Parameters    ubObjNr: 
 2890         //                Number of the message object (0-254)
 2891         //
 2892         //----------------------------------------------------------------------------
 2893         // @Date          2020/1/14
 2894         //
 2895         //****************************************************************************
 2896         
 2897         // USER CODE BEGIN (Transmit,1)
 2898         
 2899         // USER CODE END
 2900         
 2901         void CAN_vTransmit(ubyte ubObjNr)
 2902         {
 2903  1      
 2904  1        CAN_HWOBJ[ubObjNr].uwMOCTRH = 0x0720;  // set TXRQ,TXEN0,TXEN1,MSGVAL
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 48  

 2905  1      
 2906  1      } //  End of function CAN_vTransmit
 2907         
 2908         //****************************************************************************
 2909         // @Function      void CAN_vLoadData(ubyte ubObjNr, ubyte *ubpubData) 
 2910         //
 2911         //----------------------------------------------------------------------------
 2912         // @Description   If a hardware TRANSMIT OBJECT has to be loaded with data 
 2913         //                but not with a new identifier, this function may be used 
 2914         //                instead of the function CAN_vConfigMsgObj. The message 
 2915         //                object should be accessed by calling the function 
 2916         //                CAN_ubRequestMsgObj before calling this function. This 
 2917         //                prevents the CAN controller from working with invalid data.
 2918         //
 2919         //----------------------------------------------------------------------------
 2920         // @Returnvalue   None
 2921         //
 2922         //----------------------------------------------------------------------------
 2923         // @Parameters    ubObjNr: 
 2924         //                Number of the message object to be configured (0-254)
 2925         // @Parameters    *ubpubData: 
 2926         //                Pointer on a data buffer
 2927         //
 2928         //----------------------------------------------------------------------------
 2929         // @Date          2020/1/14
 2930         //
 2931         //****************************************************************************
 2932         
 2933         // USER CODE BEGIN (LoadData,1)
 2934         
 2935         // USER CODE END
 2936         
 2937         void CAN_vLoadData(ubyte ubObjNr, ubyte *ubpubData)
 2938         {
 2939  1        ubyte i;
 2940  1      
 2941  1        CAN_HWOBJ[ubObjNr].uwMOCTRH = 0x0008;       // set NEWDAT
 2942  1      
 2943  1        for(i = 0; i < (CAN_HWOBJ[ubObjNr].uwMOFCRH & 0x0F00) >> 8; i++)
 2944  1        {
 2945  2          CAN_HWOBJ[ubObjNr].ubData[i] = *(ubpubData++); //load MODATA
 2946  2        }
 2947  1      
 2948  1        CAN_HWOBJ[ubObjNr].uwMOCTRH = 0x0020;       // set MSGVAL
 2949  1        CAN_HWOBJ[ubObjNr].uwMOCTRL = 0x0040;       // reset RTSEL
 2950  1      
 2951  1      } //  End of function CAN_vLoadData
 2952         
 2953         
 2954         
 2955         //****************************************************************************
 2956         // @Macro         CAN_viSRN0() 
 2957         //
 2958         //----------------------------------------------------------------------------
 2959         // @Description   
 2960         //
 2961         //----------------------------------------------------------------------------
 2962         // @Returnvalue   
 2963         //
 2964         //----------------------------------------------------------------------------
 2965         // @Parameters    None
 2966         //
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 49  

 2967         //----------------------------------------------------------------------------
 2968         // @Date          2020/1/14
 2969         //
 2970         //****************************************************************************
 2971         
 2972         // USER CODE BEGIN (SRN0,1)
 2973         // USER CODE END
 2974         
 2975         void CAN_viSRN0(void) interrupt CAN_SRN0INT
 2976         {
 2977  1      
 2978  1        uword uwSRN0ObjHandler;
 2979  1      
 2980  1        // USER CODE BEGIN (SRN0,2)
 2981  1              
 2982  1              uword i=0;
 2983  1              uword temp =0;
 2984  1              extern int time_out_remote; 
 2985  1              extern int time_out_auto; 
 2986  1              extern struct remote_receive remote_re;
 2987  1              extern struct vehicle vehicle_rcv;
 2988  1              extern struct self_driving auto_cmd;
 2989  1              extern struct servo_breaking s_breaking;
 2990  1              
 2991  1        // USER CODE END
 2992  1      
 2993  1        CAN_MSIMASKH = 0x0479;          // set message index mask register
 2994  1        CAN_MSIMASKL = 0x903F;
 2995  1      
 2996  1        while (CAN_MSID0 != 0x0020)
 2997  1        {
 2998  2          switch(CAN_MSID0){
 2999  3      
 3000  3          case 0: // message object 0 interrupt 
 3001  3          
 3002  3            uwSRN0ObjHandler = CAN_HWOBJ[0].uwMOCTRL;
 3003  3      
 3004  3            if(uwSRN0ObjHandler & MOSTAT_RXPND)          // if message object 0 receive interrupt
 3005  3            {
 3006  4                  // USER CODE BEGIN (SRN0_OBJ0,1)
 3007  4      
 3008  4                  // USER CODE END
 3009  4      
 3010  4              if(uwSRN0ObjHandler & MOSTAT_NEWDAT)       // if NEWDAT is set
 3011  4              {
 3012  5                  // USER CODE BEGIN (SRN0_OBJ0,2)
 3013  5                      if (DEBUG ==FALSE)
 3014  5                              {
 3015  6                              vehicle_rcv.lfw.rpm = CAN_HWOBJ[0].ubData[1];
 3016  6                              vehicle_rcv.lfw.rpm<<=8;
 3017  6                              vehicle_rcv.lfw.rpm += CAN_HWOBJ[0].ubData[0] ;
 3018  6                              }
 3019  5                  // USER CODE END
 3020  5      
 3021  5                if (uwSRN0ObjHandler & MOSTAT_MSGLST)    // if MSGLST is set
 3022  5                {
 3023  6                  // Indicates that the CAN controller has stored a new 
 3024  6                  // message into this object, while NEWDAT was still set,
 3025  6                  // ie. the previously stored message is lost.
 3026  6      
 3027  6                  // USER CODE BEGIN (SRN0_OBJ0,3)
 3028  6      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 50  

 3029  6                  // USER CODE END
 3030  6      
 3031  6                }
 3032  5                else
 3033  5                {
 3034  6                  // The CAN controller has stored a new message into this object.
 3035  6      
 3036  6                  // USER CODE BEGIN (SRN0_OBJ0,4)
 3037  6      
 3038  6                  // USER CODE END
 3039  6                }
 3040  5      
 3041  5              }
 3042  4      
 3043  4              CAN_HWOBJ[0].uwMOCTRL = MOSTAT_RST_MNR;            // reset MSGLST + NEWDAT + RXPND
 3044  4      
 3045  4            }  // End of RXPND0
 3046  3      
 3047  3      
 3048  3            CAN_MSPND0H = ~(uword) 0x0000; // reset PND bit
 3049  3            CAN_MSPND0L = ~(uword) 0x0001;
 3050  3      
 3051  3            // USER CODE BEGIN (SRN0_OBJ0,7)
 3052  3      
 3053  3            // USER CODE END
 3054  3      
 3055  3            break;
 3056  3      
 3057  3      
 3058  3          case 1: // message object 1 interrupt 
 3059  3          
 3060  3            uwSRN0ObjHandler = CAN_HWOBJ[1].uwMOCTRL;
 3061  3      
 3062  3            if(uwSRN0ObjHandler & MOSTAT_RXPND)          // if message object 1 receive interrupt
 3063  3            {
 3064  4                  // USER CODE BEGIN (SRN0_OBJ1,1)
 3065  4                      if (DEBUG ==FALSE)
 3066  4                              {
 3067  5                                      vehicle_rcv.lbw.rpm = CAN_HWOBJ[1].ubData[1];
 3068  5                                      vehicle_rcv.lbw.rpm<<=8;
 3069  5                                      vehicle_rcv.lbw.rpm += CAN_HWOBJ[1].ubData[0] ;
 3070  5                              }
 3071  4                  // USER CODE END
 3072  4      
 3073  4              if(uwSRN0ObjHandler & MOSTAT_NEWDAT)       // if NEWDAT is set
 3074  4              {
 3075  5                  // USER CODE BEGIN (SRN0_OBJ1,2)
 3076  5      
 3077  5                  // USER CODE END
 3078  5      
 3079  5                if (uwSRN0ObjHandler & MOSTAT_MSGLST)    // if MSGLST is set
 3080  5                {
 3081  6                  // Indicates that the CAN controller has stored a new 
 3082  6                  // message into this object, while NEWDAT was still set,
 3083  6                  // ie. the previously stored message is lost.
 3084  6      
 3085  6                  // USER CODE BEGIN (SRN0_OBJ1,3)
 3086  6      
 3087  6                  // USER CODE END
 3088  6      
 3089  6                }
 3090  5                else
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 51  

 3091  5                {
 3092  6                  // The CAN controller has stored a new message into this object.
 3093  6      
 3094  6                  // USER CODE BEGIN (SRN0_OBJ1,4)
 3095  6      
 3096  6                  // USER CODE END
 3097  6                }
 3098  5      
 3099  5              }
 3100  4      
 3101  4              CAN_HWOBJ[1].uwMOCTRL = MOSTAT_RST_MNR;            // reset MSGLST + NEWDAT + RXPND
 3102  4      
 3103  4            }  // End of RXPND1
 3104  3      
 3105  3      
 3106  3            CAN_MSPND0H = ~(uword) 0x0000; // reset PND bit
 3107  3            CAN_MSPND0L = ~(uword) 0x0002;
 3108  3      
 3109  3            // USER CODE BEGIN (SRN0_OBJ1,7)
 3110  3      
 3111  3            // USER CODE END
 3112  3      
 3113  3            break;
 3114  3      
 3115  3      
 3116  3          case 2: // message object 2 interrupt 
 3117  3          
 3118  3            uwSRN0ObjHandler = CAN_HWOBJ[2].uwMOCTRL;
 3119  3      
 3120  3            if(uwSRN0ObjHandler & MOSTAT_RXPND)          // if message object 2 receive interrupt
 3121  3            {
 3122  4                  // USER CODE BEGIN (SRN0_OBJ2,1)
 3123  4      
 3124  4                  // USER CODE END
 3125  4      
 3126  4              if(uwSRN0ObjHandler & MOSTAT_NEWDAT)       // if NEWDAT is set
 3127  4              {
 3128  5                  // USER CODE BEGIN (SRN0_OBJ2,2)
 3129  5                              if (DEBUG ==FALSE)
 3130  5                              {
 3131  6                                      vehicle_rcv.rfw.rpm = CAN_HWOBJ[2].ubData[1];
 3132  6                                      vehicle_rcv.rfw.rpm<<=8;
 3133  6                                      vehicle_rcv.rfw.rpm += CAN_HWOBJ[2].ubData[0] ;
 3134  6                              }
 3135  5                  // USER CODE END
 3136  5      
 3137  5                if (uwSRN0ObjHandler & MOSTAT_MSGLST)    // if MSGLST is set
 3138  5                {
 3139  6                  // Indicates that the CAN controller has stored a new 
 3140  6                  // message into this object, while NEWDAT was still set,
 3141  6                  // ie. the previously stored message is lost.
 3142  6      
 3143  6                  // USER CODE BEGIN (SRN0_OBJ2,3)
 3144  6      
 3145  6                  // USER CODE END
 3146  6      
 3147  6                }
 3148  5                else
 3149  5                {
 3150  6                  // The CAN controller has stored a new message into this object.
 3151  6      
 3152  6                  // USER CODE BEGIN (SRN0_OBJ2,4)
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 52  

 3153  6      
 3154  6                  // USER CODE END
 3155  6                }
 3156  5      
 3157  5              }
 3158  4      
 3159  4              CAN_HWOBJ[2].uwMOCTRL = MOSTAT_RST_MNR;            // reset MSGLST + NEWDAT + RXPND
 3160  4      
 3161  4            }  // End of RXPND2
 3162  3      
 3163  3      
 3164  3            CAN_MSPND0H = ~(uword) 0x0000; // reset PND bit
 3165  3            CAN_MSPND0L = ~(uword) 0x0004;
 3166  3      
 3167  3            // USER CODE BEGIN (SRN0_OBJ2,7)
 3168  3      
 3169  3            // USER CODE END
 3170  3      
 3171  3            break;
 3172  3      
 3173  3      
 3174  3          case 3: // message object 3 interrupt 
 3175  3          
 3176  3            uwSRN0ObjHandler = CAN_HWOBJ[3].uwMOCTRL;
 3177  3      
 3178  3            if(uwSRN0ObjHandler & MOSTAT_RXPND)          // if message object 3 receive interrupt
 3179  3            {
 3180  4                  // USER CODE BEGIN (SRN0_OBJ3,1)
 3181  4      
 3182  4                  // USER CODE END
 3183  4      
 3184  4              if(uwSRN0ObjHandler & MOSTAT_NEWDAT)       // if NEWDAT is set
 3185  4              {
 3186  5                  // USER CODE BEGIN (SRN0_OBJ3,2)
 3187  5                      if (DEBUG ==FALSE)
 3188  5                              {
 3189  6                              vehicle_rcv.rbw.rpm = CAN_HWOBJ[3].ubData[1];
 3190  6                              vehicle_rcv.rbw.rpm<<=8;
 3191  6                              vehicle_rcv.rbw.rpm += CAN_HWOBJ[3].ubData[0] ;
 3192  6                              }
 3193  5                  // USER CODE END
 3194  5      
 3195  5                if (uwSRN0ObjHandler & MOSTAT_MSGLST)    // if MSGLST is set
 3196  5                {
 3197  6                  // Indicates that the CAN controller has stored a new 
 3198  6                  // message into this object, while NEWDAT was still set,
 3199  6                  // ie. the previously stored message is lost.
 3200  6      
 3201  6                  // USER CODE BEGIN (SRN0_OBJ3,3)
 3202  6      
 3203  6                  // USER CODE END
 3204  6      
 3205  6                }
 3206  5                else
 3207  5                {
 3208  6                  // The CAN controller has stored a new message into this object.
 3209  6      
 3210  6                  // USER CODE BEGIN (SRN0_OBJ3,4)
 3211  6      
 3212  6                  // USER CODE END
 3213  6                }
 3214  5      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 53  

 3215  5              }
 3216  4      
 3217  4              CAN_HWOBJ[3].uwMOCTRL = MOSTAT_RST_MNR;            // reset MSGLST + NEWDAT + RXPND
 3218  4      
 3219  4            }  // End of RXPND3
 3220  3      
 3221  3      
 3222  3            CAN_MSPND0H = ~(uword) 0x0000; // reset PND bit
 3223  3            CAN_MSPND0L = ~(uword) 0x0008;
 3224  3      
 3225  3            // USER CODE BEGIN (SRN0_OBJ3,7)
 3226  3      
 3227  3            // USER CODE END
 3228  3      
 3229  3            break;
 3230  3      
 3231  3      
 3232  3          case 4: // message object 4 interrupt 
 3233  3          
 3234  3            uwSRN0ObjHandler = CAN_HWOBJ[4].uwMOCTRL;
 3235  3      
 3236  3            if(uwSRN0ObjHandler & MOSTAT_RXPND)          // if message object 4 receive interrupt
 3237  3            {
 3238  4                  // USER CODE BEGIN (SRN0_OBJ4,1)
 3239  4      
 3240  4                  // USER CODE END
 3241  4      
 3242  4              if(uwSRN0ObjHandler & MOSTAT_NEWDAT)       // if NEWDAT is set
 3243  4              {
 3244  5                  // USER CODE BEGIN (SRN0_OBJ4,2)
 3245  5                              vehicle_rcv.front_steering.steering_velaus = CAN_HWOBJ[4].ubData[1];
 3246  5                              vehicle_rcv.front_steering.steering_velaus<<=8;
 3247  5                              vehicle_rcv.front_steering.steering_velaus += CAN_HWOBJ[4].ubData[0] ;
 3248  5      
 3249  5                  // USER CODE END
 3250  5      
 3251  5                if (uwSRN0ObjHandler & MOSTAT_MSGLST)    // if MSGLST is set
 3252  5                {
 3253  6                  // Indicates that the CAN controller has stored a new 
 3254  6                  // message into this object, while NEWDAT was still set,
 3255  6                  // ie. the previously stored message is lost.
 3256  6      
 3257  6                  // USER CODE BEGIN (SRN0_OBJ4,3)
 3258  6      
 3259  6                  // USER CODE END
 3260  6      
 3261  6                }
 3262  5                else
 3263  5                {
 3264  6                  // The CAN controller has stored a new message into this object.
 3265  6      
 3266  6                  // USER CODE BEGIN (SRN0_OBJ4,4)
 3267  6      
 3268  6                  // USER CODE END
 3269  6                }
 3270  5      
 3271  5              }
 3272  4      
 3273  4              CAN_HWOBJ[4].uwMOCTRL = MOSTAT_RST_MNR;            // reset MSGLST + NEWDAT + RXPND
 3274  4      
 3275  4            }  // End of RXPND4
 3276  3      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 54  

 3277  3      
 3278  3            CAN_MSPND0H = ~(uword) 0x0000; // reset PND bit
 3279  3            CAN_MSPND0L = ~(uword) 0x0010;
 3280  3      
 3281  3            // USER CODE BEGIN (SRN0_OBJ4,7)
 3282  3      
 3283  3            // USER CODE END
 3284  3      
 3285  3            break;
 3286  3      
 3287  3      
 3288  3          case 5: // message object 5 interrupt 
 3289  3          
 3290  3            uwSRN0ObjHandler = CAN_HWOBJ[5].uwMOCTRL;
 3291  3      
 3292  3            if(uwSRN0ObjHandler & MOSTAT_RXPND)          // if message object 5 receive interrupt
 3293  3            {
 3294  4                  // USER CODE BEGIN (SRN0_OBJ5,1)
 3295  4                              vehicle_rcv.back_steering.steering_velaus = CAN_HWOBJ[5].ubData[1];
 3296  4                              vehicle_rcv.back_steering.steering_velaus<<=8;
 3297  4                              vehicle_rcv.back_steering.steering_velaus += CAN_HWOBJ[5].ubData[0] ;
 3298  4                  // USER CODE END
 3299  4      
 3300  4              if(uwSRN0ObjHandler & MOSTAT_NEWDAT)       // if NEWDAT is set
 3301  4              {
 3302  5                  // USER CODE BEGIN (SRN0_OBJ5,2)
 3303  5      
 3304  5                  // USER CODE END
 3305  5      
 3306  5                if (uwSRN0ObjHandler & MOSTAT_MSGLST)    // if MSGLST is set
 3307  5                {
 3308  6                  // Indicates that the CAN controller has stored a new 
 3309  6                  // message into this object, while NEWDAT was still set,
 3310  6                  // ie. the previously stored message is lost.
 3311  6      
 3312  6                  // USER CODE BEGIN (SRN0_OBJ5,3)
 3313  6      
 3314  6                  // USER CODE END
 3315  6      
 3316  6                }
 3317  5                else
 3318  5                {
 3319  6                  // The CAN controller has stored a new message into this object.
 3320  6      
 3321  6                  // USER CODE BEGIN (SRN0_OBJ5,4)
 3322  6      
 3323  6                  // USER CODE END
 3324  6                }
 3325  5      
 3326  5              }
 3327  4      
 3328  4              CAN_HWOBJ[5].uwMOCTRL = MOSTAT_RST_MNR;            // reset MSGLST + NEWDAT + RXPND
 3329  4      
 3330  4            }  // End of RXPND5
 3331  3      
 3332  3      
 3333  3            CAN_MSPND0H = ~(uword) 0x0000; // reset PND bit
 3334  3            CAN_MSPND0L = ~(uword) 0x0020;
 3335  3      
 3336  3            // USER CODE BEGIN (SRN0_OBJ5,7)
 3337  3      
 3338  3            // USER CODE END
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 55  

 3339  3      
 3340  3            break;
 3341  3      
 3342  3      
 3343  3          case 12: // message object 12 interrupt 
 3344  3          
 3345  3            uwSRN0ObjHandler = CAN_HWOBJ[12].uwMOCTRL;
 3346  3      
 3347  3            if(uwSRN0ObjHandler & MOSTAT_RXPND)          // if message object 12 receive interrupt
 3348  3            {
 3349  4                  // USER CODE BEGIN (SRN0_OBJ12,1)
 3350  4      
 3351  4                  // USER CODE END
 3352  4      
 3353  4              if(uwSRN0ObjHandler & MOSTAT_NEWDAT)       // if NEWDAT is set
 3354  4              {
 3355  5                  // USER CODE BEGIN (SRN0_OBJ12,2)
 3356  5                              //数据清除
 3357  5                              remote_re.t_throttle_vle=0;
 3358  5                              remote_re.t_breaking_vle=0;
 3359  5                              remote_re.t_steering_vle=0;
 3360  5      
 3361  5                              //get control velues     0x283
 3362  5                              remote_re.t_throttle_vle = CAN_HWOBJ[12].ubData[1];
 3363  5                              remote_re.t_throttle_vle <<=8;
 3364  5                              remote_re.t_throttle_vle += CAN_HWOBJ[12].ubData[0];
 3365  5                              //get control velues 
 3366  5                              remote_re.t_breaking_vle = CAN_HWOBJ[12].ubData[3];
 3367  5                              remote_re.t_breaking_vle <<=8;
 3368  5                              remote_re.t_breaking_vle += CAN_HWOBJ[12].ubData[2];
 3369  5                              //get control velues 
 3370  5                              remote_re.t_steering_vle = CAN_HWOBJ[12].ubData[5];
 3371  5                              remote_re.t_steering_vle <<=8;
 3372  5                              remote_re.t_steering_vle += CAN_HWOBJ[12].ubData[4];
 3373  5      
 3374  5                              //挡位
 3375  5                              if((CAN_HWOBJ[12].ubData[6]>>6)==0x1) remote_re.t_gear = GEAR_D;        //0x06 
 3376  5                              else if((CAN_HWOBJ[12].ubData[6]>>6)==0x2) remote_re.t_gear = GEAR_N;  //0x0a
 3377  5                              else if((CAN_HWOBJ[12].ubData[6]>>6)==0x3) remote_re.t_gear = GEAR_R;  //0x0e
 3378  5                              else remote_re.t_gear = 0x0;
 3379  5                              //备用开关1
 3380  5                              if((CAN_HWOBJ[12].ubData[6]&0x03)==0x1) remote_re.t_backup1 = 1;        
 3381  5                              else if((CAN_HWOBJ[12].ubData[6]&0x03)==0x2) remote_re.t_backup1 = 2;  
 3382  5                              else if((CAN_HWOBJ[12].ubData[6]&0x03)==0x3) remote_re.t_backup1 = 3;  
 3383  5                              else remote_re.t_backup1 = 0x0;
 3384  5      
 3385  5                              //转向模式
 3386  5                              if(((CAN_HWOBJ[12].ubData[6]>>2)&0x03)==0x1) remote_re.t_steering_mod = S_DIFF;
 3387  5                              else if(((CAN_HWOBJ[12].ubData[6]>>2)&0x03)==0x2) remote_re.t_steering_mod = S_NORM;
 3388  5                              else if(((CAN_HWOBJ[12].ubData[6]>>2)&0x03)==0x3) remote_re.t_steering_mod = S_SAME;
 3389  5                               else remote_re.t_steering_mod = 0x0;
 3390  5      
 3391  5                              //备用开关3
 3392  5                              if(((CAN_HWOBJ[12].ubData[6]>>4)&0x03)==0x1) remote_re.t_backup3 = 1; 
 3393  5                              else if(((CAN_HWOBJ[12].ubData[6]>>4)&0x03)==0x2) remote_re.t_backup3 = 2;  
 3394  5                              else if(((CAN_HWOBJ[12].ubData[6]>>4)&0x03)==0x3) remote_re.t_backup3 = 3;  
 3395  5                              else remote_re.t_backup3 = 0x0;
 3396  5      
 3397  5                              //手/自动模式 
 3398  5                              if((CAN_HWOBJ[12].ubData[7]&0x01))  remote_re.t_way_trl = TRUE;  //自动驾驶模式 
 3399  5                              else   remote_re.t_way_trl = FALSE;     //遥控模式
 3400  5                              //急停
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 56  

 3401  5                              if(CAN_HWOBJ[12].ubData[7]&0x02) remote_re.t_em_stop = TRUE;    //急停按钮触发
 3402  5                               else remote_re.t_em_stop = FALSE;
 3403  5                              //舱门控制
 3404  5                               if(CAN_HWOBJ[12].ubData[7]&0x04) remote_re.cabin_ctl = TRUE;   
 3405  5                               else remote_re.cabin_ctl = FALSE;
 3406  5                              //手刹
 3407  5                               if(CAN_HWOBJ[12].ubData[7]&0x08) remote_re.hand_break =   FALSE;       
 3408  5                               else remote_re.hand_break =  TRUE;
 3409  5                                //debug_hand_break1=FALSE;
 3410  5                               //debug_hand_break1=CAN_HWOBJ[12].ubData[7] ;
 3411  5                               //分离
 3412  5                               if(CAN_HWOBJ[12].ubData[7]&0x10) remote_re.separate = TRUE;    
 3413  5                               else remote_re.separate = FALSE;
 3414  5                              //自动对接
 3415  5                               if(CAN_HWOBJ[12].ubData[7]&0x20) remote_re.auto_joint = TRUE;  
 3416  5                               else remote_re.auto_joint = FALSE;
 3417  5                              //低速模式
 3418  5                              if(CAN_HWOBJ[12].ubData[7]&0x40) remote_re.low_speed_mod = TRUE;        
 3419  5                               else remote_re.low_speed_mod = FALSE;
 3420  5                              //使能钥匙，遥控断链后会置位
 3421  5                              if(CAN_HWOBJ[12].ubData[7]&0x80) {remote_re.key = TRUE;}
 3422  5                               else {remote_re.key = FALSE;   time_out_remote =0;}
 3423  5                  // USER CODE END
 3424  5      
 3425  5                if (uwSRN0ObjHandler & MOSTAT_MSGLST)    // if MSGLST is set
 3426  5                {
 3427  6                  // Indicates that the CAN controller has stored a new 
 3428  6                  // message into this object, while NEWDAT was still set,
 3429  6                  // ie. the previously stored message is lost.
 3430  6      
 3431  6                  // USER CODE BEGIN (SRN0_OBJ12,3)
 3432  6      
 3433  6                  // USER CODE END
 3434  6      
 3435  6                }
 3436  5                else
 3437  5                {
 3438  6                  // The CAN controller has stored a new message into this object.
 3439  6      
 3440  6                  // USER CODE BEGIN (SRN0_OBJ12,4)
 3441  6      
 3442  6                  // USER CODE END
 3443  6                }
 3444  5      
 3445  5              }
 3446  4      
 3447  4              CAN_HWOBJ[12].uwMOCTRL = MOSTAT_RST_MNR;            // reset MSGLST + NEWDAT + RXPND
 3448  4      
 3449  4            }  // End of RXPND12
 3450  3      
 3451  3      
 3452  3            CAN_MSPND0H = ~(uword) 0x0000; // reset PND bit
 3453  3            CAN_MSPND0L = ~(uword) 0x1000;
 3454  3      
 3455  3            // USER CODE BEGIN (SRN0_OBJ12,7)
 3456  3      
 3457  3            // USER CODE END
 3458  3      
 3459  3            break;
 3460  3      
 3461  3      
 3462  3          case 15: // message object 15 interrupt 
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 57  

 3463  3          
 3464  3            uwSRN0ObjHandler = CAN_HWOBJ[15].uwMOCTRL;
 3465  3      
 3466  3            if(uwSRN0ObjHandler & MOSTAT_RXPND)          // if message object 15 receive interrupt
 3467  3            {
 3468  4                  // USER CODE BEGIN (SRN0_OBJ15,1)
 3469  4                              
 3470  4                  // USER CODE END
 3471  4      
 3472  4              if(uwSRN0ObjHandler & MOSTAT_NEWDAT)       // if NEWDAT is set
 3473  4              {
 3474  5                              
 3475  5                  // USER CODE BEGIN (SRN0_OBJ15,2)
 3476  5      
 3477  5                              auto_cmd.speed = CAN_HWOBJ[15].ubData[1];
 3478  5                              auto_cmd.speed <<=8;
 3479  5                              auto_cmd.speed += CAN_HWOBJ[15].ubData[0];
 3480  5      
 3481  5                              //breaking
 3482  5                              auto_cmd.breaking = CAN_HWOBJ[15].ubData[3];
 3483  5                              auto_cmd.breaking <<=8;
 3484  5                              auto_cmd.breaking += CAN_HWOBJ[15].ubData[2];
 3485  5                              //steering
 3486  5                              auto_cmd.steering =CAN_HWOBJ[15].ubData[5];
 3487  5                              auto_cmd.steering<<=8;
 3488  5                              auto_cmd.steering +=CAN_HWOBJ[15].ubData[4];
 3489  5                              //挡位
 3490  5                              if((CAN_HWOBJ[15].ubData[6]>>6)==0x1) auto_cmd.gear = GEAR_D;
 3491  5                              else if((CAN_HWOBJ[15].ubData[6]>>6)==0x2) auto_cmd.gear = GEAR_N;
 3492  5                              else if((CAN_HWOBJ[15].ubData[6]>>6)==0x3) auto_cmd.gear = GEAR_R;
 3493  5                              else auto_cmd.gear = 0x0;
 3494  5                              //转向模式
 3495  5                              if((CAN_HWOBJ[15].ubData[6]&0x03)==0x1) auto_cmd.steering_mod = S_DIFF;
 3496  5                              else if((CAN_HWOBJ[15].ubData[6]&0x03)==0x2) auto_cmd.steering_mod = S_NORM;
 3497  5                              else if((CAN_HWOBJ[15].ubData[6]&0x03)==0x3) auto_cmd.steering_mod = S_SAME;
 3498  5                              else auto_cmd.steering_mod = 0x0;
 3499  5      
 3500  5                              //手/自动模式 
 3501  5                              if((CAN_HWOBJ[15].ubData[7]&0x01))  auto_cmd.trun_laft = TRUE;  //左转向灯      
 3502  5                              else   auto_cmd.trun_laft = FALSE;      
 3503  5                              //急停
 3504  5                              if(CAN_HWOBJ[15].ubData[7]&0x02) auto_cmd.em_stop = TRUE;       //急停按钮触发
 3505  5                               else auto_cmd.em_stop = FALSE;
 3506  5                              //右转向
 3507  5                               if(CAN_HWOBJ[15].ubData[7]&0x04) auto_cmd.turn_right = TRUE;   
 3508  5                               else auto_cmd.turn_right = FALSE;
 3509  5                              //手刹
 3510  5                               if(CAN_HWOBJ[15].ubData[7]&0x08) auto_cmd.hand_break = TRUE;   
 3511  5                               else auto_cmd.hand_break = FALSE;
 3512  5                               //大灯 近光
 3513  5                               if(CAN_HWOBJ[15].ubData[7]&0x10) auto_cmd.near_light = TRUE;   
 3514  5                               else auto_cmd.near_light = FALSE;
 3515  5                              //远光灯
 3516  5                               if(CAN_HWOBJ[15].ubData[7]&0x20) auto_cmd.fear_light = TRUE;   
 3517  5                               else auto_cmd.fear_light = FALSE;
 3518  5                              //低速模式
 3519  5                              if(CAN_HWOBJ[15].ubData[7]&0x20) auto_cmd.low_speed_mod = TRUE; 
 3520  5                               else auto_cmd.low_speed_mod = FALSE;
 3521  5                              //使能钥匙
 3522  5                      //      if(CAN_HWOBJ[15].ubData[7]&0x80) auto_cmd.key = TRUE;   
 3523  5                      //       else auto_cmd.key = FALSE;
 3524  5      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 58  

 3525  5                              time_out_auto=0;
 3526  5                  // USER CODE END
 3527  5       
 3528  5                if (uwSRN0ObjHandler & MOSTAT_MSGLST)    // if MSGLST is set
 3529  5                {
 3530  6                  // Indicates that the CAN controller has stored a new 
 3531  6                  // message into this object, while NEWDAT was still set,
 3532  6                  // ie. the previously stored message is lost.
 3533  6      
 3534  6                  // USER CODE BEGIN (SRN0_OBJ15,3)
 3535  6      
 3536  6                  // USER CODE END
 3537  6      
 3538  6                }
 3539  5                else
 3540  5                {
 3541  6                  // The CAN controller has stored a new message into this object.
 3542  6      
 3543  6                  // USER CODE BEGIN (SRN0_OBJ15,4)
 3544  6      
 3545  6                  // USER CODE END
 3546  6                }
 3547  5      
 3548  5              }
 3549  4      
 3550  4              CAN_HWOBJ[15].uwMOCTRL = MOSTAT_RST_MNR;            // reset MSGLST + NEWDAT + RXPND
 3551  4      
 3552  4            }  // End of RXPND15
 3553  3      
 3554  3      
 3555  3            CAN_MSPND0H = ~(uword) 0x0000; // reset PND bit
 3556  3            CAN_MSPND0L = ~(uword) 0x8000;
 3557  3      
 3558  3            // USER CODE BEGIN (SRN0_OBJ15,7)
 3559  3      
 3560  3            // USER CODE END
 3561  3      
 3562  3            break;
 3563  3      
 3564  3      
 3565  3          case 16: // message object 16 interrupt 
 3566  3          
 3567  3            uwSRN0ObjHandler = CAN_HWOBJ[16].uwMOCTRL;
 3568  3      
 3569  3            if(uwSRN0ObjHandler & MOSTAT_RXPND)          // if message object 16 receive interrupt
 3570  3            {
 3571  4                  // USER CODE BEGIN (SRN0_OBJ16,1)
 3572  4      
 3573  4                  // USER CODE END
 3574  4      
 3575  4              if(uwSRN0ObjHandler & MOSTAT_NEWDAT)       // if NEWDAT is set
 3576  4              {
 3577  5                  // USER CODE BEGIN (SRN0_OBJ16,2)
 3578  5      
 3579  5                  // USER CODE END
 3580  5      
 3581  5                if (uwSRN0ObjHandler & MOSTAT_MSGLST)    // if MSGLST is set
 3582  5                {
 3583  6                  // Indicates that the CAN controller has stored a new 
 3584  6                  // message into this object, while NEWDAT was still set,
 3585  6                  // ie. the previously stored message is lost.
 3586  6      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 59  

 3587  6                  // USER CODE BEGIN (SRN0_OBJ16,3)
 3588  6      
 3589  6                  // USER CODE END
 3590  6      
 3591  6                }
 3592  5                else
 3593  5                {
 3594  6                  // The CAN controller has stored a new message into this object.
 3595  6      
 3596  6                  // USER CODE BEGIN (SRN0_OBJ16,4)
 3597  6      
 3598  6                  // USER CODE END
 3599  6                }
 3600  5      
 3601  5              }
 3602  4      
 3603  4              CAN_HWOBJ[16].uwMOCTRL = MOSTAT_RST_MNR;            // reset MSGLST + NEWDAT + RXPND
 3604  4      
 3605  4            }  // End of RXPND16
 3606  3      
 3607  3      
 3608  3            CAN_MSPND0H = ~(uword) 0x0001; // reset PND bit
 3609  3            CAN_MSPND0L = ~(uword) 0x0000;
 3610  3      
 3611  3            // USER CODE BEGIN (SRN0_OBJ16,7)
 3612  3      
 3613  3            // USER CODE END
 3614  3      
 3615  3            break;
 3616  3      
 3617  3      
 3618  3          case 19: // message object 19 interrupt 
 3619  3          
 3620  3            uwSRN0ObjHandler = CAN_HWOBJ[19].uwMOCTRL;
 3621  3      
 3622  3            if(uwSRN0ObjHandler & MOSTAT_RXPND)          // if message object 19 receive interrupt
 3623  3            {
 3624  4                  // USER CODE BEGIN (SRN0_OBJ19,1)
 3625  4                      if (DEBUG ==TRUE)
 3626  4                              {
 3627  5                                      vehicle_rcv.lfw.rpm = CAN_HWOBJ[19].ubData[1];
 3628  5                                      vehicle_rcv.lfw.rpm<<=8;
 3629  5                                      vehicle_rcv.lfw.rpm += CAN_HWOBJ[19].ubData[0] ;
 3630  5      
 3631  5                              }
 3632  4                  // USER CODE END
 3633  4      
 3634  4              if(uwSRN0ObjHandler & MOSTAT_NEWDAT)       // if NEWDAT is set
 3635  4              {
 3636  5                  // USER CODE BEGIN (SRN0_OBJ19,2)
 3637  5      
 3638  5                  // USER CODE END
 3639  5      
 3640  5                if (uwSRN0ObjHandler & MOSTAT_MSGLST)    // if MSGLST is set
 3641  5                {
 3642  6                  // Indicates that the CAN controller has stored a new 
 3643  6                  // message into this object, while NEWDAT was still set,
 3644  6                  // ie. the previously stored message is lost.
 3645  6      
 3646  6                  // USER CODE BEGIN (SRN0_OBJ19,3)
 3647  6      
 3648  6                  // USER CODE END
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 60  

 3649  6      
 3650  6                }
 3651  5                else
 3652  5                {
 3653  6                  // The CAN controller has stored a new message into this object.
 3654  6      
 3655  6                  // USER CODE BEGIN (SRN0_OBJ19,4)
 3656  6      
 3657  6                  // USER CODE END
 3658  6                }
 3659  5      
 3660  5              }
 3661  4      
 3662  4              CAN_HWOBJ[19].uwMOCTRL = MOSTAT_RST_MNR;            // reset MSGLST + NEWDAT + RXPND
 3663  4      
 3664  4            }  // End of RXPND19
 3665  3      
 3666  3      
 3667  3            CAN_MSPND0H = ~(uword) 0x0008; // reset PND bit
 3668  3            CAN_MSPND0L = ~(uword) 0x0000;
 3669  3      
 3670  3            // USER CODE BEGIN (SRN0_OBJ19,7)
 3671  3      
 3672  3            // USER CODE END
 3673  3      
 3674  3            break;
 3675  3      
 3676  3      
 3677  3          case 20: // message object 20 interrupt 
 3678  3          
 3679  3            uwSRN0ObjHandler = CAN_HWOBJ[20].uwMOCTRL;
 3680  3      
 3681  3            if(uwSRN0ObjHandler & MOSTAT_RXPND)          // if message object 20 receive interrupt
 3682  3            {
 3683  4                  // USER CODE BEGIN (SRN0_OBJ20,1)
 3684  4                      if (DEBUG ==TRUE)
 3685  4                              {
 3686  5                                      vehicle_rcv.lbw.rpm = CAN_HWOBJ[20].ubData[1];
 3687  5                                      vehicle_rcv.lbw.rpm<<=8;
 3688  5                                      vehicle_rcv.lbw.rpm += CAN_HWOBJ[20].ubData[0] ;
 3689  5                              }
 3690  4                  // USER CODE END
 3691  4      
 3692  4              if(uwSRN0ObjHandler & MOSTAT_NEWDAT)       // if NEWDAT is set
 3693  4              {
 3694  5                  // USER CODE BEGIN (SRN0_OBJ20,2)
 3695  5      
 3696  5                  // USER CODE END
 3697  5      
 3698  5                if (uwSRN0ObjHandler & MOSTAT_MSGLST)    // if MSGLST is set
 3699  5                {
 3700  6                  // Indicates that the CAN controller has stored a new 
 3701  6                  // message into this object, while NEWDAT was still set,
 3702  6                  // ie. the previously stored message is lost.
 3703  6      
 3704  6                  // USER CODE BEGIN (SRN0_OBJ20,3)
 3705  6      
 3706  6                  // USER CODE END
 3707  6      
 3708  6                }
 3709  5                else
 3710  5                {
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 61  

 3711  6                  // The CAN controller has stored a new message into this object.
 3712  6      
 3713  6                  // USER CODE BEGIN (SRN0_OBJ20,4)
 3714  6      
 3715  6                  // USER CODE END
 3716  6                }
 3717  5      
 3718  5              }
 3719  4      
 3720  4              CAN_HWOBJ[20].uwMOCTRL = MOSTAT_RST_MNR;            // reset MSGLST + NEWDAT + RXPND
 3721  4      
 3722  4            }  // End of RXPND20
 3723  3      
 3724  3      
 3725  3            CAN_MSPND0H = ~(uword) 0x0010; // reset PND bit
 3726  3            CAN_MSPND0L = ~(uword) 0x0000;
 3727  3      
 3728  3            // USER CODE BEGIN (SRN0_OBJ20,7)
 3729  3      
 3730  3            // USER CODE END
 3731  3      
 3732  3            break;
 3733  3      
 3734  3      
 3735  3          case 21: // message object 21 interrupt 
 3736  3          
 3737  3            uwSRN0ObjHandler = CAN_HWOBJ[21].uwMOCTRL;
 3738  3      
 3739  3            if(uwSRN0ObjHandler & MOSTAT_RXPND)          // if message object 21 receive interrupt
 3740  3            {
 3741  4                  // USER CODE BEGIN (SRN0_OBJ21,1)
 3742  4                      if (DEBUG ==TRUE)
 3743  4                              {
 3744  5                                      vehicle_rcv.rfw.rpm = CAN_HWOBJ[21].ubData[1];
 3745  5                                      vehicle_rcv.rfw.rpm<<=8;
 3746  5                                      vehicle_rcv.rfw.rpm += CAN_HWOBJ[21].ubData[0] ;
 3747  5                              }
 3748  4                  // USER CODE END
 3749  4      
 3750  4              if(uwSRN0ObjHandler & MOSTAT_NEWDAT)       // if NEWDAT is set
 3751  4              {
 3752  5                  // USER CODE BEGIN (SRN0_OBJ21,2)
 3753  5      
 3754  5                  // USER CODE END
 3755  5      
 3756  5                if (uwSRN0ObjHandler & MOSTAT_MSGLST)    // if MSGLST is set
 3757  5                {
 3758  6                  // Indicates that the CAN controller has stored a new 
 3759  6                  // message into this object, while NEWDAT was still set,
 3760  6                  // ie. the previously stored message is lost.
 3761  6      
 3762  6                  // USER CODE BEGIN (SRN0_OBJ21,3)
 3763  6      
 3764  6                  // USER CODE END
 3765  6      
 3766  6                }
 3767  5                else
 3768  5                {
 3769  6                  // The CAN controller has stored a new message into this object.
 3770  6      
 3771  6                  // USER CODE BEGIN (SRN0_OBJ21,4)
 3772  6      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 62  

 3773  6                  // USER CODE END
 3774  6                }
 3775  5      
 3776  5              }
 3777  4      
 3778  4              CAN_HWOBJ[21].uwMOCTRL = MOSTAT_RST_MNR;            // reset MSGLST + NEWDAT + RXPND
 3779  4      
 3780  4            }  // End of RXPND21
 3781  3      
 3782  3      
 3783  3            CAN_MSPND0H = ~(uword) 0x0020; // reset PND bit
 3784  3            CAN_MSPND0L = ~(uword) 0x0000;
 3785  3      
 3786  3            // USER CODE BEGIN (SRN0_OBJ21,7)
 3787  3      
 3788  3            // USER CODE END
 3789  3      
 3790  3            break;
 3791  3      
 3792  3      
 3793  3          case 22: // message object 22 interrupt 
 3794  3          
 3795  3            uwSRN0ObjHandler = CAN_HWOBJ[22].uwMOCTRL;
 3796  3      
 3797  3            if(uwSRN0ObjHandler & MOSTAT_RXPND)          // if message object 22 receive interrupt
 3798  3            {
 3799  4                  // USER CODE BEGIN (SRN0_OBJ22,1)
 3800  4                      if (DEBUG ==TRUE)
 3801  4                              {
 3802  5                                      vehicle_rcv.rbw.rpm = CAN_HWOBJ[22].ubData[1];
 3803  5                                      vehicle_rcv.rbw.rpm<<=8;
 3804  5                                      vehicle_rcv.rbw.rpm += CAN_HWOBJ[22].ubData[0] ;
 3805  5                              }
 3806  4                  // USER CODE END
 3807  4      
 3808  4              if(uwSRN0ObjHandler & MOSTAT_NEWDAT)       // if NEWDAT is set
 3809  4              {
 3810  5                  // USER CODE BEGIN (SRN0_OBJ22,2)
 3811  5      
 3812  5                  // USER CODE END
 3813  5      
 3814  5                if (uwSRN0ObjHandler & MOSTAT_MSGLST)    // if MSGLST is set
 3815  5                {
 3816  6                  // Indicates that the CAN controller has stored a new 
 3817  6                  // message into this object, while NEWDAT was still set,
 3818  6                  // ie. the previously stored message is lost.
 3819  6      
 3820  6                  // USER CODE BEGIN (SRN0_OBJ22,3)
 3821  6      
 3822  6                  // USER CODE END
 3823  6      
 3824  6                }
 3825  5                else
 3826  5                {
 3827  6                  // The CAN controller has stored a new message into this object.
 3828  6      
 3829  6                  // USER CODE BEGIN (SRN0_OBJ22,4)
 3830  6      
 3831  6                  // USER CODE END
 3832  6                }
 3833  5      
 3834  5              }
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 63  

 3835  4      
 3836  4              CAN_HWOBJ[22].uwMOCTRL = MOSTAT_RST_MNR;            // reset MSGLST + NEWDAT + RXPND
 3837  4      
 3838  4            }  // End of RXPND22
 3839  3      
 3840  3      
 3841  3            CAN_MSPND0H = ~(uword) 0x0040; // reset PND bit
 3842  3            CAN_MSPND0L = ~(uword) 0x0000;
 3843  3      
 3844  3            // USER CODE BEGIN (SRN0_OBJ22,7)
 3845  3      
 3846  3            // USER CODE END
 3847  3      
 3848  3            break;
 3849  3      
 3850  3      
 3851  3          case 26: // message object 26 interrupt 
 3852  3          
 3853  3            uwSRN0ObjHandler = CAN_HWOBJ[26].uwMOCTRL;
 3854  3      
 3855  3            if(uwSRN0ObjHandler & MOSTAT_RXPND)          // if message object 26 receive interrupt
 3856  3            {
 3857  4                  // USER CODE BEGIN (SRN0_OBJ26,1)
 3858  4                              //获取伺服控制状态值
 3859  4                              s_breaking.servo_rx_data[0] =  CAN_HWOBJ[22].ubData[0];
 3860  4                              s_breaking.servo_rx_data[1] =  CAN_HWOBJ[22].ubData[1];
 3861  4                              s_breaking.servo_rx_data[2] =  CAN_HWOBJ[22].ubData[2];
 3862  4                              s_breaking.servo_rx_data[3] =  CAN_HWOBJ[22].ubData[3];
 3863  4                              s_breaking.servo_rx_data[4] =  CAN_HWOBJ[22].ubData[4];
 3864  4                              s_breaking.servo_rx_data[5] =  CAN_HWOBJ[22].ubData[5];
 3865  4                              s_breaking.servo_rx_data[6] =  CAN_HWOBJ[22].ubData[6];
 3866  4                              s_breaking.servo_rx_data[7] =  CAN_HWOBJ[22].ubData[7];
 3867  4                  // USER CODE END
 3868  4      
 3869  4              if(uwSRN0ObjHandler & MOSTAT_NEWDAT)       // if NEWDAT is set
 3870  4              {
 3871  5                  // USER CODE BEGIN (SRN0_OBJ26,2)
 3872  5      
 3873  5                  // USER CODE END
 3874  5      
 3875  5                if (uwSRN0ObjHandler & MOSTAT_MSGLST)    // if MSGLST is set
 3876  5                {
 3877  6                  // Indicates that the CAN controller has stored a new 
 3878  6                  // message into this object, while NEWDAT was still set,
 3879  6                  // ie. the previously stored message is lost.
 3880  6      
 3881  6                  // USER CODE BEGIN (SRN0_OBJ26,3)
 3882  6      
 3883  6                  // USER CODE END
 3884  6      
 3885  6                }
 3886  5                else
 3887  5                {
 3888  6                  // The CAN controller has stored a new message into this object.
 3889  6      
 3890  6                  // USER CODE BEGIN (SRN0_OBJ26,4)
 3891  6      
 3892  6                  // USER CODE END
 3893  6                }
 3894  5      
 3895  5              }
 3896  4      
C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 64  

 3897  4              CAN_HWOBJ[26].uwMOCTRL = MOSTAT_RST_MNR;            // reset MSGLST + NEWDAT + RXPND
 3898  4      
 3899  4            }  // End of RXPND26
 3900  3      
 3901  3      
 3902  3            CAN_MSPND0H = ~(uword) 0x0400; // reset PND bit
 3903  3            CAN_MSPND0L = ~(uword) 0x0000;
 3904  3      
 3905  3            // USER CODE BEGIN (SRN0_OBJ26,7)
 3906  3      
 3907  3            // USER CODE END
 3908  3      
 3909  3            break;
 3910  3      
 3911  3          default:
 3912  3      
 3913  3            // USER CODE BEGIN (SRN0,3)
 3914  3      
 3915  3            // USER CODE END
 3916  3      
 3917  3            break;
 3918  3      
 3919  3          }  // end switch 
 3920  2      
 3921  2          // USER CODE BEGIN (SRN0,7)
 3922  2      
 3923  2          // USER CODE END
 3924  2      
 3925  2        }  // end of while CAN_MSID
 3926  1      
 3927  1      
 3928  1        // USER CODE BEGIN (SRN0,15)
 3929  1      
 3930  1        // USER CODE END
 3931  1      
 3932  1      } //  End of function CAN_viSRN0
 3933         
 3934         
 3935         
 3936         // USER CODE BEGIN (CAN_General,10)
 3937         
 3938         // USER CODE END
 3939         


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =        7654     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =    --------     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.

C166 COMPILER V7.00, CAN                                                                   04/01/2020 13:45:18 PAGE 65  


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
