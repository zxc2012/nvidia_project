C166 COMPILER V7.00, U0C0                                                                  04/01/2020 13:45:19 PAGE 1   


C166 COMPILER V7.00, COMPILATION OF MODULE U0C0
OBJECT MODULE PLACED IN U0C0.obj
COMPILER INVOKED BY: H:\KEILC166\C166\BIN\C166.EXE source\U0C0.c MODV2 BROWSE INCDIR(.\source;.\lib) MODV2 DEBUG PRINT(.
                    -\U0C0.lst) OBJECT(U0C0.obj) 

 stmt lvl     source

    1         //****************************************************************************
    2         // @Module        Universal Serial Interface Channel (USIC) U0C0
    3         // @Filename      U0C0.c
    4         // @Project       tiaoshi.dav
    5         //----------------------------------------------------------------------------
    6         // @Controller    Infineon XC2267M-104F80
    7         //
    8         // @Compiler      Keil
    9         //
   10         // @Codegenerator 2.0
   11         //
   12         // @Description   This file contains functions that use the U0C0 module.
   13         //
   14         //----------------------------------------------------------------------------
   15         // @Date          2020/1/14 16:27:47
   16         //
   17         //****************************************************************************
   18         
   19         // USER CODE BEGIN (U0C0_General,1)
   20         
   21         // USER CODE END
   22         
   23         
   24         
   25         //****************************************************************************
   26         // @Project Includes
   27         //****************************************************************************
   28         
   29         #include "MAIN.h"
   30         
   31         // USER CODE BEGIN (U0C0_General,2)
   32         
   33         // USER CODE END
   34         
   35         
   36         //****************************************************************************
   37         // @Macros
   38         //****************************************************************************
   39         
   40         // USER CODE BEGIN (U0C0_General,3)
   41         
   42         // USER CODE END
   43         
   44         
   45         //****************************************************************************
   46         // @Defines
   47         //****************************************************************************
   48         
   49         // USER CODE BEGIN (U0C0_General,4)
   50         
   51         // USER CODE END
   52         
   53         
   54         //****************************************************************************
C166 COMPILER V7.00, U0C0                                                                  04/01/2020 13:45:19 PAGE 2   

   55         // @Typedefs
   56         //****************************************************************************
   57         
   58         // USER CODE BEGIN (U0C0_General,5)
   59         
   60         // USER CODE END
   61         
   62         
   63         //****************************************************************************
   64         // @Imported Global Variables
   65         //****************************************************************************
   66         
   67         // USER CODE BEGIN (U0C0_General,6)
   68         
   69         // USER CODE END
   70         
   71         
   72         //****************************************************************************
   73         // @Global Variables
   74         //****************************************************************************
   75         
   76         // USER CODE BEGIN (U0C0_General,7)
   77         
   78         // USER CODE END
   79         
   80         
   81         //****************************************************************************
   82         // @External Prototypes
   83         //****************************************************************************
   84         
   85         // USER CODE BEGIN (U0C0_General,8)
   86         
   87         // USER CODE END
   88         
   89         
   90         //****************************************************************************
   91         // @Prototypes Of Local Functions
   92         //****************************************************************************
   93         
   94         // USER CODE BEGIN (U0C0_General,9)
   95         
   96         
   97         
   98         // USER CODE END
   99         
  100         
  101         //****************************************************************************
  102         // @Function      void U0C0_IIC_vInit(void)
  103         //
  104         //----------------------------------------------------------------------------
  105         // @Description   This is the initialization function of the U0C0 function
  106         //                library. It is assumed that the SFRs used by this library
  107         //                are in reset state.
  108         //
  109         //----------------------------------------------------------------------------
  110         // @Returnvalue   None
  111         //
  112         //----------------------------------------------------------------------------
  113         // @Parameters    None
  114         //
  115         //----------------------------------------------------------------------------
  116         // @Date          2020/1/14
C166 COMPILER V7.00, U0C0                                                                  04/01/2020 13:45:19 PAGE 3   

  117         //
  118         //****************************************************************************
  119         
  120         // USER CODE BEGIN (Init,1)
  121         
  122         // USER CODE END
  123         
  124         void U0C0_IIC_vInit(void)
  125         {
  126  1        // USER CODE BEGIN (Init,2)
  127  1      
  128  1        // USER CODE END
  129  1      
  130  1        ///  -----------------------------------------------------------------------
  131  1        ///  Configuration of the U0C0 Operation Mode:
  132  1        ///  -----------------------------------------------------------------------
  133  1        ///  - The Master mode is selected
  134  1      
  135  1        ///  -----------------------------------------------------------------------
  136  1        ///  Configuration of the U0C0 Fractional Divider:
  137  1        ///  -----------------------------------------------------------------------
  138  1        ///  - The Fractional divider is selected
  139  1        ///  - The step value STEP = 640
  140  1      
  141  1        U0C0_FDRL      =  0x8280;      // load U0C0 fractional divider register
  142  1      
  143  1        ///  -----------------------------------------------------------------------
  144  1        ///  Configuration of the U0C0 Baudrate Generator:
  145  1        ///  -----------------------------------------------------------------------
  146  1        ///  - The selected BaudRate is 100.000 kbaud
  147  1        ///  - The PreDivider for CTQ, PCTQ = 1
  148  1        ///  - The Denominator for CTQ, DCTQ = 9
  149  1        ///  - The Divider factor PDIV = 24
  150  1      
  151  1        U0C0_BRGL      =  0x2500;      // load U0C0 load baud rate generator 
  152  1                                       // register L
  153  1        U0C0_BRGH      =  0x0018;      // load U0C0 load baud rate generator 
  154  1                                       // register H
  155  1      
  156  1        ///  -----------------------------------------------------------------------
  157  1        ///  Configuration of the U0C0 Input Control Register:
  158  1        ///  -----------------------------------------------------------------------
  159  1        ///  - The data input DX0B (P10.1) is selected
  160  1      
  161  1        U0C0_DX0CR     =  0x0001;      // load U0C0 input control register(Data)
  162  1      
  163  1        ///  - The clock input DX1B (P10.2) is selected
  164  1      
  165  1        U0C0_DX1CR     =  0x0001;      // load U0C0 input control register(Clock)
  166  1      
  167  1        ///  -----------------------------------------------------------------------
  168  1        ///  Configuration of the U0C0 Interrupt Node Pointer Register:
  169  1        ///  -----------------------------------------------------------------------
  170  1      
  171  1        U0C0_INPRL     =  0x0000;      // load U0C0 Interrupt Node Pointer register 
  172  1                                       // L
  173  1        U0C0_INPRH     =  0x0000;      // load U0C0 Interrupt Node Pointer register 
  174  1                                       // H
  175  1      
  176  1        ///  -----------------------------------------------------------------------
  177  1        ///  Configuration of the U0C0 Shift Control:
  178  1        ///  -----------------------------------------------------------------------
C166 COMPILER V7.00, U0C0                                                                  04/01/2020 13:45:19 PAGE 4   

  179  1        ///  - Transmit/Receive shift MSB first
  180  1        ///  - The passive data level is 1
  181  1        ///  - The shift control signal is active, data frame transfer is possible
  182  1        ///  - The frame length is 63 and the word length is 7
  183  1      
  184  1        U0C0_SCTRL     =  0x0303;      // load U0C0 shift control register L
  185  1        U0C0_SCTRH     =  0x073F;      // load U0C0 shift control register H
  186  1      
  187  1        ///  -----------------------------------------------------------------------
  188  1        ///  Configuration of the U0C0 Transmit Control/Status Register:
  189  1        ///  -----------------------------------------------------------------------
  190  1        ///  - TBUF data single shot mode: TBUF data transferred only once
  191  1        ///  - TBUF data transmission starts if TDV = 1
  192  1      
  193  1        U0C0_TCSRL     =  0x0500;      // load U0C0 transmit control/status 
  194  1                                       // register L
  195  1        U0C0_TCSRH     =  0x0000;      // load U0C0 transmit control/status 
  196  1                                       // register H
  197  1      
  198  1        ///  -----------------------------------------------------------------------
  199  1        ///  Configuration of the U0C0 Protocol Control Register:
  200  1        ///  -----------------------------------------------------------------------
  201  1        ///  - The Symbol Timing, A symbol contains 10 time quanta
  202  1      
  203  1        U0C0_PCRL      =  0x0000;      // load U0C0 protocol control register L
  204  1        U0C0_PCRH      =  0x3000;      // load U0C0 protocol control register H
  205  1      
  206  1        ///  -----------------------------------------------------------------------
  207  1        ///  Configuration of U0C0 FIFO:
  208  1        ///  -----------------------------------------------------------------------
  209  1        ///  -----------------------------------------------------------------------
  210  1        ///  Configuration of U0C0 Transmitter Buffer Conrol Register:
  211  1        ///  -----------------------------------------------------------------------
  212  1        ///  - Transmit FIFO buffer is disabled
  213  1        ///  -----------------------------------------------------------------------
  214  1        ///  Configuration of U0C0 Receiver Buffer Conrol Register:
  215  1        ///  -----------------------------------------------------------------------
  216  1        ///  - Receive FIFO buffer is disabled
  217  1        ///  -----------------------------------------------------------------------
  218  1        ///  Configuration of the used U0C0 Interrupts:
  219  1        ///  -----------------------------------------------------------------------
  220  1        ///  -----------------------------------------------------------------------
  221  1        ///  Configuration of the used U0C0 Port Pins:
  222  1        ///  -----------------------------------------------------------------------
  223  1        ///  - P10.1 is used for USIC0 Channel0 Shift Data output(DOUT)
  224  1        ///  - P10.2 is used for USIC0 Channel0 Shift Clock output(SCLKOUT)
  225  1      
  226  1        P10_IOCR01 = 0x00D0;    //set direction register
  227  1        P10_IOCR02 = 0x00D0;    //set direction register
  228  1      
  229  1      
  230  1      
  231  1        // USER CODE BEGIN (U0C0_Function,3)
  232  1      
  233  1        // USER CODE END
  234  1      
  235  1      
  236  1      
  237  1      } //  End of function U0C0_IIC_vInit
  238         
  239         
  240         //****************************************************************************
C166 COMPILER V7.00, U0C0                                                                  04/01/2020 13:45:19 PAGE 5   

  241         // @Function      void U0C0_IIC_vWriteData(uword uwTDF, uword uwData) 
  242         //
  243         //----------------------------------------------------------------------------
  244         // @Description   This function writes data to the U0C0 Transmit buffer 
  245         //                (U0C0_TBUF00). valid TDF & 8 bit data.
  246         //                The valid TDF formats are available in U0C0 header file
  247         //                Defines section. Ex..
  248         //                 Master start                  U0C0TDF_MStart
  249         //                 Master Transmit               U0C0TDF_MTxData
  250         //                 Master receive with Ack 0     U0C0TDF_MRxAck0
  251         //                 Master receive with Ack 1     U0C0TDF_MRxAck1
  252         //                 Master stop                   U0C0TDF_MStop
  253         //                
  254         //                7 bit address mode:
  255         //                if 7 bit slave address is 0x17 at PCRL[15:9] of the slave,
  256         //                user has to transmit 0x2E (0x17 << 1) to select this slave.
  257         //                Please refer User Manual for the detailed explanation.
  258         //                
  259         //                User can use the macro U0C0_IIC_vSlaveAddrFormat(Addr)
  260         //                to left shift the address by 1,
  261         //                U0C0_IIC_vWriteData(U0C0TDF_MStart, 
  262         //                U0C0_IIC_vSlaveAddrFormat(Addr) + U0C0IIC_WRITE);
  263         //                
  264         //                10 bit address mode:
  265         //                if 10 bit slave address is 0x1C4 at PCRL[10:9] & PCRL[7:0]
  266         //                of the slave, user has to transmit 0xF2 first and 
  267         //                0xC4 second to select this slave.
  268         //                
  269         //                U0C0_IIC_vWriteData(U0C0TDF_MStart, uwDeviceAddr + 
  270         //                U0C0IIC_WRITE);
  271         //                U0C0_IIC_vWriteData(U0C0TDF_MTxData, uwSubAddr);
  272         //
  273         //----------------------------------------------------------------------------
  274         // @Returnvalue   None
  275         //
  276         //----------------------------------------------------------------------------
  277         // @Parameters    uwTDF: 
  278         //                valid Transmit Data Format TDF code
  279         // @Parameters    uwData: 
  280         //                8 bit data to be transmitted
  281         //
  282         //----------------------------------------------------------------------------
  283         // @Date          2020/1/14
  284         //
  285         //****************************************************************************
  286         
  287         // USER CODE BEGIN (IICWriteData,1)
  288                  unsigned int O = 0;
  289         // USER CODE END
  290         
  291         void U0C0_IIC_vWriteData(uword uwTDF, uword uwData)
  292         {
  293  1      
  294  1        while(U0C0_TCSRL & 0x0080);             // check TDV, wait until TBUF is ready
  295  1      
  296  1        U0C0_PSCR   |= 0x2000;                                       // clear PSR_TBIF
  297  1        U0C0_TBUF00  = ((uwTDF << 8) & 0x0700) | (uwData & 0x00FF);  // load TBUF00
  298  1      
  299  1      } //  End of function U0C0_IIC_vWriteData
  300         
  301         
  302         //****************************************************************************
C166 COMPILER V7.00, U0C0                                                                  04/01/2020 13:45:19 PAGE 6   

  303         // @Function      uword U0C0_IIC_uwReadData(void) 
  304         //
  305         //----------------------------------------------------------------------------
  306         // @Description   This function reads out the content of the U0C0 receive 
  307         //                buffer (U0C0_RBUF).
  308         //
  309         //----------------------------------------------------------------------------
  310         // @Returnvalue   Value of the register U0C0_RBUF
  311         //
  312         //----------------------------------------------------------------------------
  313         // @Parameters    None
  314         //
  315         //----------------------------------------------------------------------------
  316         // @Date          2020/1/14
  317         //
  318         //****************************************************************************
  319         
  320         // USER CODE BEGIN (IICReadData,1)
  321         
  322         // USER CODE END
  323         
  324         uword U0C0_IIC_uwReadData(void)
  325         {
  326  1      
  327  1        while(!((U0C0_PSR & 0x8000) || (U0C0_PSR & 0x4000)));
  328  1      
  329  1        U0C0_PSCR   |= 0xC000;         // clear PSR_AIF & PSR_RIF
  330  1        return(U0C0_RBUF);             // return receive buffer register
  331  1      
  332  1      } //  End of function U0C0_IIC_uwReadData
  333         
  334         
  335         
  336         
  337         // USER CODE BEGIN (U0C0_General,10)
  338         
  339         // USER CODE END
  340         


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         246     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =           2     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =           6     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
